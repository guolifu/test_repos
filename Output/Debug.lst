C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN .\Output\Debug.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Common\Code\Debug.c OPTIMIZE(9,SPEED) DEFINE(_PROJECT=_RTD2472D_DEMO_BOARD)
                    - PRINT(.\Output\Debug.lst) OBJECT(.\Output\Debug.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2010>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : Debug.c No.0000
  17          // Update Note  :
  18          //
  19          //----------------------------------------------------------------------------------------------------
  20          
  21          
  22          #define __Debug__
  23          
  24          #include "Common\Header\Include.h"
  25          
  26          #if((_DEBUG_TOOL == _ISP_FOR_RTD2120) && (_DEBUG_MESSAGE_SUPPORT == _ON))
              //--------------------------------------------------
              // Description  : Debug Message process
              // Input Value  : None
              // Output Value : None
              //--------------------------------------------------
              void CDebugMessage(BYTE *pArray1, DWORD pArray2)
              {
                  bit halt = 0;
                  BYTE index = 0, length = 0, checksum = 0;
              
                  if(ucDdcciData[0] == 0x55)
                  {
                      g_bDebugMessageEven = _TRUE;
                  }
              
                  if(g_bDebugMessageEven == _FALSE)
                  {
                      return;
                  }
              
                  if(*pArray1 == 0)
                  {
                      TxBUF = 0xFC;
                      TxTemp = 0xFC;
                      return;
                  }
              
                  halt = 1; // FW stop
C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 2   

              
                  if(g_bDebugMessageStart == 0)
                  {
                      TxBUF = 0xF1;
                      TxTemp = 0xF1;
                  }
              
                  for(index = 0; index < 4; index++)
                  {
                      pDebugMessageBUF[index] = 0;
                  }
              
                  do
                  {
                      if(bRunCommand)
                      {
                          switch(ucDdcciData[0])
                          {
                              case 0x20:  //Handshake Setting
                                  TxBUF = TxTemp;
                                  break;
              
                              case 0x25:  //Debug Message Start
                                  if(g_bDebugMessageStart == _FALSE)
                                  {
                                      if(*pArray1 != 0)
                                      {
                                          index = 0;      //Sending Index
                                          length = 0;     //Total Length
                                          checksum = 0;
              
                                          do
                                          {
                                              checksum ^= pArray1[length];
              
                                          }while((pArray1[length++] != 0) && (length < 240)); //To count the length of p
             -Array1 and checksum
              
                                          pDebugMessageBUF[0] = (BYTE)(pArray2 >> 24);
                                          pDebugMessageBUF[1] = (BYTE)(pArray2 >> 16);
                                          pDebugMessageBUF[2] = (BYTE)(pArray2 >> 8);
                                          pDebugMessageBUF[3] = (BYTE)(pArray2);
                                          checksum = checksum ^ pDebugMessageBUF[0] ^ pDebugMessageBUF[1] ^ pDebugMessag
             -eBUF[2] ^ pDebugMessageBUF[3];
              
                                          length = (length - 1 + 4) + 4;    //Total Length = length of {Sending Data + S
             -tart Code(2) + Length Code(1) + CheckSum(1)}
                                          g_bDebugMessageStart = 1; //Debug Message Start
              
                                          MCU_I2C_DATA_OUT_FF2A = 0xFA;
                                          TxBUF = 0xFA;
                                      }
                                      else
                                      {
                                          //initial setting
                                          g_bDebugMessageStart = 0;
                                          bDataOutEnd = 0;
                                          index = 0;
                                          length = 0;
                                          TxBUF = 0;
                                      }
                                  }
C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 3   

                                  else
                                  {
                                      if((bDataOutEnd == 0) && (length != 0xff))
                                      {
                                          if(index == 0)
                                          {
                                              TxBUF = 0xFA;                   //Start of Check Code 1
                                          }
                                          else if(index == 1)
                                          {
                                              TxBUF = 0xF5;                   //Start of Check Code 2
                                          }
                                          else if(index == 2)
                                          {
                                              TxBUF = length - 4;             //Length Code
                                          }
                                          else if(index == length - 1)
                                          {
                                              TxBUF = checksum;               //CheckSum Code
                                          }
                                          else
                                          {
                                              if(index < length - 5)          //Sending Data
                                              {
                                                  TxBUF = pArray1[index - 3];
                                              }
                                              else
                                              {
                                                  TxBUF = pDebugMessageBUF[index - (length - 5)];
                                              }
              
                                          }
              
                                          if(index < length)
                                          {
                                              index++;
                                          }
                                          else
                                          {
                                              index = 0;
                                              TxBUF = 0xFA;
                                          }
              
                                          bDataOutEnd = 1;                    //End of Data Output
                                      }
                                  }
                                  break;
              
                              case 0x2A:  //Debug Message End
                                  if(g_bDebugMessageStart)
                                  {
                                      g_bDebugMessageStart = 0; //Debug Message End
                                      bDataOutEnd = 0;
                                      halt = 0;               // FW run
                                      TxTemp = 0x00;
                                      TxBUF = 0xF7;
                                  }
                                  break;
              
                              case 0x2F:  //Debug Message Event finsih
                                  TxBUF = 0xF5;
                                  MCU_I2C_DATA_OUT_FF2A = 0xF5;
C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 4   

                                  g_bDebugMessageStart = 0;
                                  bDataOutEnd = 0;
                                  g_bDebugMessageEven = 0;
                                  TxTemp = 0x00;
                                  halt = 0;
                                  break;
              
                              default:
                                  break;
                          }
              
                          bRunCommand = 0;
              
                          g_ucDdcciCommandNumber = 0;
                      }
                  }
                  while(halt != 0);
              
                  g_bDebugMessageStart = 0;
                  bDataOutEnd = 0;
              }
              #endif  // End of #if((_DEBUG_MESSAGE_SUPPORT == _ON) && (_DEBUG_TOOL == _ISP_FOR_RTD2120))
 198          
 199          #if((_DEBUG_TOOL == _ISP_FOR_EMBEDDED) && (_DEBUG_MESSAGE_SUPPORT == _ON) && (_POLLING_MESSAGE_NBYTES == _
             -POLLING_BY_1BYTE))
              //--------------------------------------------------
              // Description  : Debug Message process
              // Input Value  : None
              // Output Value : None
              //--------------------------------------------------
              void CDebugMessage(BYTE *pArray1, DWORD pArray2)
              {
                  BYTE cnt = 0, length = 0, checksum = 0;
              
                  if(ucDdcciData[0] == 0x55)
                  {
                      g_bDebugMessageEven = _TRUE;
                  }
              
                  if(g_bDebugMessageEven == _FALSE)
                  {
                      return;
                  }
              
                  if(*pArray1 == 0)
                  {
                      MCU_I2C_IRQ_CTRL2_FF2A |= 0x20;
                      MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
                      MCU_I2C_DATA_OUT_FF26 = 0xFC;
                      MCU_I2C_IRQ_CTRL2_FF2A &= 0xDF;
                      return;
                  }
              
                  if((g_usFilterPro & 0xF800) == 0xC800)
                  {
                      switch(pArray1[0])
                      {
                          case '0':
                              if((g_usFilterPro & _BIT0) == 0)
                              {
                                  return;
                              }
C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 5   

                              break;
              
                          case '1':
                              if((g_usFilterPro & _BIT1) == 0)
                              {
                                  return;
                              }
                              break;
              
                          case '2':
                              if((g_usFilterPro & _BIT2) == 0)
                              {
                                  return;
                              }
                              break;
              
                          case '3':
                              if((g_usFilterPro & _BIT3) == 0)
                              {
                                  return;
                              }
                              break;
              
                          case '4':
                              if((g_usFilterPro & _BIT4) == 0)
                              {
                                  return;
                              }
                              break;
              
                          case '5':
                              if((g_usFilterPro & _BIT5) == 0)
                              {
                                  return;
                              }
                              break;
              
                          case '6':
                              if((g_usFilterPro & _BIT6) == 0)
                              {
                                  return;
                              }
                              break;
              
                          case '7':
                              if((g_usFilterPro & _BIT7) == 0)
                              {
                                  return;
                              }
                              break;
              
                          case '8':
                              if((g_usFilterPro & _BIT8) == 0)
                              {
                                  return;
                              }
                              break;
              
                          case '9':
                              if((g_usFilterPro & _BIT9) == 0)
                              {
                                  return;
C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 6   

                              }
                              break;
              
                          default:
                              if((g_usFilterPro & _BIT10) == 0)
                              {
                                  return;
                              }
                              break;
                      }
                  }
              
                  g_bFwHalt = 1;
              
                  for(cnt = 0; cnt < 4; cnt++)
                  {
                      pDebugMessageBUF[cnt] = 0;
                  }
              
                  if(g_bDebugMessageStart == 0)
                  {
                      MCU_I2C_IRQ_CTRL2_FF2A |= 0x20;
                      MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
                      MCU_I2C_DATA_OUT_FF26 = 0xF1;
                  }
              
                  do
                  {
                      if(bRunCommand)
                      {
                          MCU_I2C_IRQ_CTRL2_FF2A |= 0x20;
                          cnt = 0;
              
                          switch(ucDdcciData[0])
                          {
                              case 0x20:
                              case 0x55:
                                  if(ucDdcciData[1] == 0x5A)
                                  {
                                      do
                                      {
                                          MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
                                          MCU_I2C_DATA_OUT_FF26 = 0xE2;
              
                                      }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_COUNT));
                                  }
                                  else if(ucDdcciData[1] == 0xA5)
                                  {
                                      do
                                      {
                                          MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
                                          MCU_I2C_DATA_OUT_FF26 = 0xE9;
              
                                      }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_COUNT));
                                  }
                                  else
                                  {
                                      do
                                      {
                                          MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
                                          MCU_I2C_DATA_OUT_FF26 = 0xF1;
              
C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 7   

                                      }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_COUNT));
                                  }
                                  break;
              
                              case 0x25:
                                  if(g_bDebugMessageStart == _FALSE)
                                  {
                                      if(*pArray1 != 0)
                                      {
                                          length = 0;
                                          checksum = 0;
              
                                          do
                                          {
                                              checksum ^= pArray1[length];
              
                                          }while((pArray1[length++] != 0) && (length < 240)); //To count the length of p
             -Array1 and checksum
              
                                          pDebugMessageBUF[0] = (BYTE)(pArray2 >> 24);
                                          pDebugMessageBUF[1] = (BYTE)(pArray2 >> 16);
                                          pDebugMessageBUF[2] = (BYTE)(pArray2 >> 8);
                                          pDebugMessageBUF[3] = (BYTE)(pArray2);
                                          checksum = checksum ^ pDebugMessageBUF[0] ^ pDebugMessageBUF[1] ^ pDebugMessag
             -eBUF[2] ^ pDebugMessageBUF[3];
              
                                          length = (length - 1 + 4) + 4;    //Total Length = length of {Sending Data + S
             -tart Code(2) + Length Code(1) + CheckSum(1)}
                                          g_bDebugMessageStart = 1; //Debug Message Start
              
                                          do
                                          {
                                              MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
                                              MCU_I2C_DATA_OUT_FF26 = 0xFA;
              
                                          }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_COUNT)
             -);
                                      }
                                      else
                                      {
                                          //initial setting
                                          g_bDebugMessageStart = 0;
                                          length = 0;
                                      }
                                  }
                                  else
                                  {
                                      if((length != 0xff))
                                      {
                                          if(ucDdcciData[1] >= length)
                                          {
                                              ucDdcciData[1] = 0;
                                          }
                                          if(ucDdcciData[1] == 0)
                                          {
                                              do
                                              {
                                                  MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
                                                  MCU_I2C_DATA_OUT_FF26 = 0xFA;
              
                                              }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_CO
             -UNT));
C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 8   

                                          }
                                          else if(ucDdcciData[1] == 1)
                                          {
                                              do
                                              {
                                                  MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
                                                  MCU_I2C_DATA_OUT_FF26 = 0xF5;
              
                                              }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_CO
             -UNT));
                                          }
                                          else if(ucDdcciData[1] == 2)
                                          {
                                              do
                                              {
                                                  MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
                                                  MCU_I2C_DATA_OUT_FF26 = length - 4;
              
                                              }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_CO
             -UNT));
                                          }
                                          else if(ucDdcciData[1] == length - 1)
                                          {
                                              do
                                              {
                                                  MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
                                                  MCU_I2C_DATA_OUT_FF26 = checksum;
              
                                              }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_CO
             -UNT));
                                          }
                                          else
                                          {
                                              do
                                              {
                                                  MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
                                                  if(ucDdcciData[1] < length - 5)
                                                  {
                                                      MCU_I2C_DATA_OUT_FF26 = pArray1[ucDdcciData[1] - 3];
                                                  }
                                                  else
                                                  {
                                                      MCU_I2C_DATA_OUT_FF26 = pDebugMessageBUF[ucDdcciData[1] - (length 
             -- 5)];
                                                  }
              
                                              }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_CO
             -UNT));
                                          }
                                      }
                                  }
                                  break;
              
                              case 0x2A:  //Debug Message End
                                  if(g_bDebugMessageStart)
                                  {
                                      g_bDebugMessageStart = 0; //Debug Message End
                                      g_bFwHalt = 0;
                                      do
                                      {
                                          MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
                                          MCU_I2C_DATA_OUT_FF26 = 0xF7;
C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 9   

              
                                      }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_COUNT));
                                  }
                                  break;
              
                              case 0x2F:  //Debug Message Event finsih
                                  do
                                  {
                                      MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
                                      MCU_I2C_DATA_OUT_FF26 = 0xF5;
              
                                  }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_COUNT));
              
                                  g_bDebugMessageStart = 0;
                                  g_bFwHalt = 0;
                                  g_bDebugMessageEven = 0;
                                  MCU_I2C_IRQ_CTRL2_FF2A &= 0xBF;
                                  break;
              
                              default:
                                  break;
                          }
              
                          bRunCommand = 0;
              
                          g_ucDdcciCommandNumber = 0;
              
                          MCU_I2C_IRQ_CTRL2_FF2A &= 0xDF;
              
              #if(_DDC_CHANNEL_SEL == _HDMI_DDC_CHANNEL)
                          MCU_HDMI_DDC_CTRL2_FF2E &= 0xFE;
              #elif(_DDC_CHANNEL_SEL == _DVI_DDC_CHANNEL)
                          MCU_DVI_DDC_CTRL2_FF20 &= 0xFE;
              #else
                          MCU_ADC_DDC_CTRL2_FF1D &= 0xFE;
              #endif
                      }
                  }
                  while(g_bFwHalt != 0);
                  g_bDebugMessageStart = 0;
                  g_bFwHalt = 0;
              }
              #endif  // End of #if((_DEBUG_TOOL == _ISP_FOR_EMBEDDED) && (_DEBUG_MESSAGE_SUPPORT == _ON) && (_POLLING_M
             -ESSAGE_NBYTES == _POLLING_BY_1BYTE))
 518          
 519          #if((_DEBUG_TOOL == _ISP_FOR_EMBEDDED) && (_DEBUG_MESSAGE_SUPPORT == _ON) && (_POLLING_MESSAGE_NBYTES == _
             -POLLING_BY_16BYTE))
 520          //--------------------------------------------------
 521          // Description  : Debug Message process
 522          // Input Value  : None
 523          // Output Value : None
 524          //--------------------------------------------------
 525          void CDebugMessage(BYTE *pArray1, DWORD pArray2)
 526          {
 527   1          BYTE cnt = 0, length = 0, checksum = 0, index = 0;
 528   1      
 529   1          if(ucDdcciData[0] == 0x55)
 530   1          {
 531   2              g_bDebugMessageEven = _TRUE;
 532   2          }
 533   1      
 534   1          if(g_bDebugMessageEven == _FALSE)
C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 10  

 535   1          {
 536   2              return;
 537   2          }
 538   1      
 539   1          if(*pArray1 == 0)
 540   1          {
 541   2              MCU_I2C_IRQ_CTRL2_FF2A |= 0x20;
 542   2              MCU_I2C_IRQ_CTRL2_FF2A |= 0x40; //Reset IIC Data Buffer
 543   2              MCU_I2C_DATA_OUT_FF26 = 0xFC;
 544   2              return;
 545   2          }
 546   1      
 547   1          if((g_usFilterPro & 0xF800) == 0xC800)
 548   1          {
 549   2              switch(pArray1[0])
 550   2              {
 551   3                  case '0':
 552   3                      if((g_usFilterPro & _BIT0) == 0)
 553   3                      {
 554   4                          return;
 555   4                      }
 556   3                      break;
 557   3      
 558   3                  case '1':
 559   3                      if((g_usFilterPro & _BIT1) == 0)
 560   3                      {
 561   4                          return;
 562   4                      }
 563   3                      break;
 564   3      
 565   3                  case '2':
 566   3                      if((g_usFilterPro & _BIT2) == 0)
 567   3                      {
 568   4                          return;
 569   4                      }
 570   3                      break;
 571   3      
 572   3                  case '3':
 573   3                      if((g_usFilterPro & _BIT3) == 0)
 574   3                      {
 575   4                          return;
 576   4                      }
 577   3                      break;
 578   3      
 579   3                  case '4':
 580   3                      if((g_usFilterPro & _BIT4) == 0)
 581   3                      {
 582   4                          return;
 583   4                      }
 584   3                      break;
 585   3      
 586   3                  case '5':
 587   3                      if((g_usFilterPro & _BIT5) == 0)
 588   3                      {
 589   4                          return;
 590   4                      }
 591   3                      break;
 592   3      
 593   3                  case '6':
 594   3                      if((g_usFilterPro & _BIT6) == 0)
 595   3                      {
 596   4                          return;
C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 11  

 597   4                      }
 598   3                      break;
 599   3      
 600   3                  case '7':
 601   3                      if((g_usFilterPro & _BIT7) == 0)
 602   3                      {
 603   4                          return;
 604   4                      }
 605   3                      break;
 606   3      
 607   3                  case '8':
 608   3                      if((g_usFilterPro & _BIT8) == 0)
 609   3                      {
 610   4                          return;
 611   4                      }
 612   3                      break;
 613   3      
 614   3                  case '9':
 615   3                      if((g_usFilterPro & _BIT9) == 0)
 616   3                      {
 617   4                          return;
 618   4                      }
 619   3                      break;
 620   3      
 621   3                  default:
 622   3                      if((g_usFilterPro & _BIT10) == 0)
 623   3                      {
 624   4                          return;
 625   4                      }
 626   3                      break;
 627   3              }
 628   2          }
 629   1      
 630   1          g_bDebugMessageStart = 0;
 631   1          g_bFwHalt = 1;
 632   1      
 633   1          MCU_I2C_IRQ_CTRL2_FF2A |= 0x20;
 634   1          MCU_I2C_IRQ_CTRL2_FF2A |= 0x40; //Reset IIC Data Buffer
 635   1          MCU_I2C_DATA_OUT_FF26 = 0xF1;
 636   1      
 637   1          for(checksum = 0; checksum < 4; checksum++)
 638   1          {
 639   2              pDebugMessageBUF[checksum] = 0;
 640   2          }
 641   1      
 642   1          do
 643   1          {
 644   2              if(bRunCommand)
 645   2              {
 646   3                  MCU_I2C_IRQ_CTRL2_FF2A |= 0x20;
 647   3                  cnt = 0;
 648   3      
 649   3                  switch(ucDdcciData[0])
 650   3                  {
 651   4                      case 0x20:  //Handshake Setting
 652   4                      case 0x55:
 653   4                          if(ucDdcciData[1] == 0x5A)
 654   4                          {
 655   5                              do
 656   5                              {
 657   6                                  MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
 658   6                                  MCU_I2C_DATA_OUT_FF26 = 0xE7;
C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 12  

 659   6      
 660   6                              }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_COUNT));
 661   5                          }
 662   4                          else if(ucDdcciData[1] == 0xA5)
 663   4                          {
 664   5                              do
 665   5                              {
 666   6                                  MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
 667   6                                  MCU_I2C_DATA_OUT_FF26 = 0xEC;
 668   6      
 669   6                              }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_COUNT));
 670   5                          }
 671   4                          else
 672   4                          {
 673   5                              do
 674   5                              {
 675   6                                  MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
 676   6                                  MCU_I2C_DATA_OUT_FF26 = 0xF1;
 677   6      
 678   6                              }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_COUNT));
 679   5                          }
 680   4                          break;
 681   4      
 682   4                      case 0x25:  //Debug Message Start
 683   4                          if(ucDdcciData[1] == 0)
 684   4                          {
 685   5                              do
 686   5                              {
 687   6                                  MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
 688   6                                  length = 0;     //Total Length
 689   6                                  index = 0;
 690   6                                  checksum = 0x00;//initial checksum
 691   6                                  do
 692   6                                  {
 693   7                                      checksum += pArray1[length];
 694   7      
 695   7                                  }while((pArray1[length++] != 0) && (length < 240)); //To count the length of p
             -Array1 and checksum
 696   6      
 697   6                                  pDebugMessageBUF[0] = (BYTE)(pArray2 >> 24);
 698   6                                  pDebugMessageBUF[1] = (BYTE)(pArray2 >> 16);
 699   6                                  pDebugMessageBUF[2] = (BYTE)(pArray2 >> 8);
 700   6                                  pDebugMessageBUF[3] = (BYTE)(pArray2);
 701   6                                  length = length - 1;
 702   6      
 703   6                                  MCU_I2C_DATA_OUT_FF26 = 0xFA;
 704   6                                  MCU_I2C_DATA_OUT_FF26 = 0xF5;
 705   6                                  MCU_I2C_DATA_OUT_FF26 = length;
 706   6                                  MCU_I2C_DATA_OUT_FF26 = pDebugMessageBUF[0];
 707   6                                  MCU_I2C_DATA_OUT_FF26 = pDebugMessageBUF[1];
 708   6                                  MCU_I2C_DATA_OUT_FF26 = pDebugMessageBUF[2];
 709   6                                  MCU_I2C_DATA_OUT_FF26 = pDebugMessageBUF[3];
 710   6      
 711   6                                  index = checksum;
 712   6                                  checksum = 0x0F;
 713   6                                  checksum = checksum + length + pDebugMessageBUF[0] + pDebugMessageBUF[1] + pDe
             -bugMessageBUF[2] + pDebugMessageBUF[3];
 714   6      
 715   6                                  pDebugMessageBUF[0] = checksum + index;// save checksum for all string and dat
             -a
 716   6                                  MCU_I2C_DATA_OUT_FF26 = pDebugMessageBUF[0];//checksum for all string and data
 717   6                                  MCU_I2C_DATA_OUT_FF26 = checksum + pDebugMessageBUF[0];
C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 13  

 718   6      
 719   6                              }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x09) && ((cnt++) < _DATA_OUT_COUNT));
 720   5                          }
 721   4                          else
 722   4                          {
 723   5                              do
 724   5                              {
 725   6                                  MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
 726   6                                  index = (ucDdcciData[1] - 1) * 15;
 727   6                                  checksum = ucDdcciData[1] + 0x0F;
 728   6                                  pDebugMessageBUF[0] = 1;
 729   6      
 730   6                                  do
 731   6                                  {
 732   7                                      MCU_I2C_DATA_OUT_FF26 = pArray1[index];
 733   7                                      checksum += pArray1[index];
 734   7                                      index++;
 735   7                                      pDebugMessageBUF[0] = pDebugMessageBUF[0] + 1;
 736   7      
 737   7                                  }while((index < (ucDdcciData[1] * 15)) && (pArray1[index] != 0));
 738   6      
 739   6                                  MCU_I2C_DATA_OUT_FF26 = checksum;
 740   6      
 741   6                              }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != pDebugMessageBUF[0]) && ((cnt++) < _DATA
             -_OUT_COUNT));
 742   5      
 743   5                              g_bDebugMessageStart = 1;
 744   5                          }
 745   4                          break;
 746   4      
 747   4                      case 0x2A:  //Debug Message End
 748   4                          if(g_bDebugMessageStart)
 749   4                          {
 750   5                              g_bDebugMessageStart = 0; //Debug Message End
 751   5                              g_bFwHalt = 0;
 752   5                              do
 753   5                              {
 754   6                                  MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
 755   6                                  MCU_I2C_DATA_OUT_FF26 = 0xF7;
 756   6      
 757   6                              }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_COUNT));
 758   5                          }
 759   4      
 760   4                          break;
 761   4      
 762   4                      case 0x2F:  //Debug Message Event finsih
 763   4                          do
 764   4                          {
 765   5                              MCU_I2C_IRQ_CTRL2_FF2A |= 0x40;
 766   5                              MCU_I2C_DATA_OUT_FF26 = 0xF5;
 767   5      
 768   5                          }while(((MCU_DDCCI_REMAIN_FF35 & 0x1F) != 0x01) && ((cnt++) < _DATA_OUT_COUNT));
 769   4      
 770   4                          g_bDebugMessageEven = 0;
 771   4                          g_bFwHalt = 0;
 772   4                          MCU_I2C_IRQ_CTRL2_FF2A &= 0xBF;
 773   4                          break;
 774   4      
 775   4                      default:
 776   4                          break;
 777   4                  }
 778   3      
C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 14  

 779   3                  bRunCommand = 0;
 780   3      
 781   3                  g_ucDdcciCommandNumber = 0;
 782   3      
 783   3                  MCU_I2C_IRQ_CTRL2_FF2A &= 0xDF;
 784   3      
 785   3      #if(_DDC_CHANNEL_SEL == _HDMI_DDC_CHANNEL)
                          MCU_HDMI_DDC_CTRL2_FF2E &= 0xFE;
              #elif(_DDC_CHANNEL_SEL == _DVI_DDC_CHANNEL)
                          MCU_DVI_DDC_CTRL2_FF20 &= 0xFE;
              #else
 790   3                  MCU_ADC_DDC_CTRL2_FF1D &= 0xFE;
 791   3      #endif
 792   3              }
 793   2          }
 794   1          while(g_bFwHalt != 0);
 795   1          g_bDebugMessageStart = 0;
 796   1          g_bFwHalt = 0;
 797   1      }
 798          #endif  // End of #if((_DEBUG_TOOL == _ISP_FOR_EMBEDDED) && (_DEBUG_MESSAGE_SUPPORT == _ON) && (_POLLING_M
             -ESSAGE_NBYTES == _POLLING_BY_16BYTE))
 799          
 800          #if(_DEBUG_TOOL == _ISP_FOR_EMBEDDED)
 801          //--------------------------------------------------
 802          // Description  : Check Time Out for Debug
 803          // Input Value  : None
 804          // Output Value : None
 805          //--------------------------------------------------
 806          void CDebugCheckTimeOut(void)
 807          {
 808   1      #if(_DDC_CHANNEL_SEL == _HDMI_DDC_CHANNEL)
              
                  if((MCU_HDMI_DDC_CTRL2_FF2E & _BIT0) == _BIT0)
                  {
                      if(g_usDebugCount > 0)
                      {
                          if(g_usDebugCount > _TIME_OUT_COUNT)
                          {
                              MCU_HDMI_DDC_CTRL2_FF2E &= 0xFE;
                              g_usDebugCount = 0;
                          }
                          else
                          {
                              g_usDebugCount++;
                          }
                      }
                  }
              
              #elif(_DDC_CHANNEL_SEL == _DVI_DDC_CHANNEL)
              
                  if((MCU_DVI_DDC_CTRL2_FF20 & _BIT0) == _BIT0)
                  {
                      if(g_usDebugCount > 0)
                      {
                          if(g_usDebugCount > _TIME_OUT_COUNT)
                          {
                              MCU_DVI_DDC_CTRL2_FF20 &= 0xFE;
                              g_usDebugCount = 0;
                          }
                          else
                          {
                              g_usDebugCount++;
C51 COMPILER V8.02   DEBUG                                                                 03/05/2012 13:24:13 PAGE 15  

                          }
                      }
                  }
              
              #else
 845   1      
 846   1          if((MCU_ADC_DDC_CTRL2_FF1D & _BIT0) == _BIT0)
 847   1          {
 848   2              if(g_usDebugCount > 0)
 849   2              {
 850   3                  if(g_usDebugCount > _TIME_OUT_COUNT)
 851   3                  {
 852   4                      MCU_ADC_DDC_CTRL2_FF1D &= 0xFE;
 853   4                      g_usDebugCount = 0;
 854   4                  }
 855   3                  else
 856   3                  {
 857   4                      g_usDebugCount++;
 858   4                  }
 859   3              }
 860   2          }
 861   1      #endif  // End of #if(_DDC_CHANNEL_SEL == _HDMI_DDC_CHANNEL)
 862   1      }
 863          #endif  // End of #if(_DEBUG_TOOL == _ISP_FOR_EMBEDDED)
 864          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    893    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
