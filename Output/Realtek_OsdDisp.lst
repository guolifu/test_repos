C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE REALTEK_OSDDISP
OBJECT MODULE PLACED IN .\Output\Realtek_OsdDisp.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE User\Realtek OSD\Code\Realtek_OsdDisp.c OPTIMIZE(9,SPEED) DEFINE(_PROJECT=_
                    -RTD2472D_DEMO_BOARD) PRINT(.\Output\Realtek_OsdDisp.lst) OBJECT(.\Output\Realtek_OsdDisp.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2010>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : OsdDisp.c No.0000
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          
  20          #define __REALTEK_OSDDISP__
  21          
  22          #include "Common\Header\Include.h"
  23          
  24          #if(_OSD_TYPE == _REALTEK_OSD)
  25          
  26          
  27          //--------------------------------------------------
  28          // Description  : Initial OSD flag state
  29          // Input Value  :
  30          // Output Value :
  31          //--------------------------------------------------
  32          void COsdDispInitial(void)
  33          {
  34   1      }
  35          
  36          
  37          //--------------------------------------------------
  38          // Description  :
  39          // Input Value  :
  40          // Output Value :
  41          //--------------------------------------------------
  42          void COsdDispColorProcess(void)
  43          {
  44   1      BYTE i,j;
  45   1          CEepromLoadBriConData();
  46   1      
  47   1          CEepromLoadColorTempData();
  48   1      
  49   1       //   CAdjustContrast(stConBriData.Contrast);
  50   1      #if _DEBUG_MESSAGE_SUPPORT
  51   1      CDebugMessage("stConBriData.Dicom_zp",stConBriData.Dicom);
  52   1      CDebugMessage("stConBriData.Gamma_zp",stConBriData.Gamma);
  53   1      CDebugMessage("stConBriData.Contrast_zp",stConBriData.Contrast);                                                                                
  54   1      #endif
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 2   

  55   1              CAdjustBrightness(stConBriData.Brightness);     
  56   1              
  57   1           if(!(stConBriData.Gamma==0)||(stConBriData.Gamma==4))//zhangping0602 for DC ON flower screen issue
  58   1              {
  59   2              Adjust_LUTtable(stConBriData.Gamma-1);
  60   2              stSystemData.BackLight=tOSD_DICOMlumi[3];
  61   2              }
  62   1               
  63   1          else
  64   1          
  65   1              {
  66   2              Adjust_LUTtable(stConBriData.Dicom+3);
  67   2              stSystemData.BackLight=tOSD_DICOMlumi[stConBriData.Dicom];//SJP20110726 0x00;//tOSD_DICOMlumi[stConBriDat
             -a.Dicom] ;//0x00;//
  68   2      
  69   2              }
  70   1              CAdjustBacklight(stSystemData.BackLight);
  71   1              
  72   1      
  73   1      #if(_VIVID_COLOR_FUCTION == _ON)
              
                  COsdDispVividColorHLWindow();
                  COsdDispVividColor();
              
              #endif // End of #if(_VIVID_COLOR_FUCTION == _ON)
  79   1      
  80   1      }
*** WARNING C280 IN LINE 44 OF USER\REALTEK OSD\CODE\REALTEK_OSDDISP.C: 'i': unreferenced local variable
*** WARNING C280 IN LINE 44 OF USER\REALTEK OSD\CODE\REALTEK_OSDDISP.C: 'j': unreferenced local variable
  81          
  82          //----------------------------------------------------------------------------------------------------
  83          // Changeover Functions
  84          //----------------------------------------------------------------------------------------------------
  85          BYTE COsdDispContrastChangeover(BYTE ucSelect, BYTE ucValue)
  86          {
  87   1          if(GET_INPUTSOURCE_TYPE() == _SOURCE_DVI)
  88   1          {
  89   2              ucValue -= 7;
  90   2          }
  91   1      
  92   1      //    ucValue = ((WORD)ucValue * (_CONTRAST_MAX - _CONTRAST_MIN) / 100) + _CONTRAST_MIN;
  93   1      
  94   1          ucValue = (((WORD)stColorTempData.ColorTemp[ucSelect] * ucValue / 128) > 255) ? 255 : (BYTE)((WORD)stC
             -olorTempData.ColorTemp[ucSelect] * ucValue / 128);
  95   1      
  96   1          return ucValue;
  97   1      }
  98          
  99          /*
 100          BYTE COsdDispBacklightChangeover(BYTE ucValue)
 101          {
 102              ucValue = ((WORD)ucValue * (_BACKLIGHT_MAX-_BACKLIGHT_MIN)/100) + _BACKLIGHT_MIN;
 103          
 104              return ucValue;
 105          }
 106          */
 107          
 108          //----------------------------------------------------------------------------------------------------
 109          // OSD Display Functions
 110          //----------------------------------------------------------------------------------------------------
 111          
 112          //--------------------------------------------------
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 3   

 113          // Description  :
 114          // Input Value  :
 115          // Output Value :
 116          //--------------------------------------------------
 117          void COsdDispFirstTimeLoadFont(void)
 118          {
 119   1          CScalerLoadHardwareVLCFont(tFONT_GLOBAL, 0x00);
 120   1          CScalerLoadHardwareVLCFont(tFONT_GLOBAL_ICON, 0xd2);
 121   1      }
 122          
 123          //--------------------------------------------------
 124          // Description  :
 125          // Input Value  :
 126          // Output Value :
 127          //--------------------------------------------------
 128          void COsdDispAutoProc(void)
 129          {
 130   1          // V013 VGA Patch Note (10) 20100416 Modify Start
 131   1          // Patch Reason : Support Auto Config For Yuv Color.
 132   1          /*
 133   1          if(GET_INPUTSOURCE_TYPE() == _SOURCE_VGA)
 134   1          */
 135   1      #if((_YUV_AUTO_CONFIG_SUPPORT == _ON) && (_YPBPR_SUPPORT == _ON))
 136   1          if((GET_INPUTSOURCE_TYPE() == _SOURCE_VGA) || (GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR))
 137   1      #else
                  if(GET_INPUTSOURCE_TYPE() == _SOURCE_VGA)
              #endif
 140   1          // V013 VGA Patch Note (10) 20100416 Modify End
 141   1          {
 142   2      
 143   2              // V012 Modify 20100304 Start
 144   2              // V012 Patch Note (1) : Add RGB/YUV color space convert function.
 145   2      
 146   2              // V013 VGA Patch Note (10) 20100416 Modify Start
 147   2              // Patch Reason : Support Auto Config For Yuv Color.
 148   2              /*
 149   2              #if(_COLOR_FORMAT_CONVERT == _ON)
 150   2              if(GET_COLOR_FORMAT_STATUS() == _YUV_COLOR_FORMAT)
 151   2              {
 152   2                  return;
 153   2              }
 154   2              #endif
 155   2              */
 156   2      #if((_COLOR_FORMAT_CONVERT == _ON) && (_YUV_AUTO_CONFIG_SUPPORT == _OFF))
                      if(GET_COLOR_FORMAT_STATUS() == _YUV_COLOR_FORMAT)
                      {
                          return;
                      }
              #endif
 162   2              // V013 VGA Patch Note (10) 20100416 Modify End
 163   2      
 164   2              // V012 Modify 20100304 End
 165   2      
 166   2              COsdDispAutoProcPrevWork();
 167   2              CScalerLoadHardwareVLCFont(tFONT_AUTOCONFIG, 0x60);
 168   2      
 169   2              COsdFxDrawWindow(XSTART(0), YSTART(0), XEND(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_
             -AUTO_STR)*12), YEND(140), tOSD_WINDOW2_STYLE);
 170   2              COsdFxChangeWindowColor(COLOR00(_CP_DARKBLUE), tOSD_WINDOW2_STYLE);
 171   2              COsdFxDrawWindow(XSTART(10), YSTART(20), XEND(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOS
             -D_AUTO_STR))*12 - 10, YEND(120), tOSD_WINDOW6_STYLE);
 172   2              COsdFxChangeWindowColor(COLOR00(_CP_LIGHTBLUE), tOSD_WINDOW6_STYLE);
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 4   

 173   2      
 174   2              COsdFxSetPosition(WIDTH(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_AUTO_STR)*12), WIDTH
             -(140), 100, 100, 0x01);
 175   2      
 176   2              COsdFxLoadIcon(ROW(3), COL(3), tOSD_AUTO_ICO);
 177   2              COsdFxLoadText(ROW(4), COL(7), stOsdUserData.Language, tOSD_AUTO_STR);
 178   2      
 179   2              COsdFxEnableOsd();
 180   2      
 181   2              CAutoDoAutoConfig();
 182   2      
 183   2              COsdFxDisableOsd();
 184   2          }
 185   1      }
 186          
 187          //--------------------------------------------------
 188          // Description  :
 189          // Input Value  :
 190          // Output Value :
 191          //--------------------------------------------------
 192          void COsdDispAutoColorProc(void)
 193          {
 194   1      #if(_YPBPR_SUPPORT == _ON)
 195   1          if((GET_INPUTSOURCE_TYPE() == _SOURCE_VGA) || (GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR))
 196   1      #else
                  if(GET_INPUTSOURCE_TYPE() == _SOURCE_VGA)
              #endif
 199   1          {
 200   2              COsdDispAutoProcPrevWork();
 201   2              CScalerLoadHardwareVLCFont(tFONT_AUTOCOLOR, 0x60);
 202   2              COsdFxDrawWindow(XSTART(0), YSTART(0), XEND(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_
             -AUTOCOLOR_STR)*12), YEND(140), tOSD_WINDOW2_STYLE);
 203   2              COsdFxChangeWindowColor(COLOR00(_CP_DARKBLUE), tOSD_WINDOW2_STYLE);
 204   2              COsdFxDrawWindow(XSTART(10), YSTART(20), XEND(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOS
             -D_AUTOCOLOR_STR))*12 - 10, YEND(120), tOSD_WINDOW6_STYLE);
 205   2              COsdFxChangeWindowColor(COLOR00(_CP_LIGHTBLUE), tOSD_WINDOW6_STYLE);
 206   2      
 207   2              COsdFxSetPosition(WIDTH(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_AUTOCOLOR_STR)*12), 
             -WIDTH(140), 100, 100, 0x01);
 208   2      
 209   2              COsdFxLoadIcon(ROW(3), COL(3), tOSD_AUTO_ICO);
 210   2              COsdFxLoadText(ROW(4), COL(7), stOsdUserData.Language, tOSD_AUTOCOLOR_STR);
 211   2      
 212   2              COsdFxEnableOsd();
 213   2      #if _DEBUG_MESSAGE_SUPPORT
 214   2      CDebugMessage("222222222222",0);
 215   2      #endif
 216   2      
 217   2      
 218   2              CAutoDoWhiteBalance();
 219   2      
 220   2              COsdFxDisableOsd();
 221   2          }
 222   1      }
 223          
 224          //--------------------------------------------------
 225          // Description  :
 226          // Input Value  :
 227          // Output Value :
 228          //--------------------------------------------------
 229          void COsdDispNoSignalProc(void)
 230          {
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 5   

 231   1          CScalerLoadHardwareVLCFont(tFONT_GLOBAL, 0x00);
 232   1          CScalerLoadHardwareVLCFont(tFONT_NO_SIGNAL, 0x60);
 233   1      
 234   1          COsdDispAutoProcPrevWork();
 235   1      
 236   1          COsdFxDrawWindow(XSTART(0), YSTART(0), XEND(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_NOSI
             -GNAL_STR)*12), YEND(170), tOSD_WINDOW2_STYLE);
 237   1          COsdFxChangeWindowColor(COLOR00(_CP_DARKBLUE), tOSD_WINDOW2_STYLE);
 238   1          COsdFxDrawWindow(XSTART(10), YSTART(20), XEND(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_NO
             -SIGNAL_STR))*12 - 10, YEND(150), tOSD_WINDOW6_STYLE);
 239   1          COsdFxChangeWindowColor(COLOR00(_CP_LIGHTBLUE), tOSD_WINDOW6_STYLE);
 240   1          COsdFxSetPosition(WIDTH(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_NOSIGNAL_STR)*12), WIDTH
             -(170), 100, 100, 0x01);
 241   1      
 242   1          COsdFxLoadIcon(ROW(3), COL(3), tOSD_NOSIGNAL_ICO);
 243   1          COsdFxLoadText(ROW(4), COL(7), stOsdUserData.Language, tOSD_NOSIGNAL_STR);
 244   1      
 245   1          COsdFxLoadText(ROW(6), COL(3), stOsdUserData.Language, tOSD_INPUT_SOURCE_STR);
 246   1          COsdDispClearText(ROW(6), COL(10), 10, 1);
 247   1      
 248   1          COsdFxLoadText(ROW(6), COL(10), _ENGLISH, tOSD_SOURCE_STR[COsdDispJudgeSourceType()]);
 249   1      
 250   1          COsdFxChange1bitColor(ROW(6), COL(3), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
 251   1      
 252   1          COsdFxEnableOsd();
 253   1        //  if (stConBriData.Dicom<8)
 254   1      //              CAdjustBacklight(stConBriData.DicomLumi);
 255   1      //    else
 256   1          stSystemData.BackLight=tOSD_DICOMlumi[stConBriData.Dicom] ;
 257   1      
 258   1          CAdjustBacklight(stSystemData.BackLight);
 259   1          CPowerPanelOn();
 260   1        //  bData=0;//sjp20110730
 261   1      }
 262          
 263          //--------------------------------------------------
 264          // Description  :
 265          // Input Value  :
 266          // Output Value :
 267          //--------------------------------------------------
 268          void COsdDispNoCableProc(void)
 269          {
 270   1          CScalerLoadHardwareVLCFont(tFONT_GLOBAL, 0x00);
 271   1          CScalerLoadHardwareVLCFont(tFONT_NO_SIGNAL, 0x60);
 272   1      
 273   1          COsdDispAutoProcPrevWork();
 274   1          COsdFxDrawWindow(XSTART(0), YSTART(0), XEND(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_NOSI
             -GNAL_STR)*12), YEND(140), tOSD_WINDOW2_STYLE);
 275   1          COsdFxChangeWindowColor(COLOR00(_CP_DARKBLUE), tOSD_WINDOW2_STYLE);
 276   1          COsdFxDrawWindow(XSTART(10), YSTART(20), XEND(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_NO
             -SIGNAL_STR))*12 - 10, YEND(120), tOSD_WINDOW6_STYLE);
 277   1          COsdFxChangeWindowColor(COLOR00(_CP_LIGHTBLUE), tOSD_WINDOW6_STYLE);
 278   1          COsdFxSetPosition(WIDTH(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_NOSIGNAL_STR)*12), WIDTH
             -(140), 100, 100, 0x01);
 279   1      
 280   1          COsdFxLoadIcon(ROW(3), COL(3), tOSD_NOCABLE_ICO);
 281   1          COsdFxLoadText(ROW(4), COL(7), stOsdUserData.Language, tOSD_NOCABLE_STR);
 282   1          COsdFxEnableOsd();
 283   1      
 284   1      //    if (stConBriData.Dicom<8)
 285   1      //              CAdjustBacklight(stConBriData.DicomLumi);
 286   1      //    else
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 6   

 287   1              stSystemData.BackLight=tOSD_DICOMlumi[stConBriData.Dicom] ;
 288   1              CAdjustBacklight(stSystemData.BackLight);
 289   1        
 290   1              CPowerPanelOn();
 291   1      }
 292          
 293          //--------------------------------------------------
 294          // Description  :
 295          // Input Value  :
 296          // Output Value :
 297          //--------------------------------------------------
 298          void COsdDispNoSupportProc(void)
 299          {
 300   1          CScalerLoadHardwareVLCFont(tFONT_GLOBAL, 0x00);
 301   1          CScalerLoadHardwareVLCFont(tFONT_OUT_OF_RANGE, 0x60);
 302   1      
 303   1          COsdDispAutoProcPrevWork();
 304   1      
 305   1          COsdFxDrawWindow(XSTART(0), YSTART(0), XEND(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_NOSU
             -PPORT_STR)*12), YEND(170), tOSD_WINDOW2_STYLE);
 306   1          COsdFxChangeWindowColor(COLOR00(_CP_DARKBLUE), tOSD_WINDOW2_STYLE);
 307   1          COsdFxDrawWindow(XSTART(10), YSTART(20), XEND(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_NO
             -SUPPORT_STR))*12 - 10, YEND(150), tOSD_WINDOW6_STYLE);
 308   1          COsdFxChangeWindowColor(COLOR00(_CP_LIGHTBLUE), tOSD_WINDOW6_STYLE);
 309   1          COsdFxSetPosition(WIDTH(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_NOSUPPORT_STR)*12), WIDT
             -H(170), 100, 100, 0x01);
 310   1      
 311   1          COsdFxLoadIcon(ROW(3), COL(3), tOSD_NOSUPPORT_ICO);
 312   1          COsdFxLoadText(ROW(4), COL(7), stOsdUserData.Language, tOSD_NOSUPPORT_STR);
 313   1      
 314   1          COsdFxLoadText(ROW(6), COL(3), stOsdUserData.Language, tOSD_INPUT_SOURCE_STR);
 315   1          COsdDispClearText(ROW(6), COL(10), 10, 1);
 316   1          COsdFxLoadText(ROW(6), COL(10), _ENGLISH, tOSD_SOURCE_STR[COsdDispJudgeSourceType()]);
 317   1      
 318   1          COsdFxChange1bitColor(ROW(6), COL(3), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
 319   1          COsdFxEnableOsd();
 320   1      
 321   1       //   if (stConBriData.Dicom<8)
 322   1      //              CAdjustBacklight(stConBriData.DicomLumi);
 323   1      //    else
 324   1               stSystemData.BackLight=tOSD_DICOMlumi[stConBriData.Dicom] ;
 325   1      
 326   1              CAdjustBacklight(stSystemData.BackLight);
 327   1      
 328   1              CPowerPanelOn();
 329   1      }
 330          
 331          //----------------------------------------------------------------------------------------------------
 332          // OSD Combination Functions
 333          //----------------------------------------------------------------------------------------------------
 334          void COsdDispFullSlider(BYTE ucRow, BYTE ucCol, BYTE ucLength, WORD usValue, WORD usRange, WORD usMin, BYT
             -E ucColor, BYTE ucNumColor)
 335          {
 336   1          COsdFxHLine(ucRow, ucCol, ucLength, ((ucColor & 0x0f) << 4), _WRITE_BYTE2);
 337   1          COsdFxHLine(ucRow, ucCol, 1, 0x0d, _WRITE_BYTE1);
 338   1          COsdFxHLine(ucRow, ucCol + ucLength - 1, 1, 0x0c, _WRITE_BYTE1);
 339   1      
 340   1          COsdFxSlider(ucRow, ucCol + 1, ucLength - 2, usValue, usRange + usMin, usMin);
 341   1          COsdFxHLine(ucRow - 1, ucCol + ucLength - 3, 3, ((ucNumColor & 0x0f) << 4), _WRITE_BYTE2);
 342   1      
 343   1      
 344   1          // V012 Modify 20100310 Start
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 7   

 345   1          // V012 Patch Note (11) : If there is no allowance for Vpos adjusting, the OSD should show 0, not 255.
 346   1          /*
 347   1          COsdFxShowNumber((ucRow - 1), (ucCol + ucLength - 3), (100 * (usValue - usMin) / usRange), (_ALIGN_RIG
             -HT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3));
 348   1          */
 349   1      
 350   1          // V012 Modify 20100331 Start
 351   1          // V012 Patch Note (27) : Rounding numbers shown in OSD to make them the same as they are transferred 
             -in DDCCI.
 352   1          /*
 353   1          COsdFxShowNumber((ucRow - 1), (ucCol + ucLength - 3), ((usValue - usMin) == 0 ) ? 0 : (100 * (usValue 
             -- usMin) / usRange), (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3));
 354   1          */
 355   1          COsdFxShowNumber((ucRow ), (ucCol + ucLength+2 ), ((usValue - usMin) == 0 ) ? 0 : (((100 * (usValue - 
             -usMin)) + (usRange / 2)) / usRange), (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3));
 356   1          // V012 Modify 20100331 End
 357   1      
 358   1          // V012 Modify 20100310 End
 359   1      
 360   1      }
 361          
 362          void COsdDispDicomContent(BYTE ucRow, BYTE ucCol,  BYTE usValue)
 363          {
 364   1      
 365   1              COsdFxCalcStartAddress(ucRow, ucCol, 1);
 366   1              CScalerWriteAmount(0x92, 1, 0x6a, _NON_AUTOINC);
 367   1              COsdFxCalcStartAddress(ucRow, ucCol+1, 1);
 368   1              CScalerWriteAmount(0x92, 1, 0x6c, _NON_AUTOINC);
 369   1              
 370   1              COsdFxCalcStartAddress(ucRow, ucCol+9, 1);
 371   1              CScalerWriteAmount(0x92, 1, _LEFT_ICON, _NON_AUTOINC);
 372   1              
 373   1             COsdFxLoadText(ucRow,ucCol+12 , stOsdUserData.Language, tOSD_DICOM_STR);//zhangping 101110
 374   1              COsdFxLoadText(ucRow,ucCol +19, stOsdUserData.Language, tOSD_DICOM_STR2[usValue]);//zhangping 101110
 375   1              
 376   1             if(stConBriData.Dicom<8)
 377   1              {
 378   2                              COsdFxCalcStartAddress(ucRow, ucCol+24, 1);
 379   2                              CScalerWriteAmount(0x92, 1, 0x00, _NON_AUTOINC);
 380   2      
 381   2                              COsdFxCalcStartAddress(ucRow, ucCol+25, 1);
 382   2                              CScalerWriteAmount(0x92, 1, _RIGHT_ICON, _NON_AUTOINC);
 383   2                      
 384   2              }
 385   1             else
 386   1              {
 387   2                              COsdFxCalcStartAddress(ucRow, ucCol+25, 1);
 388   2                              CScalerWriteAmount(0x92, 1, 0x00, _NON_AUTOINC);
 389   2      
 390   2                              COsdFxCalcStartAddress(ucRow, ucCol+24, 1);
 391   2                              CScalerWriteAmount(0x92, 1, _RIGHT_ICON, _NON_AUTOINC);
 392   2      
 393   2              }
 394   1              
 395   1             /*
 396   1             if(stConBriData.Dicom<8)
 397   1              {
 398   1                      COsdFxLoadText(ucRow,ucCol +19, stOsdUserData.Language, tOSD_DICOM_STR2[usValue]);//zhangping 101110
 399   1                      
 400   1              }
 401   1             else
 402   1              {
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 8   

 403   1              
 404   1                      COsdFxCalcStartAddress(ucRow, ucCol+19, 1);
 405   1                      CScalerWriteAmount(0x92, 1, 0x6a, _NON_AUTOINC);
 406   1                      COsdFxCalcStartAddress(ucRow, ucCol+20, 1);
 407   1                      CScalerWriteAmount(0x92, 1, 0x00, _NON_AUTOINC);
 408   1                      COsdFxCalcStartAddress(ucRow, ucCol+21, 1);
 409   1                      CScalerWriteAmount(0x92, 1, _0_, _NON_AUTOINC);
 410   1                      }       
 411   1              */
 412   1      
 413   1              //COsdFxCalcStartAddress(ucRow, ucCol+25, 1);
 414   1              //CScalerWriteAmount(0x92, 1, _RIGHT_ICON, _NON_AUTOINC);
 415   1      }
 416          
 417          void COsdDispGammaContent(BYTE ucRow, BYTE ucCol,  BYTE usValue)
 418          {
 419   1      
 420   1              COsdFxCalcStartAddress(ucRow, ucCol, 1);
 421   1              CScalerWriteAmount(0x92, 1, 0x6a, _NON_AUTOINC);
 422   1              COsdFxCalcStartAddress(ucRow, ucCol+1, 1);
 423   1              CScalerWriteAmount(0x92, 1, 0x6c, _NON_AUTOINC);
 424   1      
 425   1              COsdFxCalcStartAddress(ucRow, ucCol+9, 1);
 426   1              CScalerWriteAmount(0x92, 1, _LEFT_ICON, _NON_AUTOINC);
 427   1      
 428   1              
 429   1             COsdFxLoadText(ucRow,ucCol+12 , stOsdUserData.Language, tOSD_GAMMA_STR);//zhangping 101110
 430   1             COsdFxLoadText(ucRow,ucCol +18, stOsdUserData.Language, tOSD_GAMMA_STR2[usValue]);//zhangping 10111
             -0
 431   1              COsdFxCalcStartAddress(ucRow, ucCol+24, 1);
 432   1              CScalerWriteAmount(0x92, 1, _RIGHT_ICON, _NON_AUTOINC);
 433   1      }
 434          void COsdDispSignalContent(BYTE ucRow, BYTE ucCol,  BYTE usValue)
 435          {
 436   1      
 437   1              COsdFxCalcStartAddress(ucRow, ucCol, 1);
 438   1              CScalerWriteAmount(0x92, 1, _LEFT_ICON, _NON_AUTOINC);
 439   1            // COsdFxLoadText(ucRow,ucCol+3 , stOsdUserData.Language, tOSD_GAMMA_STR);//zhangping 101110
 440   1             COsdFxLoadText(ucRow,ucCol +6, stOsdUserData.Language, tOSD_SIGNAL_TYPE[usValue]);//zhangping 10111
             -0
 441   1              COsdFxCalcStartAddress(ucRow, ucCol+14, 1);
 442   1              CScalerWriteAmount(0x92, 1, _RIGHT_ICON, _NON_AUTOINC);
 443   1      }
 444          
 445          void COsdDisp_YES_NO(BYTE ucRow, BYTE ucCol,  BYTE usValue)
 446          {
 447   1      
 448   1              COsdFxCalcStartAddress(ucRow, ucCol, 1);
 449   1              CScalerWriteAmount(0x92, 1, _LEFT_ICON, _NON_AUTOINC);
 450   1            // COsdFxLoadText(ucRow,ucCol+3 , stOsdUserData.Language, tOSD_GAMMA_STR);//zhangping 101110
 451   1            if(usValue)
 452   1                      COsdFxLoadText(ucRow,ucCol +7, stOsdUserData.Language, tOSD_YES);//zhangping 101110
 453   1            else
 454   1                      COsdFxLoadText(ucRow,ucCol +7, stOsdUserData.Language, tOSD_NO);//zhangping 101110
 455   1              COsdFxCalcStartAddress(ucRow, ucCol+14, 1);
 456   1              CScalerWriteAmount(0x92, 1, _RIGHT_ICON, _NON_AUTOINC);
 457   1      }
 458          
 459          
 460          void COsdDispClearIcon(BYTE ucRow, BYTE ucCol, BYTE ucWidth, BYTE ucHeight)
 461          {
 462   1          BYTE temp;
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 9   

 463   1      
 464   1          for(temp = 0; temp < ucHeight; temp++)
 465   1          {
 466   2              COsdFxCalcStartAddress(ucRow + temp, ucCol, 1);
 467   2              CScalerWriteAmount(0x92, ucWidth, 0x69, _NON_AUTOINC);
 468   2          }
 469   1      }
 470          
 471          void COsdDispClearText(BYTE ucRow, BYTE ucCol, BYTE ucWidth, BYTE ucHeight)
 472          {
 473   1          BYTE temp;
 474   1      
 475   1          for(temp = 0; temp < ucHeight; temp++)
 476   1          {
 477   2              COsdFxHLine(ROW(ucRow + temp), COL(ucCol), LENGTH(ucWidth), 0x10, _WRITE_BYTE2);
 478   2              COsdFxHLine(ROW(ucRow + temp), COL(ucCol), LENGTH(ucWidth), 0x00, _WRITE_BYTE1);
 479   2              COsdFxHLine(ROW(ucRow + temp), COL(ucCol), LENGTH(ucWidth), 0x8c, _WRITE_BYTE0);
 480   2          }
 481   1      }
 482          
 483          void COsdDispPenPoint(BYTE ucSrcX, BYTE ucSrcY, BYTE ucDesX, BYTE ucDesY, BYTE ucState)
 484          {
 485   1          //COsdFxHLine(ROW(ucSrcX), COL(ucSrcY), LENGTH(2), 0x69, _WRITE_BYTE1);
 486   1         // COsdFxHLine(ROW(ucDesX), COL(ucDesY), LENGTH(1), 0x6a, _WRITE_BYTE1);
 487   1          //COsdFxHLine(ROW(ucDesX), COL(ucDesY + 1), LENGTH(1), 0x6b, _WRITE_BYTE1);
 488   1          ucOsdState = ucState;
 489   1      }
*** WARNING C280 IN LINE 483 OF USER\REALTEK OSD\CODE\REALTEK_OSDDISP.C: 'ucSrcX': unreferenced local variable
*** WARNING C280 IN LINE 483 OF USER\REALTEK OSD\CODE\REALTEK_OSDDISP.C: 'ucSrcY': unreferenced local variable
*** WARNING C280 IN LINE 483 OF USER\REALTEK OSD\CODE\REALTEK_OSDDISP.C: 'ucDesX': unreferenced local variable
*** WARNING C280 IN LINE 483 OF USER\REALTEK OSD\CODE\REALTEK_OSDDISP.C: 'ucDesY': unreferenced local variable
 490          
 491          void COsdDispArrowPoint(BYTE ucSrcX, BYTE ucSrcY, BYTE ucDesX, BYTE ucDesY, BYTE ucState)
 492          {
 493   1          COsdFxHLine(ROW(ucSrcX), COL(ucSrcY), LENGTH(1), 0x00, _WRITE_BYTE1);
 494   1          COsdFxHLine(ROW(ucDesX), COL(ucDesY), LENGTH(1), 0x4a, _WRITE_BYTE1);
 495   1          COsdFxChange1bitColor(ROW(ucDesX), COL(ucDesY), WIDTH(1), HEIGHT(1), FGCOLOR(_CP_RED), BGCOLOR(_CP_BLA
             -CK));
 496   1          ucOsdState = ucState;
 497   1      }
 498          
 499          void COsdDispWindowPoint(BYTE ucRowNum, BYTE ucState)
 500          {
 501   1          //width:120 height:20
 502   1          COsdFxDrawWindow(XSTART(12), YSTART(17 + ucRowNum * 36), XEND(132), YEND(17 + ucRowNum * 36 + 20), tOS
             -D_WINDOW4_STYLE);
 503   1          COsdFxChangeWindowColor(COLOR00(_CP_RED), tOSD_WINDOW4_STYLE);
 504   1          ucOsdState = ucState;
 505   1      }
 506          
 507          void COsdDispWindowHPoint(BYTE ucRowNum, BYTE ucStart, BYTE ucInterval, BYTE ucItemNum, BYTE ucThick, BYTE
             - ucState)
 508          {
 509   1          //width:120 height:20
 510   1          COsdFxDrawWindow(XSTART(ucStart + ucInterval*ucItemNum), YSTART(18 + ucRowNum * 36), XEND(ucStart + uc
             -Interval*ucItemNum + ucThick), YEND(18 + ucRowNum * 36 + 18), tOSD_WINDOW2_STYLE);
 511   1          COsdFxChangeWindowColor(COLOR00(_CP_RED), tOSD_WINDOW2_STYLE);
 512   1          ucOsdState = ucState;
 513   1      }
 514          
 515          void COsdDispDrawInitWindow(void)
 516          {
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 10  

 517   1          BYTE temp;
 518   1      
 519   1       //   COsdDispClearIcon(ROW(0), COL(0), 5, 20);
 520   1          COsdDispClearText(ROW(0), COL(0), 10, 13);
 521   1      //    COsdFxChange2bitColor(ROW(5), COL(0), WIDTH(5), HEIGHT(20), COLOR00(_CP_BLACK), COLOR01(_CP_WHITE), 
             -COLOR10(_CP_RED), COLOR11(_CP_GREEN));
 522   1      
 523   1          for(temp = 0; temp < 8; temp++)
 524   1          {
 525   2      #if((_AUDIO_SUPPORT == _ON) && (_DDCCI_SUPPORT == _ON))
              
                      COsdFxLoadText(ROW(5 + temp*2), COL(7), stOsdUserData.Language, tTEXT_TABLE[temp]);
              
              #else
 530   2      /*
 531   2      #if((_AUDIO_SUPPORT != _ON))
 532   2              if(temp == 4)
 533   2              {
 534   2                  continue;
 535   2              }
 536   2      #endif
 537   2      
 538   2      #if((_DDCCI_SUPPORT != _ON))
 539   2              if(temp == 7)
 540   2              {
 541   2                  continue;
 542   2              }
 543   2      #endif
 544   2      */
 545   2              COsdFxLoadText(ROW(1 + temp*1), COL(3), stOsdUserData.Language, tOSD_DICOM_STR);//zhangping 101109
 546   2      
 547   2              COsdFxLoadText(ROW(1 + temp*1), COL(9), stOsdUserData.Language, tOSD_DICOM_STR2[temp]);//zhangping
             - 101109
 548   2      #endif
 549   2          }
 550   1              
 551   1              COsdFxLoadText(ROW(9), COL(3), stOsdUserData.Language, tOSD_DSA_STR);//zhangping 101109
 552   1              COsdFxLoadText(ROW(10), COL(3), stOsdUserData.Language, tOSD_DSI_STR);//zhangping 101109
 553   1              COsdFxLoadText(ROW(11), COL(3), stOsdUserData.Language, tOSD_CT_STR);//zhangping 101109
 554   1              COsdFxLoadText(ROW(11), COL(6), stOsdUserData.Language, tOSD_MRI_STR);//zhangping 10110530
 555   1              
 556   1          for(temp = 0; temp < 3; temp++)
 557   1              {         
 558   2               COsdFxLoadText(ROW(12 + temp*1), COL(3), stOsdUserData.Language, tOSD_GAMMA_STR);//zhangping 101109     
 559   2               COsdFxLoadText(ROW(12 + temp*1), COL(9), stOsdUserData.Language, tOSD_GAMMA_STR2[temp]);//zhangping 1011
             -09
 560   2              }
 561   1      
 562   1      
 563   1      
 564   1              COsdFxLoadText(ROW(15), COL(3), stOsdUserData.Language, tOSD_SIGNAL_STR);//zhangping 101109
 565   1              COsdFxLoadText(ROW(16), COL(3), stOsdUserData.Language, tOSD_AUTO_ADJUST_STR);//zhangping 101109
 566   1      // COsdDispFullSlider(ROW(9), COL(1), 12, stSystemData.BackLight, 255, 0, _CP_WHITE, _CP_WHITE);//draw bri
             -ghtness slide bar     
 567   1      
 568   1       //          COsdFxLoadText(ROW(5), COL(25), stOsdUserData.Language, tTEXT_TABLE[temp]);//zhangping 101109
 569   1       //          COsdDispFullSlider(ROW(9), COL(22), 12, stSystemData.BackLight, 255, 0, _CP_WHITE, _CP_WHITE)
             -;//draw brightness slide bar
 570   1      //       COsdDispFullSlider(ROW(11), COL(22), 12, stConBriData.Contrast, _CONTRAST_MAX - _CONTRAST_MIN, _C
             -ONTRAST_MIN, _CP_WHITE, _CP_WHITE);//draw contrast slide bar
 571   1      
 572   1       //       COsdDispDicomContent(ROW(5), COL(14),stConBriData.Dicom);// draw dicom curve
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 11  

 573   1        //      COsdDispGammaContent(ROW(7), COL(13),stConBriData.Gamma);// draw dicom curve
 574   1        //      COsdDispSignalContent(ROW(13), COL(22),0);// draw SIGNAL TYPE
 575   1       //       COsdDisp_YES_NO(ROW(15), COL(22),1);// draw AUTO ADJUST YES/NO
 576   1       //       COsdDisp_YES_NO(ROW(17), COL(22),1);// draw FACTORY RESET YES/NO
 577   1      /*        if(stConBriData.Dicom<8)
 578   1                      {
 579   1                              COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(35), HEIGHT(5), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_
             -CP_BLACK));
 580   1                      }
 581   1      
 582   1      
 583   1      */
 584   1                      
 585   1      /*
 586   1      #if(_AUDIO_SUPPORT != _ON)
 587   1          COsdFxLoadText(ROW(5 + 4*2), COL(7), stOsdUserData.Language, tTEXT_TABLE[4]);
 588   1          COsdFxHLine(ROW(13), COL(5), LENGTH(15), (_CP_GRAY << 4 | _CP_BACKGROUND), _WRITE_BYTE2);
 589   1      #endif
 590   1      */
 591   1      }
 592          
 593          void COsdDispLanguageBack(void)
 594          {
 595   1      
 596   1          BYTE temp;
 597   1      
 598   1          COsdDispClearIcon(ROW(5), COL(0), 5, 20);
 599   1          COsdDispClearText(ROW(5), COL(5), 18, 15);
 600   1      
 601   1          for(temp = 0; temp < 4; temp++)
 602   1          {
 603   2              COsdFxLoadText(ROW(5 + temp*2), COL(7), stOsdUserData.Language, tOSD_TABLE[temp]);
 604   2          }
 605   1      
 606   1          COsdDispPenPoint(ROW(5), COL(3), ROW(11), COL(3), _MENU_OSD_LANGUAGE);
 607   1          COsdFxDrawWindow(XSTART(40), YSTART(300), XEND(250), YEND(400), tOSD_WINDOW2_STYLE);
 608   1          COsdFxChangeWindowColor(COLOR00(_CP_BLACK), tOSD_WINDOW2_STYLE);
 609   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
 610   1      
 611   1          ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
 612   1      
 613   1      }
 614          
 615          void COsdDispShowFactoryModeValue(void)
 616          {
 617   1          BYTE temp;
 618   1          CEepromLoadAdcData();
 619   1      
 620   1          for(temp = 0; temp < 3; temp++)
 621   1          {
 622   2              COsdFxShowNumber(ROW(5), COL(17 + temp * 5), stAdcData.AdcOffset[temp], (_ALIGN_RIGHT | _FORCE_SHO
             -W_NUMBER_OFF | _SHOW_3));
 623   2          }
 624   1      
 625   1          for(temp = 0; temp < 3; temp++)
 626   1          {
 627   2              COsdFxShowNumber(ROW(7), COL(16 + temp * 5), stAdcData.AdcGain[temp], (_ALIGN_RIGHT | _FORCE_SHOW_
             -NUMBER_OFF | _SHOW_3));
 628   2          }
 629   1      
 630   1          for(temp = 0; temp < 5; temp++)
 631   1          {
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 12  

 632   2              SET_COLOR_TEMP_TYPE(temp);
 633   2              CEepromLoadColorTempData();
 634   2              COsdFxShowNumber(ROW(9 + temp*2), COsdFxGetColWithinText(15, temp + 4, tOSD_FACTORY_ITEM_STR), stC
             -olorTempData.ColorTemp[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3));
 635   2              COsdFxShowNumber(ROW(9 + temp*2), COsdFxGetColWithinText(20, temp + 4, tOSD_FACTORY_ITEM_STR), stC
             -olorTempData.ColorTemp[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3));
 636   2              COsdFxShowNumber(ROW(9 + temp*2), COsdFxGetColWithinText(25, temp + 4, tOSD_FACTORY_ITEM_STR), stC
             -olorTempData.ColorTemp[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3));
 637   2          }
 638   1      
 639   1          COsdFxShowNumber(ROW(19), COL(17), stConBriData.Brightness, (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | _
             -SHOW_3));
 640   1      }
 641          
 642          void COsdDispAutoProcPrevWork(void)
 643          {
 644   1          COsdFxDisableOsd();
 645   1          COsdFxApplyMapSetting(_OSD_MAP2);
 646   1      
 647   1          COsdFxCloseWindow(WINNO(0));
 648   1          COsdFxCloseWindow(WINNO(1));
 649   1          COsdFxCloseWindow(WINNO(3));
 650   1          COsdFxCloseWindow(WINNO(4));
 651   1          COsdFxCloseWindow(WINNO(5));
 652   1      }
 653          
 654          void COsdDispColorTempSelect(void)
 655          {
 656   1          switch(stOsdUserData.ColorTemp)
 657   1          {
 658   2              case _CT_9300:
 659   2                  SET_COLOR_TEMP_TYPE(_CT_9300);
 660   2                  break;
 661   2      
 662   2              case _CT_6500:
 663   2                  SET_COLOR_TEMP_TYPE(_CT_6500);
 664   2                  break;
 665   2      
 666   2              case _CT_5800:
 667   2                  SET_COLOR_TEMP_TYPE(_CT_5800);
 668   2                  break;
 669   2      
 670   2              case _CT_SRGB:
 671   2                  SET_COLOR_TEMP_TYPE(_CT_SRGB);
 672   2                  break;
 673   2      
 674   2              case _CT_USER:
 675   2                  SET_COLOR_TEMP_TYPE(_CT_USER);
 676   2                  break;
 677   2          }
 678   1          CEepromLoadColorTempData();
 679   1          CAdjustContrast(stConBriData.Contrast);
 680   1      }
 681          
 682          BYTE COsdDispSetWindowPosDisp(BYTE ucSelect, BYTE code *pArray)
 683          {
 684   1          BYTE cnt, temp, temp1;
 685   1          WORD length;
 686   1      
 687   1          length = 0;
 688   1          cnt = 0;
 689   1          temp = 0;
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 13  

 690   1          temp1 = 0;
 691   1      
 692   1          while(_TRUE)
 693   1          {
 694   2              if(*pArray == _END_)
 695   2              {
 696   3                  if(temp == ucSelect)
 697   3                  {
 698   4                      pArray = pArray - cnt;
 699   4                      break;
 700   4                  }
 701   3                  else
 702   3                  {
 703   4                      pArray++;
 704   4                      cnt = 0;
 705   4                  }
 706   3      
 707   3                  temp++;//equal language select
 708   3              }
 709   2      
 710   2              pArray++;
 711   2              cnt++;
 712   2          }
 713   1      
 714   1          while(*pArray != _END_)
 715   1          {
 716   2              cnt = 0;
 717   2              while(tOSD_CHARWIDTH_TABLE[cnt][0] != _END_)
 718   2              {
 719   3                  if((*pArray == tOSD_CHARWIDTH_TABLE[cnt][0]) && (tOSD_CHARWIDTH_TABLE[cnt][1] != _END_))
 720   3                  {
 721   4                      length += (tOSD_CHARWIDTH_TABLE[cnt][1]&0x0f);
 722   4                      break;
 723   4                  }
 724   3                  cnt++;
 725   3              }
 726   2              if(tOSD_CHARWIDTH_TABLE[cnt][0] == _END_)
 727   2              {
 728   3                  length += 12;
 729   3              }
 730   2      
 731   2              pArray++;
 732   2          }
 733   1      
 734   1          length = length / 12;
 735   1          temp = (length) + 12;
 736   1          return temp;
 737   1      }
 738          
 739          //----------------------------------------------------------------------------------------------------
 740          // OSD Event Functions
 741          //----------------------------------------------------------------------------------------------------
 742          void COsdDispOsdTimerEvent(void)
 743          {
 744   1          COsdFxDisableOsd();
 745   1              GCMode=0;//sjp20110630 for clean GCMODE while OSD disappear
 746   1      #if(_VIVID_COLOR_FUCTION == _ON)
              //    CAdjustHLWindowBrightness(stOsdUserData.MZBright);
              //    CAdjustHLWindowContrast(stOsdUserData.MZContrast);
              #endif
 750   1      
 751   1          ucOsdState = _MENU_NONE;
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 14  

 752   1      
 753   1      #if(_SWITCH_INPUT_SOURCE_OSD == _ON)
 754   1      
 755   1          if(GET_SOURCE_OSD_STATUS())
 756   1          {
 757   2              CLR_SOURCE_OSD_STATUS();
 758   2          }
 759   1      
 760   1      #endif
 761   1      
 762   1      }
 763          
 764          
 765          
 766          #if(_VIVID_COLOR_FUCTION == _ON)
              //----------------------------------------------------------------------------------------------------
              // OSD Event Functions
              //----------------------------------------------------------------------------------------------------
              void COsdDispVividColorHLWindow(void)
              {
              
                  if(GET_WINDOW_SIZE() == _VIVID_WINDOW_SIZE_DISABLE)
                  {
                      CAdjustEnableHLWindow(_DISABLE);
                  }
                  else if(GET_WINDOW_SIZE() == _VIVID_WINDOW_SIZE_FULL)
                  {
                      CAdjustHLWindowHV(0, stDisplayInfo.DHWidth - 2, 0, stDisplayInfo.DVHeight - 2);
                      CAdjustNormalizeFactor(stDisplayInfo.DHWidth - 2, stDisplayInfo.DVHeight - 2);
                      CAdjustEnableHLWindow(_ENABLE);
                  }
                  else if(GET_WINDOW_SIZE() == _VIVID_WINDOW_SIZE_DEMO)
                  {
                      CAdjustHLWindowHV(0, stDisplayInfo.DHWidth / 2, 0, stDisplayInfo.DVHeight - 2);
                      CAdjustNormalizeFactor(stDisplayInfo.DHWidth / 2, stDisplayInfo.DVHeight - 2);
                      CAdjustEnableHLWindow(_ENABLE);
                  }
                  else if(GET_WINDOW_SIZE() == _VIVID_WINDOW_SIZE_USER)
                  {
                      CAdjustHLWindowHV(stOsdUserData.VividWinHPos, stOsdUserData.VividWinHWidth, stOsdUserData.VividWin
             -VPos, stOsdUserData.VividWinVHeight);
                      CAdjustNormalizeFactor(stOsdUserData.VividWinHWidth, stOsdUserData.VividWinVHeight);
                      CAdjustEnableHLWindow(_ENABLE);
                  }
              
                  CAdjustHLWindowHVBorder(WIDTH(2), 0x3f, 0x3f, 0x00);
              
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD Event Functions
              //----------------------------------------------------------------------------------------------------
              void COsdDispVividColorDCCMode(void)
              {
                  if(GET_DCC_MODE() != _VIVID_DCC_DISABLE)
                  {
                      CAdjustFillDCCTable(GET_DCC_MODE() - 1);
                      CAdjustEnableDCC(_ENABLE);
              
                      // V013 System Patch Note (10) Modify 20100518 Start
                      // Patch Reason : Make the color adjust effect different inside and outside of Hightlight Window.
                      if((GET_WINDOW_SIZE() == _VIVID_WINDOW_SIZE_DEMO) || (GET_WINDOW_SIZE() == _VIVID_WINDOW_SIZE_USER
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 15  

             -))
                      {
                          CScalerRead(_HW_ACCESS_PORT_60, 1, pData, _NON_AUTOINC);
                          CScalerSetByte(_HW_ACCESS_PORT_60, (pData[0] & 0xC0) + _HW_WINDOW_CTRL0_0C); // Get 61-0c
                          CScalerRead(_HW_DATA_PORT_61, 1, pData + 1, _NON_AUTOINC);
              
                          pData[1] = (pData[1] & (~(_BIT3 | _BIT2))) | _BIT2;
                          CScalerSetByte(_HW_ACCESS_PORT_60, (pData[0] & 0xC0) + _HW_WINDOW_CTRL0_0C); // Get 61-0c
                          CScalerSetByte(_HW_DATA_PORT_61, pData[1]);
                      }
                      // V013 System Patch Note (10) Modify 20100518 End
              
                  }
                  else
                  {
                      CAdjustEnableDCC(_DISABLE);
                  }
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD Event Functions
              //----------------------------------------------------------------------------------------------------
              void COsdDispVividColorICMMode(void)
              {
                  if((GET_ICM_MODE() != _VIVID_ICM_DISABLE) && (GET_ICM_MODE() != _VIVID_ICM_USER))
                  {
                      CAdjustFillICMTable(GET_ICM_MODE() - 1);
                      CAdjustEnableICM(_ICM_CM0 | _ICM_CM1 | _ICM_CM2 | _ICM_CM3);
              
                      // V013 System Patch Note (10) Modify 20100518 Start
                      // Patch Reason : Make the color adjust effect different inside and outside of Hightlight Window.
                      if((GET_WINDOW_SIZE() == _VIVID_WINDOW_SIZE_DEMO) || (GET_WINDOW_SIZE() == _VIVID_WINDOW_SIZE_USER
             -))
                      {
                          CScalerRead(_HW_ACCESS_PORT_60, 1, pData, _NON_AUTOINC);
                          CScalerSetByte(_HW_ACCESS_PORT_60, (pData[0] & 0xC0) + _HW_WINDOW_CTRL0_0C); // Get 61-0c
                          CScalerRead(_HW_DATA_PORT_61, 1, pData + 1, _NON_AUTOINC);
              
                          pData[1] = (pData[1] & (~(_BIT3 | _BIT2))) | _BIT2;
                          CScalerSetByte(_HW_ACCESS_PORT_60, (pData[0] & 0xC0) + _HW_WINDOW_CTRL0_0C); // Get 61-0c
                          CScalerSetByte(_HW_DATA_PORT_61, pData[1]);
                      }
                      // V013 System Patch Note (10) Modify 20100518 End
                  }
                  else
                  {
                      CAdjustEnableICM(_DISABLE);
                  }
              }
              
              
              //----------------------------------------------------------------------------------------------------
              // OSD Event Functions
              //----------------------------------------------------------------------------------------------------
              void COsdDispVividColor(void)
              {
                  if(GET_DCC_MODE() != _VIVID_DCC_DISABLE)
                  {
                      CAdjustHLWindowContrast(_ENABLE, 128);
                      CAdjustHLWindowBrightness(_ENABLE, 128);
                      COsdDispVividColorDCCMode();
                  }
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 16  

                  else
                  {
                      CAdjustHLWindowContrast(_ENABLE, stOsdUserData.VividContrast);
                      CAdjustHLWindowBrightness(_ENABLE, stOsdUserData.VividBright);
                  }
              
                  COsdDispVividColorICMMode();
              }
              
              #endif // End of #if(_VIVID_COLOR_FUCTION == _ON)
 883          
 884          #if (_DDCCI_SUPPORT == _ON)
              
              BYTE COsdDispRealToPercent(WORD RealValue, WORD usMax, WORD usMin)
              {
                  WORD usTemp = 0;
                  RealValue = MINOF(RealValue, usMax);
                  RealValue = MAXOF(RealValue, usMin);
              
                  if(usMax <= usMin)
                  {
                      usTemp = 0;
                  }
                  else
                  {
                      usTemp = (((DWORD)(RealValue - usMin) * 10000) / (usMax - usMin));
                  }
              
                  if((usTemp % 100) > 49)
                  {
                      usTemp = usTemp + 100;
                  }
              
                  usTemp = usTemp / 100;
              
                  return((BYTE)usTemp);
              }
              
              //--------------------------------------------------
              // Description  :
              // Input Value  :
              // Output Value :
              //--------------------------------------------------
              WORD COsdDispPercentToRealValue(BYTE PercentValue, WORD usMax, WORD usMin)
              {
                  WORD usTemp = 0;
                  PercentValue = MINOF(100, PercentValue);
              
                  if(((DWORD)PercentValue * (usMax - usMin)) % 100 != 0)
                  {
                      usTemp = ((DWORD)PercentValue * (usMax - usMin)) / 100 + 1;
                  }
                  else
                  {
                      usTemp = ((DWORD)PercentValue * (usMax - usMin)) / 100;
                  }
              
                  return(usTemp + usMin);
              
              }
              #endif
 934          
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 17  

 935          
 936          //--------------------------------------------------
 937          // Description  : Draw Timing and Input Source Information.
 938          // Input Value  :
 939          // Output Value :
 940          //--------------------------------------------------
 941          void COsdDispTimingAndInputSource(void)
 942          {
 943   1          // V012 Modify 20100320 Start
 944   1          // V012 Patch Note (12) : Show video timing info in OSD.
 945   1          BYTE ucFlag = 0;
 946   1          // V012 Modify 20100320 End
 947   1      
 948   1          // V016 VGA Patch Note (3) Modify 20100831 Start
 949   1          // Patch Reason : Modify for 832x624@74.53Hz always shown as 832x624@75Hz.
 950   1          BYTE ucModeIndex = 0;
 951   1          // V016 VGA Patch Note (3) Modify 20100831 End
 952   1      
 953   1          // V014 VGA Patch Note (4) Modify 20100526 Start
 954   1          // Patch Reason : Modify for OSD Error while pressing menu key continuously in light process.
 955   1          COsdFxDisableOsd();
 956   1          ucOsdState = _MENU_NONE;
 957   1          // V014 VGA Patch Note (4) Modify 20100526 End
 958   1      
 959   1          CScalerLoadHardwareVLCFont(tFONT_GLOBAL, 0x00);
 960   1          CScalerLoadHardwareVLCFont(tFONT_NO_SIGNAL, 0x60);
 961   1      
 962   1          COsdDispAutoProcPrevWork();
 963   1      
 964   1          /*
 965   1          COsdFxDrawWindow(XSTART(0), YSTART(0), XEND(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_NOSI
             -GNAL_STR)*12), YEND(140), tOSD_WINDOW2_STYLE);
 966   1          COsdFxChangeWindowColor(COLOR00(_CP_DARKBLUE), tOSD_WINDOW2_STYLE);
 967   1          COsdFxDrawWindow(XSTART(10), YSTART(20), XEND(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_NO
             -SIGNAL_STR))*12 - 10, YEND(120), tOSD_WINDOW6_STYLE);
 968   1          COsdFxChangeWindowColor(COLOR00(_CP_LIGHTBLUE), tOSD_WINDOW6_STYLE);
 969   1          COsdFxSetPosition(WIDTH(COsdDispSetWindowPosDisp(stOsdUserData.Language, tOSD_NOSIGNAL_STR)*12), WIDTH
             -(140), 170, 180, 0x01);
 970   1          */
 971   1          COsdFxDrawWindow(XSTART(0), YSTART(0), XEND(250), YEND(140), tOSD_WINDOW2_STYLE);
 972   1          COsdFxChangeWindowColor(COLOR00(_CP_DARKBLUE), tOSD_WINDOW2_STYLE);
 973   1          COsdFxDrawWindow(XSTART(10), YSTART(20), XEND(240), YEND(120), tOSD_WINDOW6_STYLE);
 974   1          COsdFxChangeWindowColor(COLOR00(_CP_LIGHTBLUE), tOSD_WINDOW6_STYLE);
 975   1      
 976   1          // V016 System Patch Note (1) Modify 20100729 Start
 977   1          // Patch Reason : Modify OSD Set position and Draw Window Function
 978   1          /*
 979   1          COsdFxSetPosition(WIDTH(250), WIDTH(140), 170, 180, 0x01);
 980   1          */
 981   1          COsdFxSetPosition(WIDTH(250), WIDTH(140), 180, 20, 0x01);
 982   1          // V016 System Patch Note (1) Modify 20100729 End
 983   1      
 984   1          // show current input source type
 985   1          COsdFxLoadText(ROW(2), COL(5), stOsdUserData.Language, tOSD_INPUT_SOURCE_STR);
 986   1          COsdFxLoadText(ROW(2), COL(11), _ENGLISH, tOSD_SOURCE_STR[COsdDispJudgeSourceType()]);
 987   1      
 988   1          COsdFxChange1bitColor(ROW(2), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
 989   1      
 990   1          // V012 Modify 20100320 Start
 991   1          // V012 Patch Note (12) : Show video timing info in OSD.
 992   1          /*
 993   1          COsdFxShowNumber(ROW(4), COL(5), stModeInfo.IHWidth, (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | _SHOW_4)
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 18  

             -);
 994   1          COsdFxHLine(ROW(4), COL(6), LENGTH(1), 0x0e, _WRITE_BYTE1);
 995   1          COsdFxShowNumber(ROW(4), COL(7), stModeInfo.IVHeight, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3)
             -);
 996   1      
 997   1          COsdFxShowNumber(ROW(4), COL(12), (stModeInfo.IVFreq + 5) / 10, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF 
             -| _SHOW_2));
 998   1      
 999   1          COsdFxHLine(ROW(4), COL(14), LENGTH(1), _H_, _WRITE_BYTE1);
1000   1          COsdFxHLine(ROW(4), COL(15), LENGTH(1), _z_, _WRITE_BYTE1);
1001   1          */
1002   1          #if(_YPBPR_SUPPORT == _ON)
1003   1          if(GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR)
1004   1          {
1005   2              switch(stModeInfo.ModeCurr)
1006   2              {
1007   3                  // V013 VGA Patch Note (5) 20100409 Modify Start
1008   3                  // Patch Reason : Modify YPbPr search mode flow to cover confuse mode problem.
1009   3                  /*
1010   3                  case _VIDEO_720x576i_50HZ:
1011   3                  case _VIDEO_720x480i_60HZ:
1012   3                  */
1013   3                  case _VIDEO_1440x576i_50HZ:
1014   3                  case _VIDEO_1440x480i_60HZ:
1015   3                  // V013 VGA Patch Note (5) 20100409 Modify End
1016   3      
1017   3                  case _VIDEO_1920x1080i_50HZ:
1018   3                  case _VIDEO_1920x1080i_60HZ:
1019   3      
1020   3                  // V013 VGA Patch Note (5) 20100409 Modify Start
1021   3                  // Patch Reason : Modify YPbPr search mode flow to cover confuse mode problem.
1022   3                  case _VIDEO_1920x1080i_50HZ_2:
1023   3                  // V013 VGA Patch Note (5) 20100409 Modify End
1024   3      
1025   3                      // V015 VGA Patch Note (12) Modify 20100625 Start
1026   3                      // Patch Reason : Modify OSD Reslotion show type for vedio timing.
1027   3                      /*
1028   3                      COsdFxShowNumber(ROW(4), COL(4), stModeInfo.IVHeight * 2, (_ALIGN_LEFT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_4));
1029   3                      COsdFxHLine(ROW(4), COL(8), LENGTH(1), _i_, _WRITE_BYTE1);
1030   3                      */
1031   3                      ucFlag = COsdDispShowResolution(ROW(4), COL(4), _TRUE, _INTERLACE_TIMING);
1032   3                      // V015 VGA Patch Note (12) Modify 20100625 End
1033   3                  break;
1034   3      
1035   3                  case _VIDEO_720x576p_50HZ:
1036   3                  case _VIDEO_720x480p_60HZ:
1037   3                  case _VIDEO_1280x720p_50HZ:
1038   3                  case _VIDEO_1280x720p_60HZ:
1039   3                  case _VIDEO_1920x1080p_50HZ:
1040   3                  case _VIDEO_1920x1080p_60HZ:
1041   3                  default:
1042   3      
1043   3                      // V015 VGA Patch Note (12) Modify 20100625 Start
1044   3                      // Patch Reason : Modify OSD Reslotion show type for vedio timing.
1045   3                      /*
1046   3                      COsdFxShowNumber(ROW(4), COL(4), stModeInfo.IVHeight, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OF
             -F | _SHOW_4));
1047   3                      COsdFxHLine(ROW(4), COL(8), LENGTH(1), _p_, _WRITE_BYTE1);
1048   3                      */
1049   3                      ucFlag = COsdDispShowResolution(ROW(4), COL(4), _TRUE, _PROGRESS_TIMING);
1050   3                      // V015 VGA Patch Note (12) Modify 20100625 End
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 19  

1051   3      
1052   3                  break;
1053   3      
1054   3              }
1055   2              // V015 VGA Patch Note (12) Modify 20100625 Start
1056   2              // Patch Reason : Modify OSD Reslotion show type for vedio timing.
1057   2              /*
1058   2              ucFlag = 0;
1059   2              */
1060   2              // V015 VGA Patch Note (12) Modify 20100625 End
1061   2          }
1062   1          else
1063   1          #endif
1064   1          {
1065   2              if(GET_INPUTSOURCE_TYPE() == _SOURCE_VGA)
1066   2              {
1067   3                  if(GET_MODE_SEARCH_TYPE() == _PRESET_MODE_TYPE)
1068   3                  {
1069   4                      pData[0] = stModeInfo.ModeCurr;
1070   4                  }
1071   3                  else if(GET_MODE_SEARCH_TYPE() == _USER_MODE_TYPE)
1072   3                  {
1073   4                      CEepromLoadUserFIFOModeData((stModeInfo.ModeCurr / 4), pData);
1074   4                      pData[0] = pData[(stModeInfo.ModeCurr % 4) * 4];
1075   4                  }
1076   3      
1077   3                  // V016 VGA Patch Note (3) Modify 20100831 Start
1078   3                  // Patch Reason : Modify for 832x624@74.53Hz always shown as 832x624@75Hz.
1079   3                  ucModeIndex = pData[0];
1080   3                  // V016 VGA Patch Note (3) Modify 20100831 End
1081   3      
1082   3                  switch(pData[0])
1083   3                  {
1084   4                      // V013 VGA Patch Note (24) Modify 20100514 Start
1085   4                      // Patch Reason : Mode search updates.
1086   4                      /*
1087   4                      case _MODE_720x480i_60Hz:
1088   4                      case _MODE_720x576i_50Hz:
1089   4                      */
1090   4                      // V013 VGA Patch Note (24) Modify 20100514 End
1091   4      
1092   4                      case _MODE_1920x1080i_50Hz:
1093   4                      case _MODE_1920x1080i_60HZ:
1094   4                      case _MODE_1440x480i_60HZ:
1095   4                      case _MODE_1440x576i_50Hz:
1096   4                      case _MODE_1920x1080i_50HZ_2:
1097   4      
1098   4                          // V015 VGA Patch Note (12) Modify 20100625 Start
1099   4                          // Patch Reason : Modify OSD Reslotion show type for vedio timing.
1100   4                          /*
1101   4                          COsdFxShowNumber(ROW(4), COL(4), stModeInfo.IVHeight * 2, (_ALIGN_LEFT | _FORCE_SHOW_N
             -UMBER_OFF | _SHOW_4));
1102   4                          COsdFxHLine(ROW(4), COL(8), LENGTH(1), _i_, _WRITE_BYTE1);
1103   4                          ucFlag = 0;
1104   4                          */
1105   4                          ucFlag = COsdDispShowResolution(ROW(4), COL(4), _TRUE, _INTERLACE_TIMING);
1106   4                          // V015 VGA Patch Note (12) Modify 20100625 End
1107   4      
1108   4                          break;
1109   4      
1110   4                      // V015 VGA Patch Note (12) Modify 20100625 Start
1111   4                      // Patch Reason : Modify OSD Reslotion show type for vedio timing.
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 20  

1112   4                      case _MODE_720x480_60HZ:
1113   4                      case _MODE_720x480_60HZ_GTF:
1114   4                      case _MODE_720x576_60HZ:
1115   4                      case _MODE_1920x1080_60HZ_XBOX:
1116   4                      case _MODE_1920x1080_60HZ_RB:
1117   4                      case _MODE_1920x1080_60HZ:
1118   4                      case _MODE_1920x1080_50HZ_2:
1119   4                      case _MODE_1280x720_60HZ_2:
1120   4                      // V015 VGA Patch Note (12) Modify 20100625 End
1121   4      
1122   4                      case _MODE_720x480p_60HZ:
1123   4                      case _MODE_720x576p_50Hz:
1124   4                      case _MODE_1280x720p_50HZ:
1125   4                      case _MODE_1280x720p_60HZ:
1126   4                      case _MODE_1920x1080p_50Hz:
1127   4                      case _MODE_1920x1080p_60HZ:
1128   4      
1129   4                          // V015 VGA Patch Note (12) Modify 20100625 Start
1130   4                          // Patch Reason : Modify OSD Reslotion show type for vedio timing.
1131   4                          /*
1132   4                          COsdFxShowNumber(ROW(4), COL(4), stModeInfo.IVHeight, (_ALIGN_LEFT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_4));
1133   4                          COsdFxHLine(ROW(4), COL(8), LENGTH(1), _p_, _WRITE_BYTE1);
1134   4                          ucFlag = 0;
1135   4                          */
1136   4                          ucFlag = COsdDispShowResolution(ROW(4), COL(4), _TRUE, _PROGRESS_TIMING);
1137   4                          // V015 VGA Patch Note (12) Modify 20100625 End
1138   4      
1139   4                          break;
1140   4      
1141   4                      // V016 VGA Patch Note (3) Modify 20100730 Start
1142   4                      // Patch Reason : Modify 640x350_70 Timing to show blank on top and buttom.
1143   4                      case _MODE_640x350_70HZ:
1144   4                          COsdFxShowNumber(ROW(4), COL(5), 640, (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | _SHOW_4
             -));
1145   4                          COsdFxHLine(ROW(4), COL(6), LENGTH(1), 0x0e, _WRITE_BYTE1);
1146   4                          COsdFxShowNumber(ROW(4), COL(7), 350, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3)
             -);
1147   4                          ucFlag = 1;
1148   4                          break;
1149   4                      // V016 VGA Patch Note (3) Modify 20100730 End
1150   4      
1151   4                      default:
1152   4      
1153   4                          // V015 VGA Patch Note (12) Modify 20100625 Start
1154   4                          // Patch Reason : Modify OSD Reslotion show type for vedio timing.
1155   4                          /*
1156   4                          COsdFxShowNumber(ROW(4), COL(5), stModeInfo.IHWidth, (_ALIGN_RIGHT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_4));
1157   4                          COsdFxHLine(ROW(4), COL(6), LENGTH(1), 0x0e, _WRITE_BYTE1);
1158   4                          COsdFxShowNumber(ROW(4), COL(7), stModeInfo.IVHeight, (_ALIGN_LEFT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_3));
1159   4                          ucFlag = 1;
1160   4                          */
1161   4                          ucFlag = COsdDispShowResolution(ROW(4), COL(4), _FALSE, _PROGRESS_TIMING);
1162   4                          // V015 VGA Patch Note (12) Modify 20100625 End
1163   4      
1164   4                          break;
1165   4                  }
1166   3              }
1167   2              else
1168   2              {
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 21  

1169   3                  // V015 VGA Patch Note (12) Modify 20100625 Start
1170   3                  // Patch Reason : Modify OSD Reslotion show type for vedio timing.
1171   3                  /*
1172   3                  COsdFxShowNumber(ROW(4), COL(5), stModeInfo.IHWidth, (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | 
             -_SHOW_4));
1173   3                  COsdFxHLine(ROW(4), COL(6), LENGTH(1), 0x0e, _WRITE_BYTE1);
1174   3                  COsdFxShowNumber(ROW(4), COL(7), stModeInfo.IVHeight, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | 
             -_SHOW_3));
1175   3                  ucFlag = 1;
1176   3                  */
1177   3                  ucFlag = COsdDispShowResolution(ROW(4), COL(4), _FALSE, _PROGRESS_TIMING);
1178   3                  // V015 VGA Patch Note (12) Modify 20100625 End
1179   3              }
1180   2          }
1181   1          if(ucFlag == 0)
1182   1          {
1183   2              COsdFxShowNumber(ROW(4), COL(10), (stModeInfo.IVFreq + 5) / 10, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_
             -OFF | _SHOW_2));
1184   2              COsdFxHLine(ROW(4), COL(12), LENGTH(1), _H_, _WRITE_BYTE1);
1185   2              COsdFxHLine(ROW(4), COL(13), LENGTH(1), _z_, _WRITE_BYTE1);
1186   2          }
1187   1          else
1188   1          {
1189   2              // V016 VGA Patch Note (3) Modify 20100831 Start
1190   2              // Patch Reason : Modify for 832x624@74.53Hz always shown as 832x624@75Hz.
1191   2              /*
1192   2              COsdFxShowNumber(ROW(4), COL(12), (stModeInfo.IVFreq + 5) / 10, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_
             -OFF | _SHOW_2));
1193   2              */
1194   2              if((GET_INPUTSOURCE_TYPE() == _SOURCE_VGA) && (ucModeIndex == _MODE_832x624_75HZ))
1195   2              {
1196   3                  COsdFxShowNumber(ROW(4), COL(12), 75, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_2));
1197   3              }
1198   2              else
1199   2              {
1200   3                  COsdFxShowNumber(ROW(4), COL(12), (stModeInfo.IVFreq + 5) / 10, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_2));
1201   3              }
1202   2              // V016 VGA Patch Note (3) Modify 20100831 End
1203   2      
1204   2              COsdFxHLine(ROW(4), COL(14), LENGTH(1), _H_, _WRITE_BYTE1);
1205   2              COsdFxHLine(ROW(4), COL(15), LENGTH(1), _z_, _WRITE_BYTE1);
1206   2          }
1207   1          // V012 Modify 20100320 End
1208   1      
1209   1          COsdFxChange1bitColor(ROW(4), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1210   1      
1211   1          COsdFxEnableOsd();
1212   1      }
1213          
1214          //--------------------------------------------------
1215          // Description  : Check Source Type.
1216          // Input Value  :
1217          // Output Value :
1218          //--------------------------------------------------
1219          BYTE COsdDispJudgeSourceType(void)
1220          {
1221   1          BYTE temp = 0;
1222   1      
1223   1      #if(_SOURCE_SEARCH_TYPE_BY_OSD == _ON)
1224   1          /*
1225   1          if(stSystemData.SearchIndex == 0)   //HDMI
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 22  

1226   1          {
1227   1              temp = 2;
1228   1          }
1229   1          else if(stSystemData.SearchIndex == 1)   //VGA
1230   1          {
1231   1              temp = 0;
1232   1          }
1233   1          else if(stSystemData.SearchIndex == 2)   //DP
1234   1          {
1235   1              temp = 3;
1236   1          }
1237   1          else
1238   1          {
1239   1              temp = 0;
1240   1          }
1241   1          */
1242   1          if((GET_INPUTPORT_TYPE(stSystemData.SearchIndex) == _A0_VGA_PORT) || (GET_INPUTPORT_TYPE(stSystemData.
             -SearchIndex) == _A1_VGA_PORT))
1243   1          {
1244   2              temp = 0;
1245   2          }
1246   1      #if(_TMDS_SUPPORT == _ON)
1247   1          else if((GET_INPUTPORT_TYPE(stSystemData.SearchIndex) == _D0_DVI_PORT) || (GET_INPUTPORT_TYPE(stSystem
             -Data.SearchIndex) == _D1_DVI_PORT)
1248   1               || (GET_INPUTPORT_TYPE(stSystemData.SearchIndex) == _D0_DVI_I_PORT) || (GET_INPUTPORT_TYPE(stSyst
             -emData.SearchIndex) == _D1_DVI_I_PORT))
1249   1          {
1250   2              temp = 1;
1251   2          }
1252   1      #if(_HDMI_SUPPORT == _ON)
                  else if((GET_INPUTPORT_TYPE(stSystemData.SearchIndex) == _D0_HDMI_PORT) || (GET_INPUTPORT_TYPE(stSyste
             -mData.SearchIndex) == _D1_HDMI_PORT))
                  {
                      temp = 2;
                  }
              #endif
1258   1      #if(_DP_SUPPORT == _ON)
                  else if((GET_INPUTPORT_TYPE(stSystemData.SearchIndex) == _D0_DP_PORT) || (GET_INPUTPORT_TYPE(stSystemD
             -ata.SearchIndex) == _D1_DP_PORT))
                  {
                      temp = 3;
                  }
              #endif
1264   1      #endif
1265   1          else
1266   1          {
1267   2              temp = 0;
1268   2          }
1269   1      
1270   1      #else
              
              #if(_SWITCH_INPUT_SOURCE_OSD == _ON)
                  if(GET_SOURCE_OSD_STATUS())
                  {
                      if((GET_INPUTPORT_TYPE(g_ucSearchIndex) == _A0_VGA_PORT) || (GET_INPUTPORT_TYPE(g_ucSearchIndex) =
             -= _A1_VGA_PORT))
                      {
                          temp = 0;
                      }
                      else if((GET_INPUTPORT_TYPE(g_ucSearchIndex) == _D0_DVI_PORT) || (GET_INPUTPORT_TYPE(g_ucSearchInd
             -ex) == _D1_DVI_PORT))
                      {
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 23  

                          temp = 1;
                      }
                      else if((GET_INPUTPORT_TYPE(g_ucSearchIndex) == _D0_HDMI_PORT) || (GET_INPUTPORT_TYPE(g_ucSearchIn
             -dex) == _D1_HDMI_PORT))
                      {
                          temp = 2;
                      }
                      else if((GET_INPUTPORT_TYPE(g_ucSearchIndex) == _D0_DP_PORT) || (GET_INPUTPORT_TYPE(g_ucSearchInde
             -x) == _D1_DP_PORT))
                      {
                          temp = 3;
                      }
                      else
                      {
                          temp = 0;
                      }
                  }
              #endif
              
              #if(_YPBPR_SUPPORT == _ON)
                  if((GET_INPUTSOURCE_TYPE() == _SOURCE_VGA) || (GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR))
              #else
                  if(GET_INPUTSOURCE_TYPE() == _SOURCE_VGA)
              #endif
                  {
                      temp = 0;
                  }
              
              #if(_TMDS_SUPPORT == _ON)
                  else if(GET_INPUTSOURCE_TYPE() == _SOURCE_DVI)
                  {
                      temp = 1;
                  }
              
              #if(_HDMI_SUPPORT == _ON)
                  else if(GET_INPUTSOURCE_TYPE() == _SOURCE_HDMI)
                  {
                      temp = 2;
                  }
              #endif // End of #if(_HDMI_SUPPORT == _ON)
              
              #if(_DP_SUPPORT == _ON)
                  else if(GET_INPUTSOURCE_TYPE() == _SOURCE_DP)
                  {
                      temp = 3;
                  }
              #endif
              
              #endif // End of #if(_TMDS_SUPPORT == _ON)
              
              #endif
1330   1      
1331   1          return temp;
1332   1      
1333   1      }
1334          
1335          // V015 VGA Patch Note (12) Modify 20100625 Start
1336          // Patch Reason : Modify OSD Reslotion show type for vedio timing.
1337          //--------------------------------------------------
1338          // Description  : Show Resolution function
1339          // Input Value  : ucRow-Input Row, ucCol-Input Col, bVedioTiming-Vedio Timing Flag, bInterlace-Interlace M
             -ode Flag
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 24  

1340          // Output Value : Flag for Information Style
1341          //--------------------------------------------------
1342          bit COsdDispShowResolution(BYTE ucRow, BYTE ucCol, bit bVedioTiming, bit bInterlace)
1343          {
1344   1          bit bFlag = 0;
1345   1      
1346   1          // V016 VGA Patch Note (2) Modify 20100730 Start
1347   1          // Patch Reason : Modify OSD Reslotion show type for vedio timing, Update for V015 Patch Note (12).
1348   1          /*
1349   1          if((bVedioTiming == _TRUE))
1350   1          {
1351   1              if(GET_COLOR_FORMAT_STATUS() == _YUV_COLOR_FORMAT)
1352   1              {
1353   1                  if(bInterlace == _INTERLACE_TIMING)
1354   1                  {
1355   1                      COsdFxShowNumber(ROW(ucRow), COL(ucCol), stModeInfo.IVHeight * 2, (_ALIGN_LEFT | _FORCE_SH
             -OW_NUMBER_OFF | _SHOW_4));
1356   1                      COsdFxHLine(ROW(ucRow), COL(ucCol + 4), LENGTH(1), _i_, _WRITE_BYTE1);
1357   1                  }
1358   1                  else
1359   1                  {
1360   1                      COsdFxShowNumber(ROW(ucRow), COL(ucCol), stModeInfo.IVHeight, (_ALIGN_LEFT | _FORCE_SHOW_N
             -UMBER_OFF | _SHOW_4));
1361   1                      COsdFxHLine(ROW(ucRow), COL(ucCol + 4), LENGTH(1), _p_, _WRITE_BYTE1);
1362   1                  }
1363   1      
1364   1                  bFlag = 0;
1365   1      
1366   1                  return bFlag;
1367   1              }
1368   1          }
1369   1      
1370   1          COsdFxShowNumber(ROW(ucRow), COL(ucCol + 1), stModeInfo.IHWidth, (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OF
             -F | _SHOW_4));
1371   1          COsdFxHLine(ROW(ucRow), COL(ucCol + 2), LENGTH(1), 0x0e, _WRITE_BYTE1);
1372   1      
1373   1          if(bInterlace == _INTERLACE_TIMING)
1374   1          {
1375   1              COsdFxShowNumber(ROW(ucRow), COL(ucCol + 3), stModeInfo.IVHeight * 2, (_ALIGN_LEFT | _FORCE_SHOW_N
             -UMBER_OFF | _SHOW_3));
1376   1          }
1377   1          else
1378   1          {
1379   1              COsdFxShowNumber(ROW(ucRow), COL(ucCol + 3), stModeInfo.IVHeight, (_ALIGN_LEFT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_3));
1380   1          }
1381   1      
1382   1          bFlag = 1;
1383   1          */
1384   1          if(bInterlace == _INTERLACE_TIMING)
1385   1          {
1386   2              COsdFxShowNumber(ROW(ucRow), COL(ucCol), stModeInfo.IVHeight * 2, (_ALIGN_LEFT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_4));
1387   2              COsdFxHLine(ROW(ucRow), COL(ucCol + 4), LENGTH(1), _i_, _WRITE_BYTE1);
1388   2              bFlag = 0;
1389   2          }
1390   1          else
1391   1          {
1392   2              if((bVedioTiming == _TRUE) && ((bit)CScalerGetBit(_SYNC_SELECT_47, _BIT4)) && (GET_COLOR_FORMAT_ST
             -ATUS() == _YUV_COLOR_FORMAT))
1393   2              {
1394   3                  COsdFxShowNumber(ROW(ucRow), COL(ucCol), stModeInfo.IVHeight, (_ALIGN_LEFT | _FORCE_SHOW_NUMBE
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 25  

             -R_OFF | _SHOW_4));
1395   3                  COsdFxHLine(ROW(ucRow), COL(ucCol + 4), LENGTH(1), _p_, _WRITE_BYTE1);
1396   3                  bFlag = 0;
1397   3              }
1398   2              else
1399   2              {
1400   3                  COsdFxShowNumber(ROW(ucRow), COL(ucCol + 1), stModeInfo.IHWidth, (_ALIGN_RIGHT | _FORCE_SHOW_N
             -UMBER_OFF | _SHOW_4));
1401   3                  COsdFxHLine(ROW(ucRow), COL(ucCol + 2), LENGTH(1), 0x0e, _WRITE_BYTE1);
1402   3                  COsdFxShowNumber(ROW(ucRow), COL(ucCol + 3), stModeInfo.IVHeight, (_ALIGN_LEFT | _FORCE_SHOW_N
             -UMBER_OFF | _SHOW_3));
1403   3                  bFlag = 1;
1404   3              }
1405   2          }
1406   1          // V016 VGA Patch Note (2) Modify 20100730 End
1407   1      
1408   1          return bFlag;
1409   1      }
1410          
1411          //--------------------------------------------------
1412          // Description  : Load font, draw window when source from power saving
1413          // Input Value  : none
1414          // Output Value : none
1415          //--------------------------------------------------
1416          void COSDDispTimingInfoStyle(void)
1417          {
1418   1          // V016 VGA Patch Note (3) Modify 20100831 Start
1419   1          // Patch Reason : Modify for 832x624@74.53Hz always shown as 832x624@75Hz.
1420   1          BYTE ucModeIndex = 0;
1421   1          // V016 VGA Patch Note (3) Modify 20100831 End
1422   1      
1423   1          COsdDispClearText(ROW(23), COL(5), WIDTH(20), HEIGHT(1));
1424   1      
1425   1      #if(_YPBPR_SUPPORT == _ON)
1426   1          if(GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR)
1427   1          {
1428   2              switch(stModeInfo.ModeCurr)
1429   2              {
1430   3                  case _VIDEO_1440x576i_50HZ:
1431   3                  case _VIDEO_1440x480i_60HZ:
1432   3                  case _VIDEO_1920x1080i_50HZ:
1433   3                  case _VIDEO_1920x1080i_60HZ:
1434   3                  case _VIDEO_1920x1080i_50HZ_2:
1435   3                      COsdDispShowResolution(ROW(22), COL(15), _TRUE, _INTERLACE_TIMING);
1436   3                      break;
1437   3      
1438   3                  case _VIDEO_720x576p_50HZ:
1439   3                  case _VIDEO_720x480p_60HZ:
1440   3                  case _VIDEO_1280x720p_50HZ:
1441   3                  case _VIDEO_1280x720p_60HZ:
1442   3                  case _VIDEO_1920x1080p_50HZ:
1443   3                  case _VIDEO_1920x1080p_60HZ:
1444   3                  default:
1445   3                      COsdDispShowResolution(ROW(22), COL(15), _TRUE, _PROGRESS_TIMING);
1446   3                      break;
1447   3              }
1448   2          }
1449   1          else
1450   1      #endif
1451   1          {
1452   2              if(GET_INPUTSOURCE_TYPE() == _SOURCE_VGA)
1453   2              {
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 26  

1454   3                  if(GET_MODE_SEARCH_TYPE() == _PRESET_MODE_TYPE)
1455   3                  {
1456   4                      pData[0] = stModeInfo.ModeCurr;
1457   4                  }
1458   3                  else if(GET_MODE_SEARCH_TYPE() == _USER_MODE_TYPE)
1459   3                  {
1460   4                      CEepromLoadUserFIFOModeData((stModeInfo.ModeCurr / 4), pData);
1461   4                      pData[0] = pData[(stModeInfo.ModeCurr % 4) * 4];
1462   4                  }
1463   3      
1464   3                  // V016 VGA Patch Note (3) Modify 20100831 Start
1465   3                  // Patch Reason : Modify for 832x624@74.53Hz always shown as 832x624@75Hz.
1466   3                  ucModeIndex = pData[0];
1467   3                  // V016 VGA Patch Note (3) Modify 20100831 End
1468   3      
1469   3                  switch(pData[0])
1470   3                  {
1471   4                      case _MODE_1920x1080i_50Hz:
1472   4                      case _MODE_1920x1080i_60HZ:
1473   4                      case _MODE_1440x480i_60HZ:
1474   4                      case _MODE_1440x576i_50Hz:
1475   4                      case _MODE_1920x1080i_50HZ_2:
1476   4                          COsdDispShowResolution(ROW(22), COL(15), _TRUE, _INTERLACE_TIMING);
1477   4                          break;
1478   4      
1479   4                      case _MODE_720x480_60HZ:
1480   4                      case _MODE_720x480_60HZ_GTF:
1481   4                      case _MODE_720x576_60HZ:
1482   4                      case _MODE_1920x1080_60HZ_XBOX:
1483   4                      case _MODE_1920x1080_60HZ_RB:
1484   4                      case _MODE_1920x1080_60HZ:
1485   4                      case _MODE_1920x1080_50HZ_2:
1486   4                      case _MODE_1280x720_60HZ_2:
1487   4                      case _MODE_720x480p_60HZ:
1488   4                      case _MODE_720x576p_50Hz:
1489   4                      case _MODE_1280x720p_50HZ:
1490   4                      case _MODE_1280x720p_60HZ:
1491   4                      case _MODE_1920x1080p_50Hz:
1492   4                      case _MODE_1920x1080p_60HZ:
1493   4                          COsdDispShowResolution(ROW(22), COL(15), _TRUE, _PROGRESS_TIMING);
1494   4                          break;
1495   4      
1496   4                      // V016 VGA Patch Note (3) Modify 20100730 Start
1497   4                      // Patch Reason : Modify 640x350_70 Timing to show blank on top and buttom.
1498   4                      case _MODE_640x350_70HZ:
1499   4                          COsdFxShowNumber(ROW(22), COL(16), 640, (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | _SHOW
             -_4));
1500   4                          COsdFxHLine(ROW(22), COL(16), LENGTH(1), 0x0e, _WRITE_BYTE1);
1501   4                          COsdFxShowNumber(ROW(22), COL(17), 350, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_
             -3));
1502   4                          break;
1503   4                      // V016 VGA Patch Note (3) Modify 20100730 End
1504   4      
1505   4                      default:
1506   4                          COsdDispShowResolution(ROW(22), COL(15), _FALSE, _PROGRESS_TIMING);
1507   4                          break;
1508   4                  }
1509   3      
1510   3              }
1511   2              else
1512   2              {
1513   3                  COsdDispShowResolution(ROW(23), COL(9), _FALSE, _PROGRESS_TIMING);
C51 COMPILER V8.02   REALTEK_OSDDISP                                                       03/05/2012 13:24:28 PAGE 27  

1514   3              }
1515   2          }
1516   1      
1517   1          // V016 VGA Patch Note (3) Modify 20100831 Start
1518   1          // Patch Reason : Modify for 832x624@74.53Hz always shown as 832x624@75Hz.
1519   1          /*
1520   1          COsdFxShowNumber(ROW(23), COL(17), (stModeInfo.IVFreq + 5) / 10, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF
             - | _SHOW_2));
1521   1          */
1522   1          if((GET_INPUTSOURCE_TYPE() == _SOURCE_VGA) && (ucModeIndex == _MODE_832x624_75HZ))
1523   1          {
1524   2              COsdFxShowNumber(ROW(22), COL(23), 75, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_2));
1525   2          }
1526   1          else
1527   1          {
1528   2              COsdFxShowNumber(ROW(22), COL(23), (stModeInfo.IVFreq + 5) / 10, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER
             -_OFF | _SHOW_2));
1529   2          }
1530   1          // V016 VGA Patch Note (3) Modify 20100831 End
1531   1      
1532   1          COsdFxHLine(ROW(22), COL(25), LENGTH(1), _H_, _WRITE_BYTE1);
1533   1          COsdFxHLine(ROW(22), COL(26), LENGTH(1), _z_, _WRITE_BYTE1);
1534   1      
1535   1          COsdFxChange1bitColor(ROW(22), COL(5), WIDTH(30), HEIGHT(1), FGCOLOR(_CP_PINK), BGCOLOR(_CP_BLACK));
1536   1      }
1537          // V015 VGA Patch Note (12) Modify 20100625 End
1538          
1539          #endif  // End of #if(_OSD_TYPE == _REALTEK_OSD)
1540          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4159    ----
   CONSTANT SIZE    =     82    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      65
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  6 WARNING(S),  0 ERROR(S)
