C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE REALTEK_OSD
OBJECT MODULE PLACED IN .\Output\Realtek_Osd.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE User\Realtek OSD\Code\Realtek_Osd.c OPTIMIZE(9,SPEED) DEFINE(_PROJECT=_RTD2
                    -472D_DEMO_BOARD) PRINT(.\Output\Realtek_Osd.lst) OBJECT(.\Output\Realtek_Osd.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2010>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : Osd.c No.0000
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          
  20          #define __REALTEK_OSD__
  21          
  22          #include "Common\Header\Include.h"
  23          
  24          #if(_OSD_TYPE == _REALTEK_OSD)
  25          
  26          //--------------------------------------------------
  27          // Description  :
  28          // Input Value  :
  29          // Output Value :
  30          //--------------------------------------------------
  31          void COsdHandler(void)
  32          {
  33   1          COsdSystemFlowProc();
  34   1          COsdEventMsgProc();
  35   1      #if(_SWITCH_INPUT_SOURCE_OSD == _ON)
  36   1          if(((ucCurrState == _ACTIVE_STATE ) || (ucCurrState == _SLEEP_STATE) || (ucCurrState == _NOSIGNAL_STAT
             -E) || (ucCurrState == _NOSUPPORT_STATE)))
  37   1          {
  38   2              if(((ucCurrState == _SLEEP_STATE) || (ucCurrState == _NOSIGNAL_STATE) || (ucCurrState == _NOSUPPOR
             -T_STATE)) && (ucKeyMessage == _MENU_KEY_MESSAGE) && (ucOsdState == _MENU_NONE)&&!bAgeModeOn)
  39   2              {
  40   3              #if _DEBUG_MESSAGE_SUPPORT
  41   3                      CDebugMessage("CWakeUpShowSource", 0);
  42   3               #endif
  43   3                  CWakeUpShowSource();
  44   3              }
  45   2      
  46   2              if(((ucCurrState == _SLEEP_STATE) || (ucCurrState == _NOSIGNAL_STATE) )&&(ucKeyMessage ==_AGE_MODE_MESSAG
             -E) &&(ucOsdState == _MENU_NONE)&&bTimerAgeModeCtrl)
  47   2                      {
  48   3                      if(bAgeModeOn)
  49   3                              {
  50   4                              bAgeModeOn=_FALSE;      
  51   4                              bTimerAgeModeCtrl=_FALSE;
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 2   

  52   4                              ucTimer0Cnt1=600;
  53   4                              CModeResetMode();
  54   4                              #if _DEBUG_MESSAGE_SUPPORT
  55   4                              CDebugMessage("bAgeModeOn", bAgeModeOn);
  56   4                              CDebugMessage("bTimerAgeModeCtrl", bTimerAgeModeCtrl);
  57   4      
  58   4                              #endif
  59   4      
  60   4                              }
  61   3                      else
  62   3                              {
  63   4                                      {
  64   5                                      bAgeModeOn=_TRUE;
  65   5                                      ucTimer0Cnt1=100;
  66   5                                      CScalerSetBit(_HOST_CTRL_01, ~_BIT1, 0x00);
  67   5                                      CModeSetFreeRun();
  68   5                                      CScalerEnableDisplayTiming();
  69   5                                      CPowerPanelOn();
  70   5      
  71   5                                      CScalerSetByte(0x6C, 0x20);
  72   5                                      CScalerSetByte(0x6D, 0xFF);
  73   5                                      CScalerSetByte(0x6D, 0xFF);
  74   5                                      CScalerSetByte(0x6D, 0xFF);                     
  75   5      
  76   5                                      if(!bAgeModeWhiteFlag)
  77   5                                              bAgeModeWhiteFlag=_TRUE;
  78   5                                      else
  79   5                                              bAgeModeWhiteFlag=_FALSE;
  80   5                                      }
  81   4      
  82   4                              #if _DEBUG_MESSAGE_SUPPORT
  83   4                              CDebugMessage("bAgeModeOn2", bAgeModeOn);
  84   4                              CDebugMessage("bTimerAgeModeCtrl2", bTimerAgeModeCtrl);
  85   4      
  86   4                              #endif
  87   4      
  88   4                              
  89   4                              }
  90   3                      
  91   3                      
  92   3                      
  93   3                      }
  94   2              if((ucKeyMessage < _KEY_AMOUNT) && ((ucCurrState == _ACTIVE_STATE ) || (GET_SOURCE_OSD_STATUS()))&
             -&!bAgeModeOn)
  95   2              {
  96   3              #if _DEBUG_MESSAGE_SUPPORT
  97   3                      CDebugMessage("ucOsdState", ucOsdState);
  98   3                      CDebugMessage("ucKeyMessage",ucKeyMessage);
  99   3               #endif
 100   3                  (*OperationTable[ucOsdState][ucKeyMessage])();
 101   3      
 102   3                  if(GET_SOURCE_OSD_STATUS())
 103   3                  {
 104   4                      CTimerReactiveTimerEvent(SEC(2), COsdDispOsdTimerEvent);
 105   4                      CTimerReactiveTimerEvent(SEC(2), CModePowerSavingEvent);
 106   4                  }
 107   3                  else
 108   3                  {
 109   4                      if(stOsdUserData.OsdTimeout > 3)
 110   4                      {
 111   5                          CTimerReactiveTimerEvent(SEC(stOsdUserData.OsdTimeout), COsdDispOsdTimerEvent);
 112   5                      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 3   

 113   4                      else
 114   4                      {
 115   5                          CTimerCancelTimerEvent(COsdDispOsdTimerEvent);
 116   5                      }
 117   4                  }
 118   3              }
 119   2              else if((ucKeyMessage ==4) && ((ucCurrState == _ACTIVE_STATE ) || (GET_SOURCE_OSD_STATUS()))&&!bAgeModeOn
             -)//for auto key issue sjp20110804
 120   2                      {
 121   3                      
 122   3                      (*OperationTable[0][1])();
 123   3                      
 124   3                      }
 125   2              else if((ucKeyMessage ==6) && ((ucCurrState == _ACTIVE_STATE ) || (GET_SOURCE_OSD_STATUS()))&&!bAgeModeOn
             -)//for autoCOLOR 20110809     
 126   2                      {
 127   3                              (*OperationTable[0][2])();
 128   3                      }
 129   2              /*else if ((ucKeyMessage ==8) && ((ucCurrState == _ACTIVE_STATE ) || (GET_SOURCE_OSD_STATUS())))
 130   2              {
 131   2                  GCMode = 1;//Factory mode sjp20110625
 132   2                 (*OperationTable[0][0])();
 133   2      
 134   2              }
 135   2              else if((ucKeyMessage ==9) && ((ucCurrState == _ACTIVE_STATE ) || (GET_SOURCE_OSD_STATUS())))
 136   2              {
 137   2                 GCMode = 2;//for PWMLUMI
 138   2                 (*OperationTable[0][0])();   
 139   2                      }       */
 140   2          }
 141   1      #else
                  if(ucCurrState == _ACTIVE_STATE)
                  {
                      if(ucKeyMessage < _KEY_AMOUNT)
                      {
                          (*OperationTable[ucOsdState][ucKeyMessage])();
              
                          if(stOsdUserData.OsdTimeout > 3)
                          {
                              CTimerReactiveTimerEvent(SEC(stOsdUserData.OsdTimeout), COsdDispOsdTimerEvent);
                          }
                          else
                          {
                              CTimerCancelTimerEvent(COsdDispOsdTimerEvent);
                          }
                      }
                  }
              #endif  // End of (_SWITCH_INPUT_SOURCE_OSD == _ON)
 159   1      
 160   1      #if(_SWITCH_INPUT_SOURCE == _ON)
                  else
                  {
                      if(ucKeyMessage == _EXIT_KEY_MESSAGE)
                      {
                          CSourceSwitchInputSource();
                      }
                  }
              #endif
 169   1      }
 170          
 171          //--------------------------------------------------
 172          // Description  :
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 4   

 173          // Input Value  :
 174          // Output Value :
 175          //--------------------------------------------------
 176          void COsdSystemFlowProc(void)
 177          {
 178   1          BYTE connect = 1;
 179   1      
 180   1      #if(_CABLE_CONNECT_CHECK)
 181   1      
 182   1          BYTE connect_d0 = 1, connect_d1 = 1, connect_a0 = 1, connect_a1 = 1;
 183   1      
 184   1      
 185   1      #endif
 186   1      
 187   1          switch(ucCurrState)
 188   1          {
 189   2              case _PWOFF_STATE:
 190   2                  break;
 191   2      
 192   2              case _INITIAL_STATE:
 193   2                  break;
 194   2      
 195   2              case _SEARCH_STATE:
 196   2                  break;
 197   2      
 198   2              case _ACTIVE_STATE:
 199   2                  if(GET_OSD_READYFORDISPLAY() == _TRUE)
 200   2                  {
 201   3      
 202   3      #if(_DDCCI_SUPPORT == _ON)
                              if(GET_DDCCI_STATUS())
                              {
              
              #if((_MCU_TYPE == _REALTEK_RTD2120) || (_MCU_TYPE == _REALTEK_RTD2122))
              
                                  if((GET_INPUT_PORT(g_ucSearchIndex) == _A0_INPUT_PORT)
                                  || (GET_INPUT_PORT(g_ucSearchIndex) == _A1_INPUT_PORT)
                                  || (GET_INPUT_PORT(g_ucSearchIndex) == _VI_INPUT_PORT))
                                  {
                                      MCU_I2C_SET_SLAVE_FF27 = MCU_I2C_SET_SLAVE_FF27 & (~_BIT0);
                                  }
                                  else
                                  {
                                      MCU_I2C_SET_SLAVE_FF27 = MCU_I2C_SET_SLAVE_FF27 | (_BIT0);
                                  }
              
              #elif(_MCU_TYPE == _REALTEK_EMBEDDED)
              
                                  if((GET_INPUT_PORT(g_ucSearchIndex) == _A0_INPUT_PORT)
                                  || (GET_INPUT_PORT(g_ucSearchIndex) == _A1_INPUT_PORT)
                                  || (GET_INPUT_PORT(g_ucSearchIndex) == _VI_INPUT_PORT))
                                  {
                                      MCU_I2C_CHANNEL_CTRL_FF2B &= (~_BIT0);
                                      MCU_I2C_SET_SLAVE_FF23 = MCU_I2C_SET_SLAVE_FF23 & (~_BIT0);
                                  }
                                  else if(GET_INPUT_PORT(g_ucSearchIndex) == _D0_INPUT_PORT)
                                  {
              
              #if(_DDC_CHANNEL_FOR_D0 == _DDC2)
                                      MCU_I2C_CHANNEL_CTRL_FF2B &= (~_BIT0);
                                      MCU_I2C_SET_SLAVE_FF23 |= _BIT0;
              #else
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 5   

                                      MCU_I2C_CHANNEL_CTRL_FF2B |= _BIT0;
                                      MCU_I2C_SET_SLAVE_FF23 &= (~_BIT0);
              #endif
              
                                  }
                                  else
                                  {
              
              #if(_DDC_CHANNEL_FOR_D1 == _DDC2)
                                      MCU_I2C_CHANNEL_CTRL_FF2B &= (~_BIT0);
                                      MCU_I2C_SET_SLAVE_FF23 |= _BIT0;
              #else
                                      MCU_I2C_CHANNEL_CTRL_FF2B |= _BIT0;
                                      MCU_I2C_SET_SLAVE_FF23 &= (~_BIT0);
              #endif
              
                                  }
              #endif // End of _MCU_TYPE
              
                              }
              #else   // #if(_DDCCI_SUPPORT == _ON)
 256   3      
 257   3          #if((_MCU_TYPE == _REALTEK_RTD2120) || (_MCU_TYPE == _REALTEK_RTD2122))
                                  MCU_I2C_SET_SLAVE_FF27 = 0x6a;
              
                  #elif(_MCU_TYPE == _REALTEK_EMBEDDED)
 261   3                          MCU_I2C_SET_SLAVE_FF23 = 0x6a;
 262   3          #endif
 263   3      
 264   3      #endif  // End of #if(_DDCCI_SUPPORT == _ON)
 265   3      
 266   3                      CLR_OSD_READYFORDISPLAY();
 267   3                      CAdjustBackgroundColor(0x00, 0x00, 0x00);
 268   3      
 269   3                      if(GET_FIRST_LOADFONT() == _TRUE)
 270   3                      {
 271   4                          CLR_FIRST_LOADFONT();
 272   4                          COsdDispFirstTimeLoadFont();
 273   4                      }
 274   3                  }
 275   2      
 276   2                  break;
 277   2      
 278   2              case _NOSUPPORT_STATE:
 279   2                  if(GET_OSD_READYFORDISPLAY() == _TRUE)
 280   2                  {
 281   3                      CLR_OSD_READYFORDISPLAY();
 282   3                      CAdjustBackgroundColor(0xff, 0x00, 0x00);
 283   3                      CTimerReactiveTimerEvent(SEC(1), CModeNoSupportEvent);
 284   3                  }
 285   2      
 286   2                  break;
 287   2      
 288   2              case _NOSIGNAL_STATE:
 289   2                  if(GET_OSD_READYFORDISPLAY() == _TRUE)
 290   2                  {
 291   3      
 292   3                      CLR_OSD_READYFORDISPLAY();
 293   3                      CAdjustBackgroundColor(0x00, 0x00, 0x00);
 294   3      #if(_CABLE_CONNECT_CHECK)
 295   3      
 296   3      #ifdef _A0_PORT
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 6   

 297   3                      connect_a0 = connect & bA0_CONNECT;
 298   3      #endif
 299   3      
 300   3      #ifdef _A1_PORT
 301   3                      connect_a1 = connect & bA1_CONNECT;
 302   3      #endif
 303   3      
 304   3      #ifdef _D0_PORT
 305   3      
 306   3      #if(_DP_SUPPORT == _ON)
              
              #if(_PCB_TYPE == _RTD2472RD_DEMO_PCB)
                              connect_d0 = connect & CDpAuxPinCableConnect();
              #else
                              connect_d0 = connect & bD0_CONNECT;
              #endif
              
              #endif  // End of #if(_DP_SUPPORT == _ON)
 315   3      
 316   3      #endif
 317   3      
 318   3      #ifdef _D1_PORT
 319   3                      connect_d1 = connect & bD1_CONNECT;
 320   3      #endif
 321   3      
 322   3                      connect = (connect_a0 & connect_a1 & connect_d0 & connect_d1);
 323   3      
 324   3      #endif
 325   3      
 326   3      
 327   3      
 328   3                      if(connect)
 329   3                      {
 330   4                          CTimerReactiveTimerEvent(SEC(2), CModeNoCableEvent);
 331   4                          CTimerActiveTimerEvent(SEC(4), CModePowerSavingEvent);
 332   4                          // In DP Power Management,this stage must to enter PowerDown Mode
 333   4                      }
 334   3                      else
 335   3                      {
 336   4                          CTimerReactiveTimerEvent(SEC(1), CModeNoSignalEvent);
 337   4                          CTimerActiveTimerEvent(SEC(3), CModePowerSavingEvent);
 338   4                      }
 339   3                  }
 340   2                  break;
 341   2      
 342   2              case _SLEEP_STATE:
 343   2                  break;
 344   2      
 345   2              default:
 346   2                  break;
 347   2          }
 348   1      }
 349          
 350          //--------------------------------------------------
 351          // Description  :
 352          // Input Value  :
 353          // Output Value :
 354          //--------------------------------------------------
 355          void COsdEventMsgProc(void)
 356          {
 357   1          switch(ucOsdEventMsg)
 358   1          {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 7   

 359   2              case _SHOW_NOSIGNAL_MSG:
 360   2                  COsdDispNoSignalProc();
 361   2                  break;
 362   2      
 363   2              case _SHOW_NOCABLE_MSG:
 364   2                  COsdDispNoCableProc();
 365   2                  break;
 366   2      
 367   2              case _SHOW_NOSUPPORT_MSG:
 368   2                  COsdDispNoSupportProc();
 369   2                  break;
 370   2      
 371   2              case _SAVE_EE_MODEUSERDATA_MSG:
 372   2                  CEepromSaveModeData(stModeInfo.ModeCurr);
 373   2                  break;
 374   2      
 375   2              case _SAVE_EE_SYSTEMDATA_MSG:
 376   2                  CEepromSaveSystemData();
 377   2                  break;
 378   2      
 379   2              case _SAVE_EE_OSDUSERDATA_MSG:
 380   2                  CEepromSaveOsdUserData();
 381   2                  break;
 382   2      
 383   2      #if(_MEMORY_LOCATION == _EEPROM)
 384   2              case _SAVE_EE_OSDRESERVEDATA_MSG:
 385   2                  CEepromSaveOsdReserveData();
 386   2                  break;
 387   2      #endif
 388   2      
 389   2              case _SAVE_EE_ADCDATA_MSG:
 390   2                  CEepromSaveAdcData();
 391   2                  break;
 392   2      
 393   2              case _SAVE_EE_COLORPROC0_MSG:
 394   2                  CEepromSaveBriConData();
 395   2                  CEepromSaveSystemData();
 396   2                  break;
 397   2      
 398   2              case _SAVE_EE_COLORPROC1_MSG:
 399   2                  CEepromSaveColorTempData();
 400   2                  break;
 401   2      
 402   2              case _ENTER_FACTORY_MODE_MSG:
 403   2                  break;
 404   2      
 405   2              case _CHANGE_SOURCE_MSG:
 406   2      
 407   2      #if(_SOURCE_SEARCH_TYPE_BY_OSD == _ON)
 408   2                  CEepromSaveOsdUserData();
 409   2      #endif
 410   2      
 411   2                  CEepromSaveSystemData();
 412   2      
 413   2      #if _DEBUG_MESSAGE_SUPPORT
 414   2      //CDebugMessage("CModeResetMode__CHANGE_SOURCE_MSG",0);
 415   2      //CDebugMessage("g_ucSearchIndex__CHANGE_SOURCE_MSG=%d",g_ucSearchIndex);
 416   2      #endif
 417   2      
 418   2                  CModeResetMode();
 419   2                  break;
 420   2      
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 8   

 421   2              case _DO_AUTO_CONFIG:
 422   2                  COsdDispAutoProc();
 423   2      
 424   2                  CTimerReactiveTimerEvent(SEC(0), CModeOsdDisplayTimingAndInputEvent);
 425   2                  break;
 426   2      
 427   2              case _SHOW_TIMINGINPUT_MSG:
 428   2                  COsdDispTimingAndInputSource();
 429   2                  CTimerActiveTimerEvent(SEC(5), COsdDispOsdTimerEvent);
 430   2                  break;
 431   2              case     _SAVE_LSLUMIDATA_MSG:
 432   2                   CEepromSaveLSlumiData();//lslumi DATA save sjp20110625
 433   2                   break;
 434   2              case    _SAVE_PWMLUMIDATA_MSG:
 435   2                      CEepromSavePWMlumiData();//PWM DATA save sjp20110715
 436   2                      break;
 437   2              default:
 438   2                  break;
 439   2          }
 440   1      
 441   1          ucOsdEventMsg = _NONE_MSG;
 442   1      }
 443          
 444          void COsdMenuNone(void)
 445          {
 446   1          COsdFxDisableOsd();
 447   1      
 448   1          CScalerLoadHardwareVLCFont(tFONT_GLOBAL2ND, 0x54);
 449   1          CScalerLoadHardwareVLCFont(tFONT_CHI, 0x60);
 450   1          //stOsdUserData.Language=_CHINESE_S;
 451   1              switch(stOsdUserData.Language)
 452   1          {
 453   2              case _CHINESE_T:
 454   2              case _CHINESE_S:
 455   2                  CScalerLoadHardwareVLCFont(tFONT_CHI, 0x60);
 456   2                  break;
 457   2      
 458   2              case _JAPAN:
 459   2                  CScalerLoadHardwareVLCFont(tFONT_JAP, 0x60);
 460   2                  break;
 461   2          }
 462   1      
 463   1          COsdFxApplyMapSetting(_OSD_MAP0);
 464   1      
 465   1          COsdFxChange1bitColor(ROW(0), COL(0), WIDTH(12), HEIGHT(9), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
 466   1          COsdFxChange2bitColor(ROW(18), COL(3), WIDTH(10), HEIGHT(2), COLOR00(_CP_BLACK), COLOR01(_CP_WHITE), C
             -OLOR10(_CP_WHITE), COLOR11(_CP_BLUE));
 467   1      
 468   1          COsdDispClearIcon(ROW(18), COL(3), 10, 2);//zhangping 101109
 469   1         COsdFxLoadIcon(ROW(18), COL(3), tOSD_RT_MARK_ICO1);//zhangping 101109
 470   1         COsdDispDrawInitWindow();
 471   1         #if _DEBUG_MESSAGE_SUPPORT
 472   1         CDebugMessage("stConBriData.Dicom==", stConBriData.Dicom);
 473   1         CDebugMessage("stConBriData.Gamma==", stConBriData.Gamma);
 474   1         #endif
 475   1         if((stConBriData.Gamma==0))
 476   1                 COsdFxChange1bitColor(ROW(1+stConBriData.Dicom), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTO
             -M), BGCOLOR(_CP_BLACK));//sjp20110625
 477   1         else
 478   1              {
 479   2              if(stConBriData.Gamma==4)//zp for OSD display the same with table loaded
 480   2                      {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 9   

 481   3                      stConBriData.Gamma=3;
 482   3                 COsdFxChange1bitColor(ROW(11+stConBriData.Gamma), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTT
             -OM), BGCOLOR(_CP_BLACK));//sjp20110625
 483   3                      }
 484   2              else
 485   2                      COsdFxChange1bitColor(ROW(11+stConBriData.Gamma), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM
             -), BGCOLOR(_CP_BLACK));//sjp20110625
 486   2                 
 487   2              }
 488   1      
 489   1        //  COsdDispClearIcon(ROW(9), COL(0), 2, 15);
 490   1      
 491   1          COsdFxCloseWindow(WINNO(1));
 492   1          COsdFxCloseWindow(WINNO(2));
 493   1          COsdFxCloseWindow(WINNO(3));
 494   1          COsdFxCloseWindow(WINNO(4));
 495   1          COsdFxCloseWindow(WINNO(6));
 496   1              
 497   1      if(GCMode==1)
 498   1      {       
 499   2          COsdFxDrawWindow(XSTART(0), YSTART(0), XEND(232), YEND(370), tOSD_WINDOW0_STYLE);
 500   2          COsdFxChangeWindowColor(COLOR00(_CP_LIGHTBLUE), tOSD_WINDOW0_STYLE);
 501   2      
 502   2          COsdFxDrawWindow(XSTART(0), YSTART(314), XEND(232), YEND(370), tOSD_WINDOW5_STYLE);
 503   2          COsdFxChangeWindowColor(COLOR00(_CP_GRAY), tOSD_WINDOW5_STYLE);
 504   2      
 505   2      COsdFxShowNumber(ROW(1), COL(14), stLSlumiData.DICOM350, (_ALIGN_LEFT| _FORCE_SHOW_NUMBER_OFF | _SHOW_3));
             -//sjp20110624   
 506   2      COsdFxShowNumber(ROW(2), COL(14), stLSlumiData.DICOM400, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3))
             -;//sjp20110624                        
 507   2      COsdFxShowNumber(ROW(3), COL(14), stLSlumiData.DICOM450, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3))
             -;//sjp20110624        
 508   2      COsdFxShowNumber(ROW(4), COL(14), stLSlumiData.DICOM500, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3))
             -;//sjp20110624                
 509   2      COsdFxShowNumber(ROW(5), COL(14), stLSlumiData.DICOM550, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3))
             -;//sjp20110624                
 510   2      COsdFxShowNumber(ROW(6), COL(14), stLSlumiData.DICOM600, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3))
             -;//sjp20110624                
 511   2      COsdFxShowNumber(ROW(7), COL(14), stLSlumiData.DICOM650, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3))
             -;//sjp20110624                
 512   2      COsdFxShowNumber(ROW(8), COL(14), stLSlumiData.DICOM700, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3))
             -;//sjp20110624                
 513   2      }
 514   1      else if(GCMode==2)//for PWMLUMI
 515   1      {
 516   2          COsdFxDrawWindow(XSTART(0), YSTART(0), XEND(232), YEND(370), tOSD_WINDOW0_STYLE);
 517   2          COsdFxChangeWindowColor(COLOR00(_CP_LIGHTBLUE), tOSD_WINDOW0_STYLE);
 518   2      
 519   2          COsdFxDrawWindow(XSTART(0), YSTART(314), XEND(232), YEND(370), tOSD_WINDOW5_STYLE);
 520   2          COsdFxChangeWindowColor(COLOR00(_CP_GRAY), tOSD_WINDOW5_STYLE);
 521   2      
 522   2      COsdFxShowNumber(ROW(1), COL(14), stPWMlumiData.DICOM350, (_ALIGN_LEFT| _FORCE_SHOW_NUMBER_OFF | _SHOW_3))
             -;//sjp20110715  
 523   2      COsdFxShowNumber(ROW(2), COL(14), stPWMlumiData.DICOM400, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3)
             -);//sjp20110715                       
 524   2      COsdFxShowNumber(ROW(3), COL(14), stPWMlumiData.DICOM450, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3)
             -);//sjp20110715       
 525   2      COsdFxShowNumber(ROW(4), COL(14), stPWMlumiData.DICOM500, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3)
             -);//sjp20110715               
 526   2      COsdFxShowNumber(ROW(5), COL(14), stPWMlumiData.DICOM550, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3)
             -);//sjp20110715               
 527   2      COsdFxShowNumber(ROW(6), COL(14), stPWMlumiData.DICOM600, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 10  

             -);//sjp20110715               
 528   2      COsdFxShowNumber(ROW(7), COL(14), stPWMlumiData.DICOM650, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3)
             -);//sjp20110715               
 529   2      COsdFxShowNumber(ROW(8), COL(14), stPWMlumiData.DICOM700, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_3)
             -);//sjp20110715               
 530   2      }
 531   1      else
 532   1      {
 533   2          COsdFxDrawWindow(XSTART(0), YSTART(0), XEND(192), YEND(370), tOSD_WINDOW0_STYLE);
 534   2          COsdFxChangeWindowColor(COLOR00(_CP_LIGHTBLUE), tOSD_WINDOW0_STYLE);
 535   2      
 536   2          COsdFxDrawWindow(XSTART(0), YSTART(314), XEND(192), YEND(370), tOSD_WINDOW5_STYLE);
 537   2          COsdFxChangeWindowColor(COLOR00(_CP_GRAY), tOSD_WINDOW5_STYLE);
 538   2      }
 539   1          // V015 VGA Patch Note (12) Modify 20100625 Start
 540   1          // Patch Reason : Modify OSD Reslotion show type for vedio timing.
 541   1          /*
 542   1          // V012 Modify 20100320 Start
 543   1          // V012 Patch Note (12) : Show video timing info in OSD.
 544   1          /*
 545   1          COsdFxShowNumber(ROW(23), COL(10), stModeInfo.IHWidth, (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | _SHOW_
             -4));
 546   1          COsdFxHLine(ROW(23), COL(11), LENGTH(1), 0x0e, _WRITE_BYTE1);
 547   1          COsdFxShowNumber(ROW(23), COL(12), stModeInfo.IVHeight, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF | _SHOW_
             -3));
 548   1          * /
 549   1          #if(_YPBPR_SUPPORT == _ON)
 550   1          if(GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR)
 551   1          {
 552   1               switch(stModeInfo.ModeCurr)
 553   1              {
 554   1                  // V013 VGA Patch Note (5) 20100409 Modify Start
 555   1                  // Patch Reason : Modify YPbPr search mode flow to cover confuse mode problem.
 556   1                  /*
 557   1                  case _VIDEO_720x576i_50HZ:
 558   1                  case _VIDEO_720x480i_60HZ:
 559   1                  * /
 560   1                  case _VIDEO_1440x576i_50HZ:
 561   1                  case _VIDEO_1440x480i_60HZ:
 562   1                  // V013 VGA Patch Note (5) 20100409 Modify End
 563   1      
 564   1                  case _VIDEO_1920x1080i_50HZ:
 565   1                  case _VIDEO_1920x1080i_60HZ:
 566   1      
 567   1                  // V013 VGA Patch Note (5) 20100409 Modify Start
 568   1                  // Patch Reason : Modify YPbPr search mode flow to cover confuse mode problem.
 569   1                  case _VIDEO_1920x1080i_50HZ_2:
 570   1                  // V013 VGA Patch Note (5) 20100409 Modify End
 571   1      
 572   1                      COsdFxShowNumber(ROW(23), COL(10), stModeInfo.IVHeight * 2, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_4));
 573   1                      COsdFxHLine(ROW(23), COL(14), LENGTH(1), _i_, _WRITE_BYTE1);
 574   1                  break;
 575   1      
 576   1                  case _VIDEO_720x576p_50HZ:
 577   1                  case _VIDEO_720x480p_60HZ:
 578   1                  case _VIDEO_1280x720p_50HZ:
 579   1                  case _VIDEO_1280x720p_60HZ:
 580   1                  case _VIDEO_1920x1080p_50HZ:
 581   1                  case _VIDEO_1920x1080p_60HZ:
 582   1                  default:
 583   1                      COsdFxShowNumber(ROW(23), COL(10), stModeInfo.IVHeight, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 11  

             -OFF | _SHOW_4));
 584   1                      COsdFxHLine(ROW(23), COL(14), LENGTH(1), _p_, _WRITE_BYTE1);
 585   1                  break;
 586   1              }
 587   1          }
 588   1          else
 589   1          #endif
 590   1          {
 591   1              if(GET_INPUTSOURCE_TYPE() == _SOURCE_VGA)
 592   1              {
 593   1                  if(GET_MODE_SEARCH_TYPE() == _PRESET_MODE_TYPE)
 594   1                  {
 595   1                      pData[0] = stModeInfo.ModeCurr;
 596   1                  }
 597   1                  else if(GET_MODE_SEARCH_TYPE() == _USER_MODE_TYPE)
 598   1                  {
 599   1                      CEepromLoadUserFIFOModeData((stModeInfo.ModeCurr / 4), pData);
 600   1                      pData[0] = pData[(stModeInfo.ModeCurr % 4) * 4];
 601   1                  }
 602   1      
 603   1                  switch(pData[0])
 604   1                  {
 605   1                      // V013 VGA Patch Note (24) Modify 20100514 Start
 606   1                      // Patch Reason : Mode search updates.
 607   1                      /*
 608   1                      case _MODE_720x480i_60Hz:
 609   1                      case _MODE_720x576i_50Hz:
 610   1                      * /
 611   1                      // V013 VGA Patch Note (24) Modify 20100514 End
 612   1      
 613   1                      case _MODE_1920x1080i_50Hz:
 614   1                      case _MODE_1920x1080i_60HZ:
 615   1                      case _MODE_1440x480i_60HZ:
 616   1                      case _MODE_1440x576i_50Hz:
 617   1                      case _MODE_1920x1080i_50HZ_2:
 618   1                          COsdFxShowNumber(ROW(23), COL(10), stModeInfo.IVHeight * 2, (_ALIGN_LEFT | _FORCE_SHOW
             -_NUMBER_OFF | _SHOW_4));
 619   1                          COsdFxHLine(ROW(23), COL(14), LENGTH(1), _i_, _WRITE_BYTE1);
 620   1                          break;
 621   1      
 622   1                      case _MODE_720x480p_60HZ:
 623   1                      case _MODE_720x576p_50Hz:
 624   1                      case _MODE_1280x720p_50HZ:
 625   1                      case _MODE_1280x720p_60HZ:
 626   1                      case _MODE_1920x1080p_50Hz:
 627   1                      case _MODE_1920x1080p_60HZ:
 628   1                          COsdFxShowNumber(ROW(23), COL(10), stModeInfo.IVHeight, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_4));
 629   1                          COsdFxHLine(ROW(23), COL(14), LENGTH(1), _p_, _WRITE_BYTE1);
 630   1                          break;
 631   1      
 632   1                      default:
 633   1                          COsdFxShowNumber(ROW(23), COL(10), stModeInfo.IHWidth, (_ALIGN_RIGHT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_4));
 634   1                          COsdFxHLine(ROW(23), COL(11), LENGTH(1), 0x0e, _WRITE_BYTE1);
 635   1                          COsdFxShowNumber(ROW(23), COL(12), stModeInfo.IVHeight, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));
 636   1                          break;
 637   1                  }
 638   1              }
 639   1              else
 640   1              {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 12  

 641   1                  COsdFxShowNumber(ROW(23), COL(10), stModeInfo.IHWidth, (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF 
             -| _SHOW_4));
 642   1                  COsdFxHLine(ROW(23), COL(11), LENGTH(1), 0x0e, _WRITE_BYTE1);
 643   1                  COsdFxShowNumber(ROW(23), COL(12), stModeInfo.IVHeight, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF 
             -| _SHOW_3));
 644   1              }
 645   1          }
 646   1          // V012 Modify 20100320 End
 647   1      
 648   1          COsdFxShowNumber(ROW(23), COL(17), (stModeInfo.IVFreq + 5) / 10, (_ALIGN_LEFT | _FORCE_SHOW_NUMBER_OFF
             - | _SHOW_2));
 649   1      
 650   1          COsdFxHLine(ROW(23), COL(19), LENGTH(1), _H_, _WRITE_BYTE1);
 651   1          COsdFxHLine(ROW(23), COL(20), LENGTH(1), _z_, _WRITE_BYTE1);
 652   1      
 653   1          COsdFxChange1bitColor(ROW(23), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_PINK), BGCOLOR(_CP_BLACK));
 654   1          */
 655   1       //   COSDDispTimingInfoStyle();
 656   1          // V015 VGA Patch Note (12) Modify 20100625 End
 657   1              if((stConBriData.Gamma==0)||(stConBriData.Gamma==4))
 658   1                      COsdDispPenPoint(ROW(17), COL(3), ROW(5), COL(3), _MENU_DICOM_SETTING);
 659   1              else            
 660   1                      COsdDispPenPoint(ROW(17), COL(3), ROW(5), COL(3), _MENU_GAMMA_SETTING);
 661   1      
 662   1      
 663   1          // V016 System Patch Note (1) Modify 20100729 Start
 664   1          // Patch Reason : Modify OSD Set position and Draw Window Function
 665   1          /*
 666   1          COsdFxSetPosition(WIDTH(280), WIDTH(400), stOsdUserData.OsdHPos, stOsdUserData.OsdVPos, 0x01);
 667   1          */
 668   1          COsdFxSetPosition(WIDTH(1040), WIDTH(440), stOsdUserData.OsdHPos, stOsdUserData.OsdVPos, 0x01);
 669   1          // V016 System Patch Note (1) Modify 20100729 End
 670   1      
 671   1          COsdFxEnableOsd();
 672   1      }
 673          
 674          void COsdLeftNone(void)// aoto keymessage sjp20110804
 675          {
 676   1           if(ucKeyMessage==4)
 677   1              {
 678   2                              stConBriData.Dicom=10;
 679   2                              stConBriData.Gamma=0;
 680   2                              Adjust_LUTtable(stConBriData.Dicom+3);//CTMRI TABLE SJP20110804
 681   2                              stSystemData.BackLight=tOSD_DICOMlumi[stConBriData.Dicom] ;
 682   2                                      COsdLeftSubBrightness();        
 683   2                              //CAdjustBacklight(stSystemData.BackLight);
 684   2                              (*OperationTable[0][0])();
 685   2                              
 686   2              }
 687   1          /*COsdFxDisableOsd();
 688   1          COsdDispAutoProc();*/
 689   1      }
 690          
 691          void COsdRightNone(void)
 692          {
 693   1           if(ucKeyMessage==6)
 694   1              {
 695   2      #if _DEBUG_MESSAGE_SUPPORT
 696   2      CDebugMessage("11111111111111",0);
 697   2      #endif
 698   2              
 699   2          COsdFxDisableOsd();
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 13  

 700   2          COsdDispAutoColorProc();
 701   2              } 
 702   1      //      COsdMenuFAutoColor();
 703   1      }
 704          
 705          void COsdExitNone(void)
 706          {
 707   1      #if(_SWITCH_INPUT_SOURCE == _ON)
                  CSourceSwitchInputSource();
              #endif
 710   1      }
 711          
 712          //----------------------------------------------------------------------------------------------------
 713          // OSD "ColorSetting" Operation
 714          //----------------------------------------------------------------------------------------------------
 715          void COsdMenuDicomSetting(void)
 716          {
 717   1      /*
 718   1          ucOsdState = _MENU_SUB_DICOM;
 719   1      
 720   1          COsdFxDrawWindow(XSTART(80), YSTART(90), XEND(460), YEND(108), tOSD_WINDOW1_STYLE);
 721   1          COsdFxChangeWindowColor(COLOR00(_CP_GRAY), tOSD_WINDOW1_STYLE);
 722   1      //    COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK))
             -;
 723   1      */
 724   1      if((GCMode==1) ||(GCMode==2))//sjp20110715
 725   1      {
 726   2      
 727   2         ucOsdState =117;//sjp20110620 
 728   2      }
 729   1         if( ucOsdState == _MENU_DICOM_SETTING)
 730   1              {
 731   2       //      stConBriData.Dicom=0;
 732   2                      #if _DEBUG_MESSAGE_SUPPORT
 733   2      
 734   2      CDebugMessage("stConBriData.Dicom4==", stConBriData.Dicom);
 735   2      
 736   2      #endif
 737   2      
 738   2                    ucOsdEventMsg = _SAVE_EE_COLORPROC0_MSG;
 739   2              
 740   2             }
 741   1      
 742   1        else if (ucOsdState == _MENU_SIGNAL_SWITCH)
 743   1              {
 744   2              if(GET_INPUTSOURCE_TYPE()==_SOURCE_VGA)
 745   2                              COsdMenuSingalDVI();
 746   2      
 747   2              else
 748   2                              COsdMenuSingalVGA();       
 749   2      
 750   2             }
 751   1      
 752   1      else if(ucOsdState == _MENU_AUTO_ADJUST_SETTING)
 753   1              {
 754   2              
 755   2              COsdDispAutoProc();
 756   2      
 757   2              }
 758   1      
 759   1      }
 760          
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 14  

 761          void COsdLeftDicomSetting(void)
 762          {
 763   1      
 764   1      
 765   1      
 766   1      /*
 767   1          if(stConBriData.Dicom<8)
 768   1              {
 769   1                      COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_SIGNAL_SWITCH);
 770   1                      COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
 771   1                      COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
 772   1              }
 773   1          else
 774   1              {
 775   1                      COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_GAMMA_SETTING);
 776   1                      COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
 777   1                      COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
 778   1              }
 779   1      
 780   1      */
 781   1      
 782   1      if(ucOsdState ==_MENU_DICOM_SETTING)
 783   1      {
 784   2          if(stConBriData.Dicom==0)
 785   2              {
 786   3      #if _DEBUG_MESSAGE_SUPPORT
 787   3      
 788   3      CDebugMessage("ucOsdState2==", ucOsdState);
 789   3      
 790   3      #endif
 791   3      
 792   3                      COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_AUTO_ADJUST_SETTING);
 793   3                      COsdFxChange1bitColor(ROW(1), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));//SJ
             -P20110625 LONGER BLACK LINE
 794   3                      COsdFxChange1bitColor(ROW(16), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLAC
             -K));//SJP20110625 LONGER BLACK LINE
 795   3                      #if _DEBUG_MESSAGE_SUPPORT
 796   3      
 797   3      CDebugMessage("ucOsdState3==", ucOsdState);
 798   3      
 799   3      #endif
 800   3                      
 801   3              }
 802   2      
 803   2          else if ((stConBriData.Dicom>0)&&(stConBriData.Dicom<=10))
 804   2              {
 805   3              #if _DEBUG_MESSAGE_SUPPORT
 806   3      
 807   3      CDebugMessage("stConBriData.Dicom2==", stConBriData.Dicom);
 808   3      
 809   3      #endif
 810   3      
 811   3              
 812   3                     stConBriData.Dicom--;
 813   3      #if _DEBUG_MESSAGE_SUPPORT
 814   3      
 815   3      CDebugMessage("stConBriData.Dicom3==", stConBriData.Dicom);
 816   3      
 817   3      #endif
 818   3      
 819   3                      COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_DICOM_SETTING);
 820   3                      COsdFxChange1bitColor(ROW(1+stConBriData.Dicom+1), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_WHITE), BGC
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 15  

             -OLOR(_CP_BLACK));//SJP20110625 LONGER BLACK LINE
 821   3                      COsdFxChange1bitColor(ROW(1+stConBriData.Dicom), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM)
             -, BGCOLOR(_CP_BLACK));//SJP20110625 LONGER BLACK LINE
 822   3                      if((stConBriData.Dicom>=0)&&(stConBriData.Dicom<=7))
 823   3                      {                       
 824   4                      Adjust_LUTtable(stConBriData.Dicom+3);//DICOM700table sjp20110615
 825   4                      if(stSystemData.BackLight<2500)//sjp 20110927 for pwm bug
 826   4                              stSystemData.BackLight=stSystemData.BackLight+200;//SJP20110923 FOR pwm VALUE
 827   4              //      else 
 828   4              //              stSystemData.BackLight = stSystemData.BackLight+(65535-stSystemData.BackLight)/2;//sjp 20110927 for p
             -wm bug
 829   4                      }
 830   3                      else if((stConBriData.Dicom>7)&&(stConBriData.Dicom<=10))//sjp20110615
 831   3                              {
 832   4                              Adjust_LUTtable(stConBriData.Dicom+3);//DSA DSI CTMRI TABLE SJP20110615
 833   4                              stSystemData.BackLight=tOSD_DICOMlumi[stConBriData.Dicom] ;
 834   4                              }
 835   3                      //CAdjustBrightness( stConBriData.DicomLumi);
 836   3                      COsdLeftSubBrightness();
 837   3                      }
 838   2      }
 839   1      /*
 840   1      else if(ucOsdState ==_MENU_SIGNAL_SWITCH)
 841   1      {
 842   1      
 843   1                      #if _DEBUG_MESSAGE_SUPPORT
 844   1      
 845   1      CDebugMessage("ucOsdState4==", ucOsdState);
 846   1      
 847   1      #endif
 848   1      
 849   1      
 850   1                      COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_DICOM_SETTING);
 851   1                      COsdFxChange1bitColor(ROW(9), COL(1), WIDTH(10), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
 852   1                      COsdFxChange1bitColor(ROW(8), COL(1), WIDTH(10), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK
             -));
 853   1                      stConBriData.Dicom=7;
 854   1                      Adjust_LUTtable(3+stConBriData.Dicom);
 855   1                      stSystemData.BackLight=tOSD_DICOMlumi[stConBriData.Dicom] ;
 856   1                      //CAdjustBrightness( stConBriData.DicomLumi);
 857   1                      COsdLeftSubBrightness();
 858   1                      #if _DEBUG_MESSAGE_SUPPORT
 859   1      
 860   1      CDebugMessage("ucOsdState5==", ucOsdState);
 861   1      
 862   1      #endif
 863   1      
 864   1                      
 865   1      }
 866   1      
 867   1      else if(ucOsdState ==_MENU_AUTO_ADJUST_SETTING)
 868   1      {
 869   1                      #if _DEBUG_MESSAGE_SUPPORT
 870   1      
 871   1      CDebugMessage("ucOsdState6==", ucOsdState);
 872   1      
 873   1      #endif
 874   1      
 875   1      
 876   1                      COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3),_MENU_SIGNAL_SWITCH);
 877   1                      COsdFxChange1bitColor(ROW(10), COL(1), WIDTH(10), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
 878   1                      COsdFxChange1bitColor(ROW(9), COL(1), WIDTH(10), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 16  

             -));
 879   1      
 880   1      
 881   1                      #if _DEBUG_MESSAGE_SUPPORT
 882   1      
 883   1      CDebugMessage("ucOsdState7==", ucOsdState);
 884   1      
 885   1      #endif
 886   1                      
 887   1      }
 888   1      
 889   1      */
 890   1              ucOsdEventMsg = _SAVE_EE_COLORPROC0_MSG;// zp for data save
 891   1      }
 892          
 893          void COsdRightDicomSetting(void)
 894          {
 895   1      /*
 896   1      #if(_DDCCI_SUPPORT == _ON)
 897   1          COsdDispPenPoint(ROW(5), COL(3), ROW(19), COL(3), _MENU_DDCCI);
 898   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
 899   1          COsdFxChange1bitColor(ROW(19), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
 900   1      
 901   1      #else
 902   1      
 903   1          COsdDispPenPoint(ROW(5), COL(3), ROW(17), COL(3), _MENU_FACTORY_RESET);
 904   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
 905   1          COsdFxChange1bitColor(ROW(17), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
 906   1      
 907   1      #endif // End of #if(_DDCCI_SUPPORT == _ON)
 908   1      
 909   1      */
 910   1      
 911   1      
 912   1      if(ucOsdState ==_MENU_DICOM_SETTING)
 913   1      {
 914   2          if(stConBriData.Dicom==10)
 915   2              {
 916   3      #if _DEBUG_MESSAGE_SUPPORT
 917   3      
 918   3      CDebugMessage("ucOsdState8==", ucOsdState);
 919   3      
 920   3      #endif
 921   3      
 922   3                      COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_GAMMA_SETTING);
 923   3                      COsdFxChange1bitColor(ROW(11), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));//S
             -JP20110625 LONGER BLACK LINE
 924   3                      COsdFxChange1bitColor(ROW(12), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLAC
             -K));//SJP20110625 LONGER BLACK LINE
 925   3                      stConBriData.Gamma=1;
 926   3                      Adjust_LUTtable(0);
 927   3                      //stSystemData.BackLight=tOSD_DICOMlumi[3] ;//GAMMA USE DICOM500 LUMI sjp20110615
 928   3                      COsdRightSubBrightness();               
 929   3      
 930   3                      
 931   3              }
 932   2          else if (stConBriData.Dicom<10)
 933   2              {
 934   3       #if _DEBUG_MESSAGE_SUPPORT
 935   3      
 936   3      CDebugMessage("stConBriData.Dicom6==", stConBriData.Dicom);
 937   3      #endif
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 17  

 938   3              
 939   3                     stConBriData.Dicom++;
 940   3      
 941   3                      COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_DICOM_SETTING);
 942   3                      COsdFxChange1bitColor(ROW(1+stConBriData.Dicom-1), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_WHITE), BGC
             -OLOR(_CP_BLACK));//SJP20110625 LONGER BLACK LINE
 943   3                      COsdFxChange1bitColor(ROW(1+stConBriData.Dicom), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM)
             -, BGCOLOR(_CP_BLACK));//SJP20110625 LONGER BLACK LINE
 944   3              
 945   3              if((stConBriData.Dicom>0)&&(stConBriData.Dicom<=7))
 946   3              {  
 947   4              Adjust_LUTtable(stConBriData.Dicom+3);//DICOM700tble sjp20110615
 948   4              if(stSystemData.BackLight>300)//sjp20110927
 949   4                      stSystemData.BackLight = stSystemData.BackLight-200;//sjp20110923 for pwm value
 950   4              else 
 951   4                      stSystemData.BackLight = stSystemData.BackLight /2;
 952   4              }
 953   3              else if((stConBriData.Dicom>7)&&(stConBriData.Dicom<=10))
 954   3                      {
 955   4                      Adjust_LUTtable(stConBriData.Dicom+3);//DSA DSI CTMRITABLE sjp20110615
 956   4                      stSystemData.BackLight=tOSD_DICOMlumi[stConBriData.Dicom] ;
 957   4                      }
 958   3      
 959   3                      COsdRightSubBrightness();
 960   3      
 961   3                      }
 962   2      }
 963   1      /*
 964   1      else if(ucOsdState ==_MENU_SIGNAL_SWITCH)
 965   1      {
 966   1                      #if _DEBUG_MESSAGE_SUPPORT
 967   1      
 968   1      CDebugMessage("ucOsdState10==", ucOsdState);
 969   1      
 970   1      #endif
 971   1      
 972   1      
 973   1                      COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_AUTO_ADJUST_SETTING);
 974   1                      COsdFxChange1bitColor(ROW(9), COL(1), WIDTH(10), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
 975   1                      COsdFxChange1bitColor(ROW(10), COL(1), WIDTH(10), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLAC
             -K));
 976   1      
 977   1                      #if _DEBUG_MESSAGE_SUPPORT
 978   1      
 979   1      CDebugMessage("ucOsdState11==", ucOsdState);
 980   1      
 981   1      #endif
 982   1      
 983   1                      
 984   1      }
 985   1      
 986   1      else if(ucOsdState ==_MENU_AUTO_ADJUST_SETTING)
 987   1      {
 988   1      
 989   1      
 990   1                      #if _DEBUG_MESSAGE_SUPPORT
 991   1      
 992   1      CDebugMessage("ucOsdState12==", ucOsdState);
 993   1      
 994   1      #endif
 995   1      
 996   1                      COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3),_MENU_DICOM_SETTING);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 18  

 997   1                      COsdFxChange1bitColor(ROW(10), COL(1), WIDTH(10), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
 998   1                      COsdFxChange1bitColor(ROW(1), COL(1), WIDTH(10), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK
             -));
 999   1                      stConBriData.Dicom=0;
1000   1                     Adjust_LUTtable(3+stConBriData.Dicom);
1001   1                      stSystemData.BackLight =tOSD_DICOMlumi[stConBriData.Dicom] ;
1002   1              //      CAdjustBrightness( stConBriData.DicomLumi);
1003   1                      COsdRightSubBrightness();
1004   1                      #if _DEBUG_MESSAGE_SUPPORT
1005   1      
1006   1      CDebugMessage("ucOsdState13==", ucOsdState);
1007   1      
1008   1      #endif
1009   1      
1010   1                      
1011   1      
1012   1      }
1013   1      
1014   1      */
1015   1      
1016   1              ucOsdEventMsg = _SAVE_EE_COLORPROC0_MSG;//zp fpr data save
1017   1      
1018   1      
1019   1      }
1020          
1021          void COsdExitDicomSetting(void)
1022          {
1023   1          GCMode = 0;//EXIT Factory Mode sjp20110625
1024   1          COsdFxDisableOsd();
1025   1          COsdDispPenPoint(ROW(19), COL(3), ROW(5), COL(3), _MENU_NONE);
1026   1          COsdFxChange1bitColor(ROW(19), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1027   1              ucOsdEventMsg = _SAVE_EE_COLORPROC0_MSG;//zp for data save
1028   1      }
1029          
1030          //----------------------------------------------------------------------------------------------------
1031          // OSD "ImageSetting" Operation
1032          //----------------------------------------------------------------------------------------------------
1033          void COsdMenuGammaSetting(void)
1034          {
1035   1              ucOsdEventMsg = _SAVE_EE_COLORPROC0_MSG;
1036   1      /*      
1037   1          ucOsdState = _MENU_SUB_GAMMA;
1038   1          COsdFxDrawWindow(XSTART(80), YSTART(126), XEND(460), YEND(144), tOSD_WINDOW1_STYLE);
1039   1          COsdFxChangeWindowColor(COLOR00(_CP_GRAY), tOSD_WINDOW1_STYLE);
1040   1          */
1041   1      }
1042          
1043          void COsdLeftGammaSetting(void)
1044          {
1045   1      /*
1046   1          COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_BRIGHTNESS_SETTING);
1047   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1048   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1049   1          */
1050   1               
1051   1      #if _DEBUG_MESSAGE_SUPPORT
1052   1      CDebugMessage("stConBriData.Gamma_left", stConBriData.Gamma);
1053   1      #endif
1054   1          if(stConBriData.Gamma==1)
1055   1              {
1056   2      
1057   2                      COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_DICOM_SETTING);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 19  

1058   2                      COsdFxChange1bitColor(ROW(12), COL(1), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));//S
             -JP20110625 LONGER BLACK LINE
1059   2                      COsdFxChange1bitColor(ROW(11), COL(1), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLAC
             -K));//SJP20110625 LONGER BLACK LINE
1060   2                      stConBriData.Gamma=0;
1061   2                      stConBriData.Dicom=10;
1062   2                      Adjust_LUTtable(stConBriData.Dicom+3);//CTMRItable sjp20110615
1063   2                      //stSystemData.BackLight=tOSD_DICOMlumi[stConBriData.Dicom] ;
1064   2                      COsdRightSubBrightness();               
1065   2              }
1066   1      
1067   1          else if ((stConBriData.Gamma>1)&&(stConBriData.Gamma<=3))
1068   1              {
1069   2                     stConBriData.Gamma--;
1070   2      
1071   2                      COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_GAMMA_SETTING);
1072   2                      COsdFxChange1bitColor(ROW(11+stConBriData.Gamma+1), COL(1), WIDTH(12), HEIGHT(1), FGCOLOR(_CP_WHITE), BG
             -COLOR(_CP_BLACK));
1073   2                      COsdFxChange1bitColor(ROW(11+stConBriData.Gamma), COL(1), WIDTH(12), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM
             -), BGCOLOR(_CP_BLACK));
1074   2                      Adjust_LUTtable(stConBriData.Gamma-1);
1075   2                      //stSystemData.BackLight=tOSD_DICOMlumi[3] ;//GAMMATABLE USE DICOM500 LUMI sjp20110615 no adj sjp2011092
             -3
1076   2                      COsdLeftSubBrightness();
1077   2      
1078   2              }
1079   1      #if _DEBUG_MESSAGE_SUPPORT
1080   1      //CDebugMessage("stConBriData.Gamma_left2", stConBriData.Gamma);
1081   1      #endif
1082   1              ucOsdEventMsg = _SAVE_EE_COLORPROC0_MSG;//zp for data save
1083   1      
1084   1      
1085   1      }
1086          
1087          void COsdRightGammaSetting(void)
1088          {
1089   1      /*
1090   1          COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_DICOM_SETTING);
1091   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1092   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1093   1          */
1094   1      #if _DEBUG_MESSAGE_SUPPORT
1095   1      //CDebugMessage("stConBriData.Gamma_right", stConBriData.Gamma);
1096   1      #endif
1097   1      
1098   1          if(stConBriData.Gamma==3)
1099   1              {
1100   2      
1101   2                      COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_SIGNAL_SWITCH);
1102   2                      COsdFxChange1bitColor(ROW(14), COL(1), WIDTH(12), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1103   2                      COsdFxChange1bitColor(ROW(15), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLAC
             -K));
1104   2                      stConBriData.Gamma=4;
1105   2              }
1106   1      
1107   1          else if (stConBriData.Gamma<3)
1108   1              {
1109   2                     stConBriData.Gamma++;
1110   2      
1111   2                      COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_GAMMA_SETTING);
1112   2                      COsdFxChange1bitColor(ROW(11+stConBriData.Gamma-1), COL(1), WIDTH(12), HEIGHT(1), FGCOLOR(_CP_WHITE), BG
             -COLOR(_CP_BLACK));
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 20  

1113   2                      COsdFxChange1bitColor(ROW(11+stConBriData.Gamma), COL(1), WIDTH(12), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM
             -), BGCOLOR(_CP_BLACK));
1114   2                      Adjust_LUTtable(stConBriData.Gamma-1);
1115   2                      //stSystemData.BackLight=tOSD_DICOMlumi[3] ;//GAMMA USE DICOM500 LUMI sjp20110615 no adj sjp20110923
1116   2                      COsdLeftSubBrightness();
1117   2      
1118   2              }
1119   1      
1120   1      #if _DEBUG_MESSAGE_SUPPORT
1121   1      //CDebugMessage("stConBriData.Gamma_right2", stConBriData.Gamma);
1122   1      #endif
1123   1              ucOsdEventMsg = _SAVE_EE_COLORPROC0_MSG;//zp for data save 
1124   1      
1125   1      
1126   1      }
1127          
1128          void COsdExitGammaSetting(void)
1129          {
1130   1          COsdExitDicomSetting();
1131   1      }
1132          
1133          //----------------------------------------------------------------------------------------------------
1134          // OSD "OsdSetting" Operation
1135          //----------------------------------------------------------------------------------------------------
1136          void COsdMenuBrightnessSetting(void)
1137          {
1138   1          ucOsdState = _MENU_SUB_BRIGHTNESS;
1139   1      
1140   1          COsdFxDrawWindow(XSTART(80), YSTART(162), XEND(460), YEND(180), tOSD_WINDOW1_STYLE);
1141   1          COsdFxChangeWindowColor(COLOR00(_CP_GRAY), tOSD_WINDOW1_STYLE);
1142   1      
1143   1      }
1144          
1145          void COsdLeftBrightnessSetting(void)
1146          {
1147   1          COsdDispPenPoint(ROW(9), COL(3), ROW(11), COL(3), _MENU_CONTRAST_SETTING);
1148   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1149   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1150   1      
1151   1      }
1152          
1153          void COsdRightBrightnessSetting(void)
1154          {
1155   1          COsdDispPenPoint(ROW(9), COL(3), ROW(7), COL(3), _MENU_GAMMA_SETTING);
1156   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1157   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1158   1      
1159   1      }
1160          
1161          void COsdExitBrightnessSetting(void)
1162          {
1163   1          COsdExitDicomSetting();
1164   1      }
1165          
1166          //----------------------------------------------------------------------------------------------------
1167          // OSD "SignalSource" Operation
1168          //----------------------------------------------------------------------------------------------------
1169          void COsdMenuSignalSource(void)
1170          {
1171   1      
1172   1      /*
1173   1          ucOsdState = _MENU_SIGNAL_SELECT;
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 21  

1174   1      
1175   1          COsdFxDrawWindow(XSTART(80), YSTART(234), XEND(460), YEND(252), tOSD_WINDOW1_STYLE);
1176   1          COsdFxChangeWindowColor(COLOR00(_CP_GRAY), tOSD_WINDOW1_STYLE);
1177   1      */
1178   1      
1179   1      
1180   1              if(stSystemData.SearchIndex==1)
1181   1                              COsdMenuSingalDVI();
1182   1      
1183   1              else
1184   1                      {
1185   2                      #if _DEBUG_MESSAGE_SUPPORT
1186   2              //      CDebugMessage("COsdMenuSingalVGA_COsdMenuSignalSource", 0);
1187   2                      #endif
1188   2                              COsdMenuSingalVGA();       
1189   2                      }       
1190   1      
1191   1      
1192   1      
1193   1      
1194   1      }
1195          
1196          void COsdLeftSignalSource(void)
1197          {
1198   1      
1199   1      
1200   1                      #if _DEBUG_MESSAGE_SUPPORT
1201   1      
1202   1      CDebugMessage("ucOsdState4==", ucOsdState);
1203   1      
1204   1      #endif
1205   1      
1206   1      
1207   1                      COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_GAMMA_SETTING);
1208   1                      COsdFxChange1bitColor(ROW(15), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1209   1                      COsdFxChange1bitColor(ROW(14), COL(1), WIDTH(12), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLAC
             -K));
1210   1                      stConBriData.Gamma=3;
1211   1                      Adjust_LUTtable(stConBriData.Gamma-1);
1212   1                      stSystemData.BackLight=tOSD_DICOMlumi[3];//DICOM500 LUMI sjp20110615
1213   1                      COsdRightSubBrightness();
1214   1      
1215   1      
1216   1      
1217   1      //#if(_AUDIO_SUPPORT == _ON)
1218   1      /*
1219   1          COsdDispPenPoint(ROW(13), COL(3), ROW(15), COL(3), _MENU_AUTO_ADJUST_SETTING);
1220   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1221   1          COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1222   1      */    
1223   1      /*#else
1224   1          COsdDispPenPoint(ROW(11), COL(3), ROW(15), COL(3), _MENU_AUTO_ADJUST);
1225   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1226   1          COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1227   1      #endif*/
1228   1      
1229   1      ucOsdEventMsg = _SAVE_EE_COLORPROC0_MSG;
1230   1      }
1231          
1232          void COsdRightSignalSource(void)
1233          {
1234   1      /*
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 22  

1235   1          if(stConBriData.Dicom<8)
1236   1              {
1237   1                      COsdDispPenPoint(ROW(13), COL(3), ROW(5), COL(3), _MENU_DICOM_SETTING);
1238   1                      COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1239   1                      COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1240   1              }
1241   1          else
1242   1              {
1243   1                      COsdDispPenPoint(ROW(13), COL(3), ROW(11), COL(3), _MENU_CONTRAST_SETTING);
1244   1                      COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1245   1                      COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1246   1              }
1247   1              */
1248   1      
1249   1                      #if _DEBUG_MESSAGE_SUPPORT
1250   1      
1251   1      CDebugMessage("ucOsdState10==", ucOsdState);
1252   1      
1253   1      #endif
1254   1      
1255   1      
1256   1                      COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_AUTO_ADJUST_SETTING);
1257   1                      COsdFxChange1bitColor(ROW(15), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1258   1                      COsdFxChange1bitColor(ROW(16), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLAC
             -K));
1259   1      
1260   1                      #if _DEBUG_MESSAGE_SUPPORT
1261   1      
1262   1      CDebugMessage("ucOsdState11==", ucOsdState);
1263   1      
1264   1      #endif
1265   1      
1266   1      
1267   1      
1268   1      
1269   1      }
1270          
1271          void COsdExitSignalSource(void)
1272          {
1273   1          COsdExitDicomSetting();
1274   1      }
1275          
1276          
1277          //#if(_AUDIO_SUPPORT == _ON)
1278          //----------------------------------------------------------------------------------------------------
1279          // OSD "Volume" Operation
1280          //----------------------------------------------------------------------------------------------------
1281          void COsdMenuContrastSetting(void)
1282          {
1283   1          ucOsdState = _MENU_SUB_CONTRAST;
1284   1      
1285   1          COsdFxDrawWindow(XSTART(80), YSTART(198), XEND(460), YEND(216), tOSD_WINDOW1_STYLE);
1286   1          COsdFxChangeWindowColor(COLOR00(_CP_GRAY), tOSD_WINDOW1_STYLE);
1287   1      
1288   1      }
1289          
1290          void COsdLeftContrastSetting(void)
1291          {
1292   1          COsdDispPenPoint(ROW(11), COL(3), ROW(13), COL(3), _MENU_SIGNAL_SWITCH);
1293   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1294   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1295   1      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 23  

1296          
1297          void COsdRightContrastSetting(void)
1298          {
1299   1          COsdDispPenPoint(ROW(11), COL(3), ROW(9), COL(3), _MENU_BRIGHTNESS_SETTING);
1300   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1301   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1302   1      }
1303          
1304          void COsdExitContrastSetting(void)
1305          {
1306   1          COsdExitDicomSetting();
1307   1      }
1308          //#endif // End of #if(_AUDIO_SUPPORT==_ON)
1309          
1310          //----------------------------------------------------------------------------------------------------
1311          // OSD "Special" Operation
1312          //----------------------------------------------------------------------------------------------------
1313          void COsdMenuAutoAdjust(void)
1314          {
1315   1      /*
1316   1          ucOsdState = _MENU_SUB_AUTO_ADJUST;
1317   1      
1318   1          COsdFxDrawWindow(XSTART(80), YSTART(270), XEND(460), YEND(288), tOSD_WINDOW1_STYLE);
1319   1          COsdFxChangeWindowColor(COLOR00(_CP_GRAY), tOSD_WINDOW1_STYLE);
1320   1      */
1321   1      
1322   1              COsdDispAutoProc();
1323   1      
1324   1        ucOsdState = _MENU_NONE;
1325   1      if(GET_INPUTSOURCE_TYPE() == _SOURCE_DVI)//sjp20110825 for DVI_auto bug
1326   1      COsdFxDisableOsd();
1327   1      
1328   1      }
1329          
1330          void COsdLeftAutoAdjust(void)
1331          {
1332   1      
1333   1                      #if _DEBUG_MESSAGE_SUPPORT
1334   1      
1335   1      CDebugMessage("ucOsdState6==", ucOsdState);
1336   1      
1337   1      #endif
1338   1      
1339   1      
1340   1                      COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3),_MENU_SIGNAL_SWITCH);
1341   1                      COsdFxChange1bitColor(ROW(16), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1342   1                      COsdFxChange1bitColor(ROW(15), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLAC
             -K));
1343   1      
1344   1      
1345   1                      #if _DEBUG_MESSAGE_SUPPORT
1346   1      
1347   1      CDebugMessage("ucOsdState7==", ucOsdState);
1348   1      
1349   1      #endif
1350   1      
1351   1      
1352   1      
1353   1      
1354   1      
1355   1      //#if(_AUDIO_SUPPORT == _ON)
1356   1      /*
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 24  

1357   1          COsdDispPenPoint(ROW(15), COL(3), ROW(17), COL(3), _MENU_FACTORY_RESET);
1358   1          COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1359   1          COsdFxChange1bitColor(ROW(17), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1360   1          */
1361   1      /*
1362   1      #else
1363   1          COsdDispPenPoint(ROW(15), COL(3), ROW(11), COL(3), _MENU_SIGNAL_SWITCH);
1364   1          COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1365   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1366   1      
1367   1      #endif
1368   1      */
1369   1      }
1370          
1371          
1372          void COsdRightAutoAdjust(void)
1373          {
1374   1      
1375   1      
1376   1      
1377   1      
1378   1                      #if _DEBUG_MESSAGE_SUPPORT
1379   1      
1380   1      CDebugMessage("ucOsdState12==", ucOsdState);
1381   1      
1382   1      #endif
1383   1      
1384   1                      COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3),_MENU_DICOM_SETTING);
1385   1                      COsdFxChange1bitColor(ROW(16), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));//S
             -JP20110625 LONGER BLACK LINE
1386   1                      COsdFxChange1bitColor(ROW(1), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK
             -));//SJP20110625 LONGER BLACK LINE
1387   1                      stConBriData.Dicom=0;
1388   1                      stConBriData.Gamma=0;//zp for gamma index reset
1389   1                     Adjust_LUTtable(stConBriData.Dicom+3);//DICOM350_LUTtable sjp20110615
1390   1                      stSystemData.BackLight=tOSD_DICOMlumi[stConBriData.Dicom] ;
1391   1                      //CAdjustBrightness( stConBriData.DicomLumi);
1392   1                      COsdLeftSubBrightness();
1393   1                      #if _DEBUG_MESSAGE_SUPPORT
1394   1      
1395   1      CDebugMessage("ucOsdState13==", ucOsdState);
1396   1      
1397   1      #endif
1398   1      
1399   1      ucOsdEventMsg = _SAVE_EE_COLORPROC0_MSG;
1400   1      
1401   1      //#if(_AUDIO_SUPPORT == _ON)
1402   1      /*
1403   1          COsdDispPenPoint(ROW(15), COL(3), ROW(13), COL(3), _MENU_SIGNAL_SWITCH);
1404   1          COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1405   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1406   1      */
1407   1      /*
1408   1      #else
1409   1          COsdDispPenPoint(ROW(15), COL(3), ROW(11), COL(3), _MENU_SIGNAL_SWITCH);
1410   1          COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1411   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1412   1      
1413   1      #endif
1414   1      */
1415   1      }
1416          
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 25  

1417          void COsdExitAutoAdjust(void)
1418          {
1419   1          COsdExitDicomSetting();
1420   1      }
1421          
1422          //----------------------------------------------------------------------------------------------------
1423          // OSD "Factory Mode" Operation
1424          //----------------------------------------------------------------------------------------------------
1425          void COsdMenuFactory(void)
1426          {
1427   1          ucOsdState = _MENU_SUB_FACTORY_RESET;
1428   1      
1429   1          COsdFxDrawWindow(XSTART(80), YSTART(306), XEND(460), YEND(324), tOSD_WINDOW1_STYLE);
1430   1          COsdFxChangeWindowColor(COLOR00(_CP_GRAY), tOSD_WINDOW1_STYLE);
1431   1      
1432   1      }
1433          
1434          void COsdLeftFactory(void)
1435          {
1436   1      #if(_DDCCI_SUPPORT == _ON)
                  COsdDispPenPoint(ROW(17), COL(3), ROW(19), COL(3), _MENU_DDCCI);
                  COsdFxChange1bitColor(ROW(17), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(19), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #else
1441   1          COsdDispPenPoint(ROW(17), COL(3), ROW(5), COL(3), _MENU_DICOM_SETTING);
1442   1          COsdFxChange1bitColor(ROW(17), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1443   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1444   1      
1445   1      #endif
1446   1      
1447   1      }
1448          
1449          void COsdRightFactory(void)
1450          {
1451   1      //#if(_AUDIO_SUPPORT == _ON)
1452   1          COsdDispPenPoint(ROW(17), COL(3), ROW(15), COL(3), _MENU_AUTO_ADJUST_SETTING);
1453   1          COsdFxChange1bitColor(ROW(17), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1454   1          COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1455   1      /*
1456   1      #else
1457   1          COsdDispPenPoint(ROW(17), COL(3), ROW(15), COL(3), _MENU_AUTO_ADJUST_SETTING);
1458   1          COsdFxChange1bitColor(ROW(17), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1459   1          COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1460   1      
1461   1      #endif
1462   1      */
1463   1      }
1464          
1465          void COsdExitFactory(void)
1466          {
1467   1          COsdExitDicomSetting();
1468   1      }
1469          
1470          #if(_DDCCI_SUPPORT == _ON)
              void COsdMenuDDCCI(void)
              {
              
                  COsdDispClearIcon(ROW(5), COL(0), 5, 20);
                  COsdDispClearText(ROW(5), COL(5), 18, 15);
              
                  COsdFxLoadText(ROW(5), COL(7), stOsdUserData.Language, tOSD_DDCCI_STR);
              
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 26  

                  COsdDispPenPoint(ROW(5), COL(3), ROW(5), COL(3), _MENU_DDCCIONOFF);
              
                  COsdFxDrawWindow(XSTART(40), YSTART(300), XEND(250), YEND(400), tOSD_WINDOW2_STYLE);
                  COsdFxChangeWindowColor(COLOR00(_CP_BLACK), tOSD_WINDOW2_STYLE);
              
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(10), (GET_DDCCI_STATUS()), tOSDDDCCI_ON_OFF_STR);
              }
              
              void COsdLeftDDCCI(void)
              {
              
                  COsdDispPenPoint(ROW(19), COL(3), ROW(5), COL(3), _MENU_DICOM_SETTING);
                  COsdFxChange1bitColor(ROW(19), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              }
              
              void COsdRightDDCCI(void)
              {
              
                  COsdDispPenPoint(ROW(19), COL(3), ROW(17), COL(3), _MENU_FACTORY_RESET);
                  COsdFxChange1bitColor(ROW(19), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(17), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              
              }
              
              void COsdExitDDCCI(void)
              {
                  COsdExitDicomSetting();
              }
              #endif
1512          //----------------------------------------------------------------------------------------------------
1513          // OSD "Dicom" Operation
1514          //----------------------------------------------------------------------------------------------------
1515          void COsdMenuSubDicom(void)
1516          {
1517   1      //stConBriData.Dicom=0;
1518   1          ucOsdState = _MENU_DICOM_SETTING;
1519   1          ucOsdEventMsg = _SAVE_EE_COLORPROC0_MSG;
1520   1          COsdFxDisableWindow(1);
1521   1      }
1522          
1523          
1524           void COsdLeftSubDicom(void)
1525          
1526           {
1527   1      #if _DEBUG_MESSAGE_SUPPORT
1528   1      CDebugMessage("stConBriData.Dicom", stConBriData.Dicom);
1529   1      #endif
1530   1      
1531   1      
1532   1      if(stConBriData.Dicom==8)
1533   1              {
1534   2                      stConBriData.Dicom=0;
1535   2                      COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(35), HEIGHT(5), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK
             -));
1536   2             }
1537   1      else
1538   1              {
1539   2                      if(stConBriData.Dicom==7)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 27  

1540   2                              {
1541   3                              stConBriData.Dicom++;
1542   3                              COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(35), HEIGHT(5), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1543   3                              CAdjustBrightness( stConBriData.Brightness);
1544   3                              
1545   3                              }
1546   2                      else
1547   2                              stConBriData.Dicom++;
1548   2             }
1549   1       
1550   1          COsdDispDicomContent(ROW(5), COL(14),stConBriData.Dicom);// draw dicom curve
1551   1              //COsdFxLoadText(ROW(5),COL(33), stOsdUserData.Language, tOSD_DICOM_STR2[stConBriData.Dicom]);//zhangping
             - 101110
1552   1      
1553   1          if(stConBriData.Dicom<8)    
1554   1              {
1555   2                      Adjust_LUTtable(3+stConBriData.Dicom);
1556   2                      stConBriData.DicomLumi=tOSD_DICOMlumi[stConBriData.Dicom] ;
1557   2                      CAdjustBrightness( stConBriData.DicomLumi);
1558   2              
1559   2              }
1560   1      }
1561          
1562          
1563          void COsdRightSubDicom(void)
1564          
1565          {
1566   1      #if _DEBUG_MESSAGE_SUPPORT
1567   1      CDebugMessage("stConBriData.Dicom", stConBriData.Dicom);
1568   1      #endif
1569   1      
1570   1              if (stConBriData.Dicom==0)
1571   1                    {
1572   2                              stConBriData.Dicom=8;
1573   2                              COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(35), HEIGHT(5), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1574   2                              CAdjustBrightness( stConBriData.Brightness);
1575   2                    }
1576   1              else
1577   1                 {
1578   2                     if(stConBriData.Dicom==8)
1579   2                      {
1580   3                              stConBriData.Dicom--;
1581   3                              COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(35), HEIGHT(5), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLAC
             -K));
1582   3                      }
1583   2                       else
1584   2                              stConBriData.Dicom--;
1585   2                  }
1586   1      
1587   1              
1588   1              COsdDispDicomContent(ROW(5), COL(14),stConBriData.Dicom);// draw dicom curve
1589   1      //      COsdFxLoadText(ROW(5),COL(33), stOsdUserData.Language, tOSD_DICOM_STR2[stConBriData.Dicom]);//zhangping
             - 101110
1590   1              if(stConBriData.Dicom<8)        
1591   1              {
1592   2                      Adjust_LUTtable(3+stConBriData.Dicom);
1593   2                      stConBriData.DicomLumi=tOSD_DICOMlumi[stConBriData.Dicom] ;
1594   2                      CAdjustBrightness( stConBriData.DicomLumi);
1595   2      
1596   2              }       
1597   1      }
1598          
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 28  

1599          
1600          void COsdExitSubDicom(void)
1601          
1602          {
1603   1      
1604   1             COsdFxDisableWindow(1);
1605   1              ucOsdState = _MENU_DICOM_SETTING;
1606   1      
1607   1      }
1608          
1609          
1610          
1611          
1612          
1613          void COsdMenuSubGamma(void)
1614          {
1615   1      //stConBriData.Gamma=0;
1616   1          ucOsdState = _MENU_GAMMA_SETTING;
1617   1          ucOsdEventMsg = _SAVE_EE_COLORPROC0_MSG;
1618   1          COsdFxDisableWindow(1);
1619   1      }
1620          
1621          
1622           void COsdLeftSubGamma(void)
1623          {
1624   1      
1625   1      if(stConBriData.Gamma==2)
1626   1              stConBriData.Gamma=0;
1627   1      else
1628   1         stConBriData.Gamma++;
1629   1      #if _DEBUG_MESSAGE_SUPPORT
1630   1              CDebugMessage("stConBriData.Gamma",  stConBriData.Gamma);
1631   1      #endif
1632   1       
1633   1              COsdDispGammaContent(ROW(7), COL(13),stConBriData.Gamma);// draw dicom curve
1634   1              Adjust_LUTtable(stConBriData.Gamma);
1635   1              
1636   1      }
1637          
1638          void COsdRightSubGamma(void)
1639          {
1640   1              if (stConBriData.Gamma==0)
1641   1                      stConBriData.Gamma=2;
1642   1              else
1643   1                     stConBriData.Gamma--;
1644   1              COsdDispGammaContent(ROW(7), COL(13),stConBriData.Gamma);// draw dicom curve
1645   1              Adjust_LUTtable(stConBriData.Gamma);
1646   1      
1647   1      }
1648          
1649          void COsdExitSubGamma(void)
1650          {
1651   1      
1652   1             COsdFxDisableWindow(1);
1653   1              ucOsdState = _MENU_GAMMA_SETTING;
1654   1      
1655   1      }
1656          
1657          
1658          
1659          //----------------------------------------------------------------------------------------------------
1660          // OSD "Contrast" Operation
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 29  

1661          //----------------------------------------------------------------------------------------------------
1662          void COsdMenuContrast(void)
1663          {
1664   1          ucOsdState = _MENU_SUB_CONTRAST;
1665   1          COsdDispFullSlider(ROW(19), COL(5), 12, stConBriData.Contrast, _CONTRAST_MAX - _CONTRAST_MIN, _CONTRAS
             -T_MIN, _CP_WHITE, _CP_WHITE);
1666   1      }
1667          
1668          void COsdLeftContrast(void)
1669          {
1670   1         // COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_BRIGHTNESS);
1671   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1672   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1673   1      
1674   1      }
1675          
1676          void COsdRightContrast(void)
1677          {
1678   1      #if(_DCR_MODE != _DCR_TYPE_OFF)
                  COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_COLOR_DCR);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
                  COsdDispClearText(ROW(19), COL(9), 16, 1);
              
                  if(GET_DCR_STATUS())
                  {
                      COsdFxLoadText(ROW(19), COL(9), (_DCR_MODE), tCOLOR_TABLE[5]);
                  }
                  else
                  {
                      COsdFxLoadText(ROW(19), COL(9), (_DCR_TYPE_OFF), tCOLOR_TABLE[5]);
                  }
              
              #else
1695   1          COsdDispPenPoint(ROW(5), COL(3), ROW(11), COL(3), _MENU_COLOR_TEMP);
1696   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1697   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1698   1      
1699   1      #endif
1700   1      
1701   1      }
1702          
1703          void COsdExitContrast(void)
1704          {
1705   1          COsdFxCloseWindow(WINNO(2));
1706   1          COsdDispDrawInitWindow();
1707   1          COsdFxLoadIcon(ROW(5), COL(3), tOSD_POINT_ICO);
1708   1          ucOsdState = _MENU_DICOM_SETTING;
1709   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1710   1      }
1711          
1712          //----------------------------------------------------------------------------------------------------
1713          // OSD "subContrast" Operation
1714          //----------------------------------------------------------------------------------------------------
1715          void COsdMenuSubContrast(void)
1716          {
1717   1          ucOsdState = _MENU_CONTRAST_SETTING;
1718   1          ucOsdEventMsg = _SAVE_EE_COLORPROC0_MSG;
1719   1          COsdFxDisableWindow(1);
1720   1      }
1721          
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 30  

1722          void COsdLeftSubContrast(void)
1723          {
1724   1          SET_KEYREPEATENABLE();
1725   1          stConBriData.Contrast = COsdFxDetOverRange(stConBriData.Contrast, _CONTRAST_MAX, _CONTRAST_MIN, _DET_O
             -VERRANGE_MAX);
1726   1          CAdjustContrast(stConBriData.Contrast);
1727   1          COsdDispFullSlider(ROW(11), COL(22), 12, stConBriData.Contrast, _CONTRAST_MAX - _CONTRAST_MIN, _CONTRA
             -ST_MIN, _CP_WHITE, _CP_WHITE);//draw contrast slide bar
1728   1      
1729   1      }
1730          
1731          void COsdRightSubContrast(void)
1732          {
1733   1          SET_KEYREPEATENABLE();
1734   1          stConBriData.Contrast = COsdFxDetOverRange(stConBriData.Contrast, _CONTRAST_MAX, _CONTRAST_MIN, _DET_O
             -VERRANGE_MIN);
1735   1          CAdjustContrast(stConBriData.Contrast);
1736   1          COsdDispFullSlider(ROW(11), COL(22), 12, stConBriData.Contrast, _CONTRAST_MAX - _CONTRAST_MIN, _CONTRA
             -ST_MIN, _CP_WHITE, _CP_WHITE);//draw contrast slide bar
1737   1      }
1738          
1739          void COsdExitSubContrast(void)
1740          {
1741   1          COsdMenuSubContrast();
1742   1      }
1743          
1744          
1745          //----------------------------------------------------------------------------------------------------
1746          // OSD "Brightness" Operation
1747          //----------------------------------------------------------------------------------------------------
1748          void COsdMenuBrightness(void)
1749          {
1750   1          ucOsdState = _MENU_SUB_BRIGHTNESS;
1751   1          COsdDispFullSlider(ROW(19), COL(5), 12, stSystemData.BackLight, 255, 0, _CP_WHITE, _CP_WHITE);
1752   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1753   1      
1754   1      }
1755          
1756          void COsdLeftBrightness(void)
1757          {
1758   1          COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_COLOR_ADJ);
1759   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1760   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1761   1      
1762   1      }
1763          
1764          void COsdRightBrightness(void)
1765          {
1766   1         // COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_CONTRAST);
1767   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
1768   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
1769   1      }
1770          
1771          void COsdExitBrightness(void)
1772          {
1773   1          COsdExitContrast();
1774   1      }
1775          
1776          
1777          //----------------------------------------------------------------------------------------------------
1778          // OSD "SubBrightness" Operation
1779          //----------------------------------------------------------------------------------------------------
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 31  

1780          void COsdMenuSubBrightness(void)
1781          {
1782   1          ucOsdState = _MENU_BRIGHTNESS_SETTING;
1783   1          ucOsdEventMsg = _SAVE_EE_SYSTEMDATA_MSG;
1784   1          COsdFxDisableWindow(1);
1785   1      }
1786          
1787          void COsdLeftSubBrightness(void)
1788          {
1789   1          SET_KEYREPEATENABLE();
1790   1       //  stSystemData.BackLight = COsdFxDetOverRange(stSystemData.BackLight, _BACKLIGHT_MAX, _BACKLIGHT_MIN, _
             -DET_OVERRANGE_MAX);
1791   1      #if _DEBUG_MESSAGE_SUPPORT
1792   1      //CDebugMessage("stSystemData.BackLight", stSystemData.BackLight);
1793   1      #endif
1794   1      /*
1795   1      switch(stConBriData.Dicom)
1796   1      {
1797   1              case 0:
1798   1              stSystemData.BackLight=110;
1799   1              break;
1800   1              
1801   1              case 1:
1802   1              stSystemData.BackLight=130;
1803   1              break;
1804   1              
1805   1              case 2:
1806   1              stSystemData.BackLight=150;
1807   1              break;
1808   1      
1809   1              case 3:
1810   1              stSystemData.BackLight=170;
1811   1              break;
1812   1      
1813   1              case 4:
1814   1              stSystemData.BackLight=190;
1815   1              break;
1816   1      
1817   1              case 5:
1818   1              stSystemData.BackLight=210;
1819   1              break;
1820   1      
1821   1              case 6:
1822   1              stSystemData.BackLight=230;
1823   1              break;
1824   1      
1825   1              case 7:
1826   1              stSystemData.BackLight=250;
1827   1              break;
1828   1              
1829   1              default:
1830   1              break;
1831   1      
1832   1      }       
1833   1      */
1834   1      #if _DEBUG_MESSAGE_SUPPORT
1835   1              //CDebugMessage("stSystemData.BackLight", stSystemData.BackLight);
1836   1      #endif
1837   1      
1838   1          CAdjustBacklight(stSystemData.BackLight);
1839   1         // COsdDispFullSlider(ROW(9), COL(22), 12, stSystemData.BackLight, 255, 0, _CP_WHITE, _CP_WHITE);//draw
             - brightness slide bar
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 32  

1840   1      }
1841          
1842          void COsdRightSubBrightness(void)
1843          {
1844   1          SET_KEYREPEATENABLE();
1845   1        //  stSystemData.BackLight = COsdFxDetOverRange(stSystemData.BackLight, _BACKLIGHT_MAX, _BACKLIGHT_MIN, 
             -_DET_OVERRANGE_MIN);
1846   1      
1847   1      #if _DEBUG_MESSAGE_SUPPORT
1848   1      //  CDebugMessage("stSystemData.BackLight", stSystemData.BackLight);
1849   1      #endif
1850   1      /*
1851   1      switch(stConBriData.Dicom)
1852   1      
1853   1      {
1854   1              case 0:
1855   1              stSystemData.BackLight=10;
1856   1              break;
1857   1              
1858   1              case 1:
1859   1              stSystemData.BackLight=40;
1860   1              break;
1861   1              
1862   1              case 2:
1863   1              stSystemData.BackLight=700;
1864   1              break;
1865   1      
1866   1              case 3:
1867   1              stSystemData.BackLight=100;
1868   1              break;
1869   1      
1870   1              case 4:
1871   1              stSystemData.BackLight=130;
1872   1              break;
1873   1      
1874   1              case 5:
1875   1              stSystemData.BackLight=160;
1876   1              break;
1877   1      
1878   1              case 6:
1879   1              stSystemData.BackLight=190;
1880   1              break;
1881   1      
1882   1              case 7:
1883   1              stSystemData.BackLight=230;
1884   1              break;
1885   1              
1886   1              default:
1887   1              break;
1888   1      
1889   1      }
1890   1      */
1891   1      #if _DEBUG_MESSAGE_SUPPORT
1892   1              //CDebugMessage("stSystemData.BackLight", stSystemData.BackLight);
1893   1      #endif
1894   1          
1895   1         
1896   1          CAdjustBacklight(stSystemData.BackLight);
1897   1         // COsdDispFullSlider(ROW(9), COL(22), 12, stSystemData.BackLight, 255, 0, _CP_WHITE, _CP_WHITE);//draw
             - brightness slide bar
1898   1      
1899   1      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 33  

1900          
1901          void COsdExitSubBrightness(void)
1902          {
1903   1          COsdMenuSubBrightness();
1904   1      }
1905          
1906          
1907          void COsdMenuSignalSelect(void)
1908          {
1909   1          ucOsdState = _MENU_SIGNAL_SWITCH;
1910   1         // ucOsdEventMsg = _SAVE_EE_SYSTEMDATA_MSG;
1911   1          COsdFxDisableWindow(1);
1912   1      }
1913          
1914          void COsdLeftSignalSelect(void)
1915          {
1916   1            ucOsdState=_MENU_NONE;
1917   1              if(GET_INPUTSOURCE_TYPE()==_SOURCE_VGA)
1918   1                      {
1919   2      
1920   2                              COsdDispSignalContent(ROW(13), COL(22),1);// draw SIGNAL TYPE
1921   2                              COsdMenuSingalDVI();
1922   2      
1923   2                      }
1924   1              else
1925   1                      {
1926   2      
1927   2                              COsdDispSignalContent(ROW(13), COL(22),0);// draw SIGNAL TYPE
1928   2                              COsdMenuSingalVGA();
1929   2                      }
1930   1      
1931   1      
1932   1      }
1933          
1934          void COsdRightSignalSelect(void)
1935          {
1936   1            ucOsdState=_MENU_NONE;
1937   1      
1938   1              if(GET_INPUTSOURCE_TYPE()==_SOURCE_VGA)
1939   1                      {
1940   2      
1941   2                              COsdDispSignalContent(ROW(13), COL(22),1);// draw SIGNAL TYPE
1942   2                              COsdMenuSingalDVI();
1943   2      
1944   2                      }
1945   1              else
1946   1                      {
1947   2      
1948   2                              COsdDispSignalContent(ROW(13), COL(22),0);// draw SIGNAL TYPE
1949   2                              COsdMenuSingalVGA();
1950   2                      }
1951   1      }
1952          
1953          void COsdExitSignalSelect(void)
1954          {
1955   1              COsdMenuSignalSelect();
1956   1      }
1957          
1958          void COsdMenuSubAutoAdjust(void)
1959          {
1960   1          ucOsdState = _MENU_AUTO_ADJUST_SETTING;
1961   1         // ucOsdEventMsg = _SAVE_EE_SYSTEMDATA_MSG;
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 34  

1962   1          COsdFxDisableWindow(1);
1963   1      }
1964          
1965          void COsdLeftSubAutoAdjust(void)
1966          {
1967   1      
1968   1              COsdDisp_YES_NO(ROW(15), COL(22),0);// draw AUTO ADJUST YES/NO
1969   1              COsdDispAutoProc();
1970   1              //  COsdDisp_YES_NO(ROW(17), COL(22),1);// draw FACTORY RESET YES/NO
1971   1      
1972   1      }
1973          
1974          void COsdRightSubAutoAdjust(void)
1975          {
1976   1              COsdDisp_YES_NO(ROW(15), COL(22),0);// draw AUTO ADJUST YES/NO
1977   1              COsdDispAutoProc();
1978   1      
1979   1      
1980   1      }
1981          
1982          void COsdExitSubAutoAdjust(void)
1983          {
1984   1              COsdMenuSignalSelect();
1985   1      }
1986          
1987          
1988          void COsdMenuSubFacReset(void)
1989          {
1990   1          ucOsdState = _MENU_SUB_FACTORY_RESET;
1991   1         // ucOsdEventMsg = _SAVE_EE_SYSTEMDATA_MSG;
1992   1          COsdFxDisableWindow(1);
1993   1      }
1994          
1995          void COsdLeftSubFacReset(void)
1996          {
1997   1              COsdDisp_YES_NO(ROW(17), COL(22),1);// draw FACTORY RESET YES/NO
1998   1             COsdFactoryReset();
1999   1      
2000   1      }
2001          
2002          void COsdRightSubFacReset(void)
2003          {
2004   1              COsdDisp_YES_NO(ROW(15), COL(22),0);// draw AUTO ADJUST YES/NO
2005   1              COsdFactoryReset();
2006   1      
2007   1      
2008   1      }
2009          
2010          void COsdExitSubFacReset(void)
2011          {
2012   1              COsdMenuSubFacReset();
2013   1      }
2014          
2015          
2016          
2017          
2018          //----------------------------------------------------------------------------------------------------
2019          // OSD "ColorAdj" Operation
2020          //----------------------------------------------------------------------------------------------------
2021          void COsdMenuColorAdj(void)
2022          {
2023   1          if(GET_COLOR_TEMP_TYPE() != 4)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 35  

2024   1          {
2025   2              return;
2026   2          }
2027   1          else
2028   1          {
2029   2              COsdFxLoadText(ROW(20), COL(5), stOsdUserData.Language, tOSD_RGB_STR);
2030   2              COsdDispArrowPoint(ROW(19), COL(7), ROW(19), COL(7), _MENU_SUB_ADJ_R);
2031   2          }
2032   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2033   1      }
2034          
2035          void COsdLeftColorAdj(void)
2036          {
2037   1          COsdDispPenPoint(ROW(9), COL(3), ROW(11), COL(3), _MENU_COLOR_TEMP);
2038   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2039   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2040   1      
2041   1      }
2042          
2043          void COsdRightColorAdj(void)
2044          {
2045   1      //    COsdDispPenPoint(ROW(9), COL(3), ROW(7), COL(3), _MENU_BRIGHTNESS);
2046   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2047   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2048   1      }
2049          
2050          void COsdExitColorAdj(void)
2051          {
2052   1          COsdExitContrast();
2053   1      }
2054          
2055          //----------------------------------------------------------------------------------------------------
2056          // OSD "SubColorAdjR" Operation
2057          //----------------------------------------------------------------------------------------------------
2058          void COsdMenuSubColorAdjR(void)
2059          {
2060   1          COsdDispFullSlider(ROW(18), COL(5), 12, stColorTempData.ColorTemp[_RED], 255, 0, _CP_RED, _CP_WHITE);
2061   1          ucOsdState = _MENU_ADJ_R;
2062   1      }
2063          
2064          void COsdLeftSubColorAdjR(void)
2065          {
2066   1          COsdDispArrowPoint(ROW(19), COL(7), ROW(19), COL(11), _MENU_SUB_ADJ_G);
2067   1      }
2068          
2069          void COsdRightSubColorAdjR(void)
2070          {
2071   1          COsdDispArrowPoint(ROW(19), COL(7), ROW(19), COL(15), _MENU_SUB_ADJ_B);
2072   1      }
2073          
2074          void COsdExitSubColorAdjR(void)
2075          {
2076   1          ucOsdState = _MENU_COLOR_ADJ;
2077   1          COsdDispClearText(ROW(17), COL(5), 18, 5);
2078   1      }
2079          
2080          //----------------------------------------------------------------------------------------------------
2081          // OSD "SubColorAdjG" Operation
2082          //----------------------------------------------------------------------------------------------------
2083          void COsdMenuSubColorAdjG(void)
2084          {
2085   1          COsdDispFullSlider(ROW(18), COL(5), 12, stColorTempData.ColorTemp[_GREEN], 255, 0, _CP_GREEN, _CP_WHIT
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 36  

             -E);
2086   1          ucOsdState = _MENU_ADJ_G;
2087   1      }
2088          
2089          void COsdLeftSubColorAdjG(void)
2090          {
2091   1          COsdDispArrowPoint(ROW(19), COL(11), ROW(19), COL(15), _MENU_SUB_ADJ_B);
2092   1      }
2093          
2094          void COsdRightSubColorAdjG(void)
2095          {
2096   1          COsdDispArrowPoint(ROW(19), COL(11), ROW(19), COL(7), _MENU_SUB_ADJ_R);
2097   1      }
2098          
2099          void COsdExitSubColorAdjG(void)
2100          {
2101   1          COsdExitSubColorAdjR();
2102   1      }
2103          
2104          //----------------------------------------------------------------------------------------------------
2105          // OSD "SubColorAdjB" Operation
2106          //----------------------------------------------------------------------------------------------------
2107          void COsdMenuSubColorAdjB(void)
2108          {
2109   1          COsdDispFullSlider(ROW(18), COL(5), 12, stColorTempData.ColorTemp[_BLUE], 255, 0, _CP_BLUE, _CP_WHITE)
             -;
2110   1          ucOsdState = _MENU_ADJ_B;
2111   1      }
2112          
2113          void COsdLeftSubColorAdjB(void)
2114          {
2115   1          COsdDispArrowPoint(ROW(19), COL(15), ROW(19), COL(7), _MENU_SUB_ADJ_R);
2116   1      }
2117          
2118          void COsdRightSubColorAdjB(void)
2119          {
2120   1          COsdDispArrowPoint(ROW(19), COL(15), ROW(19), COL(11), _MENU_SUB_ADJ_G);
2121   1      }
2122          
2123          void COsdExitSubColorAdjB(void)
2124          {
2125   1          COsdExitSubColorAdjR();
2126   1      }
2127          
2128          //----------------------------------------------------------------------------------------------------
2129          // OSD "AdjR" Operation
2130          //----------------------------------------------------------------------------------------------------
2131          void COsdMenuAdjR(void)
2132          {
2133   1          ucOsdState = _MENU_SUB_ADJ_R;
2134   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
2135   1          COsdDispClearText(ROW(17), COL(5), 18, 2);
2136   1          CLR_KEYREPEATENABLE();
2137   1      }
2138          
2139          void COsdLeftAdjR(void)
2140          {
2141   1          SET_KEYREPEATENABLE();
2142   1          stColorTempData.ColorTemp[_RED] = COsdFxDetOverRange(stColorTempData.ColorTemp[_RED], 255, 0, _DET_OVE
             -RRANGE_MAX);
2143   1          COsdDispFullSlider(ROW(18), COL(5), 12, stColorTempData.ColorTemp[_RED], 255, 0, _CP_RED, _CP_WHITE);
2144   1          CAdjustContrast(stConBriData.Contrast);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 37  

2145   1      }
2146          
2147          void COsdRightAdjR(void)
2148          {
2149   1          SET_KEYREPEATENABLE();
2150   1          stColorTempData.ColorTemp[_RED] = COsdFxDetOverRange(stColorTempData.ColorTemp[_RED], 255, 0, _DET_OVE
             -RRANGE_MIN);
2151   1          COsdDispFullSlider(ROW(18), COL(5), 12, stColorTempData.ColorTemp[_RED], 255, 0, _CP_RED, _CP_WHITE);
2152   1          CAdjustContrast(stConBriData.Contrast);
2153   1      }
2154          
2155          void COsdExitAdjR(void)
2156          {
2157   1          COsdMenuAdjR();
2158   1      }
2159          
2160          //----------------------------------------------------------------------------------------------------
2161          // OSD "AdjG" Operation
2162          //----------------------------------------------------------------------------------------------------
2163          void COsdMenuAdjG(void)
2164          {
2165   1          ucOsdState = _MENU_SUB_ADJ_G;
2166   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
2167   1          COsdDispClearText(ROW(17), COL(5), 18, 2);
2168   1          CLR_KEYREPEATENABLE();
2169   1      }
2170          
2171          void COsdLeftAdjG(void)
2172          {
2173   1          SET_KEYREPEATENABLE();
2174   1          stColorTempData.ColorTemp[_GREEN] = COsdFxDetOverRange(stColorTempData.ColorTemp[_GREEN], 255, 0, _DET
             -_OVERRANGE_MAX);
2175   1          COsdDispFullSlider(ROW(18), COL(5), 12, stColorTempData.ColorTemp[_GREEN], 255, 0, _CP_GREEN, _CP_WHIT
             -E);
2176   1          CAdjustContrast(stConBriData.Contrast);
2177   1      }
2178          
2179          void COsdRightAdjG(void)
2180          {
2181   1          SET_KEYREPEATENABLE();
2182   1          stColorTempData.ColorTemp[_GREEN] = COsdFxDetOverRange(stColorTempData.ColorTemp[_GREEN], 255, 0, _DET
             -_OVERRANGE_MIN);
2183   1          COsdDispFullSlider(ROW(18), COL(5), 12, stColorTempData.ColorTemp[_GREEN], 255, 0, _CP_GREEN, _CP_WHIT
             -E);
2184   1          CAdjustContrast(stConBriData.Contrast);
2185   1      }
2186          
2187          void COsdExitAdjG(void)
2188          {
2189   1          COsdMenuAdjG();
2190   1      }
2191          
2192          //----------------------------------------------------------------------------------------------------
2193          // OSD "AdjB" Operation
2194          //----------------------------------------------------------------------------------------------------
2195          void COsdMenuAdjB(void)
2196          {
2197   1          ucOsdState = _MENU_SUB_ADJ_B;
2198   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
2199   1          COsdDispClearText(ROW(17), COL(5), 17, 2);
2200   1          CLR_KEYREPEATENABLE();
2201   1      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 38  

2202          
2203          void COsdLeftAdjB(void)
2204          {
2205   1          SET_KEYREPEATENABLE();
2206   1          stColorTempData.ColorTemp[_BLUE] = COsdFxDetOverRange(stColorTempData.ColorTemp[_BLUE], 255, 0, _DET_O
             -VERRANGE_MAX);
2207   1          COsdDispFullSlider(ROW(18), COL(5), 12, stColorTempData.ColorTemp[_BLUE], 255, 0, _CP_BLUE, _CP_WHITE)
             -;
2208   1          CAdjustContrast(stConBriData.Contrast);
2209   1      }
2210          
2211          void COsdRightAdjB(void)
2212          {
2213   1          SET_KEYREPEATENABLE();
2214   1          stColorTempData.ColorTemp[_BLUE] = COsdFxDetOverRange(stColorTempData.ColorTemp[_BLUE], 255, 0, _DET_O
             -VERRANGE_MIN);
2215   1          COsdDispFullSlider(ROW(18), COL(5), 12, stColorTempData.ColorTemp[_BLUE], 255, 0, _CP_BLUE, _CP_WHITE)
             -;
2216   1          CAdjustContrast(stConBriData.Contrast);
2217   1      }
2218          
2219          void COsdExitAdjB(void)
2220          {
2221   1          COsdMenuAdjB();
2222   1      }
2223          
2224          //----------------------------------------------------------------------------------------------------
2225          // OSD "ColorTemp" Operation
2226          //----------------------------------------------------------------------------------------------------
2227          void COsdMenuColorTemp(void)
2228          {
2229   1          CScalerLoadHardwareVLCFont(tFONT_COLORTEMP, 0x54);
2230   1      
2231   1      //    CScalerLoadFont(tFONT_COLORTEMP, 0x54, 0x0a, _COMPRESS_FONT);
2232   1          COsdFxChange1bitColor(ROW(19), COL(5), WIDTH(14), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2233   1          COsdFxLoadIcon(ROW(19), COL(5), tOSD_COLORTEMP_ITEM_ICO);
2234   1      
2235   1          switch(GET_COLOR_TEMP_TYPE())
2236   1          {
2237   2              case _CT_9300:
2238   2                  COsdDispArrowPoint(ROW(18), COL(6), ROW(18), COL(6), _MENU_SUB_TEMP_COLOR9300);
2239   2                  break;
2240   2      
2241   2              case _CT_6500:
2242   2                  COsdDispArrowPoint(ROW(18), COL(9), ROW(18), COL(9), _MENU_SUB_TEMP_COLOR6500);
2243   2                  break;
2244   2      
2245   2              case _CT_5800:
2246   2                  COsdDispArrowPoint(ROW(18), COL(12), ROW(18), COL(12), _MENU_SUB_TEMP_COLOR5800);
2247   2                  break;
2248   2      
2249   2              case _CT_SRGB:
2250   2                  COsdDispArrowPoint(ROW(18), COL(15), ROW(18), COL(15), _MENU_SUB_TEMP_SRGB);
2251   2                  break;
2252   2      
2253   2              case _CT_USER:
2254   2                  COsdDispArrowPoint(ROW(18), COL(18), ROW(18), COL(18), _MENU_SUB_TEMP_USER);
2255   2                  break;
2256   2          }
2257   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2258   1      
2259   1      
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 39  

2260   1      }
2261          void COsdLeftColorTemp(void)
2262          {
2263   1      #if(_DCR_MODE != _DCR_TYPE_OFF)
                  COsdDispPenPoint(ROW(11), COL(3), ROW(13), COL(3), _MENU_COLOR_DCR);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
                  COsdDispClearText(ROW(19), COL(9), 16, 1);
              
                  if(GET_DCR_STATUS())
                  {
                      COsdFxLoadText(ROW(19), COL(9), (_DCR_MODE), tCOLOR_TABLE[5]);
                  }
                  else
                  {
                      COsdFxLoadText(ROW(19), COL(9), (_DCR_TYPE_OFF), tCOLOR_TABLE[5]);
                  }
              
              #else
2280   1      //    COsdDispPenPoint(ROW(11), COL(3), ROW(5), COL(3), _MENU_CONTRAST);
2281   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2282   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2283   1      
2284   1      #endif
2285   1      }
2286          
2287          void COsdRightColorTemp(void)
2288          {
2289   1          COsdDispPenPoint(ROW(11), COL(3), ROW(9), COL(3), _MENU_COLOR_ADJ);
2290   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2291   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2292   1      
2293   1      }
2294          
2295          void COsdExitColorTemp(void)
2296          {
2297   1          COsdExitContrast();
2298   1      }
2299          
2300          
2301          
2302          //----------------------------------------------------------------------------------------------------
2303          // OSD "Temp 9300" Operation
2304          //----------------------------------------------------------------------------------------------------
2305          void COsdMenuSubTempColor9300(void)
2306          {
2307   1          CEepromSaveOsdUserData();
2308   1      
2309   1          COsdDispClearText(ROW(18), COL(5), 18, 2);
2310   1          CScalerLoadHardwareVLCFont(tFONT_GLOBAL2ND, 0x54);
2311   1          ucOsdState = _MENU_COLOR_TEMP;
2312   1      }
2313          
2314          void COsdLeftSubTempColor9300(void)
2315          {
2316   1          COsdDispArrowPoint(ROW(18), COL(6), ROW(18), COL(9), _MENU_SUB_TEMP_COLOR6500);
2317   1          SET_COLOR_TEMP_TYPE(1);
2318   1          CEepromLoadColorTempData();
2319   1          CAdjustContrast(stConBriData.Contrast);
2320   1      }
2321          
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 40  

2322          void COsdRightSubTempColor9300(void)
2323          {
2324   1          COsdDispArrowPoint(ROW(18), COL(6), ROW(18), COL(18), _MENU_SUB_TEMP_USER);
2325   1          SET_COLOR_TEMP_TYPE(4);
2326   1          CEepromLoadColorTempData();
2327   1          CAdjustContrast(stConBriData.Contrast);
2328   1      }
2329          
2330          void COsdExitSubTempColor9300(void)
2331          {
2332   1          COsdMenuSubTempColor9300();
2333   1      }
2334          
2335          //----------------------------------------------------------------------------------------------------
2336          // OSD "Temp 6500" Operation
2337          //----------------------------------------------------------------------------------------------------
2338          void COsdMenuSubTempColor6500(void)
2339          {
2340   1          CEepromSaveOsdUserData();
2341   1      
2342   1          COsdDispClearText(ROW(18), COL(5), 18, 2);
2343   1          CScalerLoadHardwareVLCFont(tFONT_GLOBAL2ND, 0x54);
2344   1          ucOsdState = _MENU_COLOR_TEMP;
2345   1      }
2346          
2347          void COsdLeftSubTempColor6500(void)
2348          {
2349   1          COsdDispArrowPoint(ROW(18), COL(9), ROW(18), COL(12), _MENU_SUB_TEMP_COLOR5800);
2350   1          SET_COLOR_TEMP_TYPE(2);
2351   1          CEepromLoadColorTempData();
2352   1          CAdjustContrast(stConBriData.Contrast);
2353   1      }
2354          
2355          void COsdRightSubTempColor6500(void)
2356          {
2357   1          COsdDispArrowPoint(ROW(18), COL(9), ROW(18), COL(6), _MENU_SUB_TEMP_COLOR9300);
2358   1          SET_COLOR_TEMP_TYPE(0);
2359   1          CEepromLoadColorTempData();
2360   1          CAdjustContrast(stConBriData.Contrast);
2361   1      }
2362          
2363          void COsdExitSubTempColor6500(void)
2364          {
2365   1          COsdMenuSubTempColor6500();
2366   1      }
2367          
2368          //----------------------------------------------------------------------------------------------------
2369          // OSD "Temp 5800" Operation
2370          //----------------------------------------------------------------------------------------------------
2371          void COsdMenuSubTempColor5800(void)
2372          {
2373   1          CEepromSaveOsdUserData();
2374   1      
2375   1          COsdDispClearText(ROW(18), COL(5), 18, 2);
2376   1          CScalerLoadHardwareVLCFont(tFONT_GLOBAL2ND, 0x54);
2377   1          ucOsdState = _MENU_COLOR_TEMP;
2378   1      }
2379          
2380          void COsdLeftSubTempColor5800(void)
2381          {
2382   1          COsdDispArrowPoint(ROW(18), COL(12), ROW(18), COL(15), _MENU_SUB_TEMP_SRGB);
2383   1          SET_COLOR_TEMP_TYPE(3);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 41  

2384   1          CEepromLoadColorTempData();
2385   1          CAdjustContrast(stConBriData.Contrast);
2386   1      }
2387          
2388          void COsdRightSubTempColor5800(void)
2389          {
2390   1          COsdDispArrowPoint(ROW(18), COL(12), ROW(18), COL(9), _MENU_SUB_TEMP_COLOR6500);
2391   1          SET_COLOR_TEMP_TYPE(1);
2392   1          CEepromLoadColorTempData();
2393   1          CAdjustContrast(stConBriData.Contrast);
2394   1      }
2395          
2396          void COsdExitSubTempColor5800(void)
2397          {
2398   1          COsdMenuSubTempColor5800();
2399   1      }
2400          
2401          //----------------------------------------------------------------------------------------------------
2402          // OSD "SubTempSrgb" Operation
2403          //----------------------------------------------------------------------------------------------------
2404          void COsdMenuSubTempSrgb(void)
2405          {
2406   1          CEepromSaveOsdUserData();
2407   1      
2408   1          COsdDispClearText(ROW(18), COL(5), 17, 2);
2409   1          CScalerLoadHardwareVLCFont(tFONT_GLOBAL2ND, 0x54);
2410   1          ucOsdState = _MENU_COLOR_TEMP;
2411   1      }
2412          
2413          void COsdLeftSubTempSrgb(void)
2414          {
2415   1          COsdDispArrowPoint(ROW(18), COL(15), ROW(18), COL(18), _MENU_SUB_TEMP_USER);
2416   1          SET_COLOR_TEMP_TYPE(4);
2417   1          CEepromLoadColorTempData();
2418   1          CAdjustContrast(stConBriData.Contrast);
2419   1      }
2420          
2421          void COsdRightSubTempSrgb(void)
2422          {
2423   1          COsdDispArrowPoint(ROW(18), COL(15), ROW(18), COL(12), _MENU_SUB_TEMP_COLOR5800);
2424   1          SET_COLOR_TEMP_TYPE(2);
2425   1          CEepromLoadColorTempData();
2426   1          CAdjustContrast(stConBriData.Contrast);
2427   1      }
2428          
2429          void COsdExitSubTempSrgb(void)
2430          {
2431   1          COsdMenuSubTempSrgb();
2432   1      }
2433          //----------------------------------------------------------------------------------------------------
2434          // OSD "SubTempUser" Operation
2435          //----------------------------------------------------------------------------------------------------
2436          void COsdMenuSubTempUser(void)
2437          {
2438   1          CEepromSaveOsdUserData();
2439   1      
2440   1          COsdDispClearText(ROW(18), COL(5), 17, 2);
2441   1          CScalerLoadHardwareVLCFont(tFONT_GLOBAL2ND, 0x54);
2442   1          ucOsdState = _MENU_COLOR_TEMP;
2443   1      }
2444          
2445          void COsdLeftSubTempUser(void)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 42  

2446          {
2447   1          COsdDispArrowPoint(ROW(18), COL(18), ROW(18), COL(6), _MENU_SUB_TEMP_COLOR9300);
2448   1          SET_COLOR_TEMP_TYPE(0);
2449   1          CEepromLoadColorTempData();
2450   1          CAdjustContrast(stConBriData.Contrast);
2451   1      }
2452          
2453          void COsdRightSubTempUser(void)
2454          {
2455   1          COsdDispArrowPoint(ROW(18), COL(18), ROW(18), COL(15), _MENU_SUB_TEMP_SRGB);
2456   1          SET_COLOR_TEMP_TYPE(3);
2457   1          CEepromLoadColorTempData();
2458   1          CAdjustContrast(stConBriData.Contrast);
2459   1      }
2460          
2461          void COsdExitSubTempUser(void)
2462          {
2463   1          COsdMenuSubTempUser();
2464   1      }
2465          
2466          
2467          #if(_DCR_MODE != _DCR_TYPE_OFF)
              //----------------------------------------------------------------------------------------------------
              // OSD "ColorDCR" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuColorDCR(void)
              {
                  COsdDispClearText(ROW(19), COL(9), 16, 1);
              
                  if(GET_DCR_STATUS())
                  {
                      CLR_DCR_STATUS();
              
              #if((_DCR_MODE == _DCR_TYPE_1) || (_DCR_MODE == _DCR_TYPE_2))
                      CScalerPageSelect(_PAGE7);
                      CScalerSetByte(_P7_DCC_CTRL0_C7, 0x00);
              #endif
              
                      COsdFxLoadText(ROW(19), COL(9), (_DCR_TYPE_OFF), tCOLOR_TABLE[5]);
                  }
                  else
                  {
                      SET_DCR_STATUS();
                      COsdFxLoadText(ROW(19), COL(9), (_DCR_MODE), tCOLOR_TABLE[5]);
                  }
              }
              
              void COsdLeftColorDCR(void)
              {
                  COsdDispPenPoint(ROW(13), COL(3), ROW(5), COL(3), _MENU_CONTRAST);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
                  COsdDispClearText(ROW(19), COL(9), 16, 1);
              }
              
              void COsdRightColorDCR(void)
              {
                  COsdDispPenPoint(ROW(13), COL(3), ROW(11), COL(3), _MENU_COLOR_TEMP);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 43  

                  COsdDispClearText(ROW(19), COL(9), 16, 1);
              }
              
              void COsdExitColorDCR(void)
              {
                  COsdExitContrast();
              }
              
              #endif // End of #if(_DCR_MODE != _DCR_TYPE_OFF)
2517          
2518          //----------------------------------------------------------------------------------------------------
2519          // OSD "Clock" Operation
2520          //----------------------------------------------------------------------------------------------------
2521          void COsdMenuClock(void)
2522          {
2523   1          // V015 VGA Patch Note (6) Modify 20100612 Start
2524   1          // Patch Reason : Open Image Setting for YPbPr.
2525   1          /*
2526   1          if((GET_INPUTSOURCE_TYPE() == _SOURCE_VGA))
2527   1          */
2528   1          if((GET_INPUTSOURCE_TYPE() == _SOURCE_VGA) || (GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR))
2529   1          // V015 VGA Patch Note (6) Modify 20100612 End
2530   1          {
2531   2              ucOsdState = _MENU_SUB_CLOCK;
2532   2              COsdDispFullSlider(ROW(19), COL(5), 12, stModeUserData.Clock, COsdFxGetAdcClockRange(_GET_CLOCKRAN
             -GE_MAX) - COsdFxGetAdcClockRange(_GET_CLOCKRANGE_MIN), COsdFxGetAdcClockRange(_GET_CLOCKRANGE_MIN), _CP_WHITE, _CP_WHITE
             -);
2533   2          }
2534   1      }
2535          
2536          void COsdLeftClock(void)
2537          {
2538   1          COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_PHASE);
2539   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2540   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2541   1      
2542   1      }
2543          
2544          void COsdRightClock(void)
2545          {
2546   1      #if(_OD_SUPPORT == _ON)
                  COsdDispPenPoint(ROW(5), COL(3), ROW(15), COL(3), _MENU_OD);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              #else
2552   1          COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_VPOSITION);
2553   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2554   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2555   1      
2556   1      #endif
2557   1      }
2558          
2559          void COsdExitClock(void)
2560          {
2561   1          COsdFxCloseWindow(WINNO(2));
2562   1          COsdDispDrawInitWindow();
2563   1          COsdFxLoadIcon(ROW(7), COL(3), tOSD_POINT_ICO);
2564   1          ucOsdState = _MENU_GAMMA_SETTING;
2565   1      
2566   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2567   1      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 44  

2568          
2569          
2570          
2571          //----------------------------------------------------------------------------------------------------
2572          // OSD "SubClock" Operation
2573          //----------------------------------------------------------------------------------------------------
2574          void COsdMenuSubClock(void)
2575          {
2576   1          ucOsdState = _MENU_CLOCK;
2577   1          ucOsdEventMsg = _SAVE_EE_MODEUSERDATA_MSG;
2578   1          COsdDispClearText(ROW(18), COL(5), 12, 2);
2579   1          CLR_KEYREPEATENABLE();
2580   1      }
2581          
2582          void COsdLeftSubClock(void)
2583          {
2584   1          SET_KEYREPEATENABLE();
2585   1          stModeUserData.Clock = COsdFxDetOverRange(stModeUserData.Clock, COsdFxGetAdcClockRange(_GET_CLOCKRANGE
             -_MAX), COsdFxGetAdcClockRange(_GET_CLOCKRANGE_MIN), _DET_OVERRANGE_MAX);
2586   1          COsdDispFullSlider(ROW(19), COL(5), 12, stModeUserData.Clock, COsdFxGetAdcClockRange(_GET_CLOCKRANGE_M
             -AX) - COsdFxGetAdcClockRange(_GET_CLOCKRANGE_MIN), COsdFxGetAdcClockRange(_GET_CLOCKRANGE_MIN), _CP_WHITE, _CP_WHITE);
2587   1      #if(_SCALER_SERIES_TYPE == _RTD2472D_SERIES)
2588   1      
2589   1          CAdjustAdcClock(stModeUserData.Clock);
2590   1      
2591   1      #else
                  No Setting !!
              #endif
2594   1      
2595   1          CTimerDelayXms(10);
2596   1      }
2597          
2598          void COsdRightSubClock(void)
2599          {
2600   1          SET_KEYREPEATENABLE();
2601   1          stModeUserData.Clock = COsdFxDetOverRange(stModeUserData.Clock, COsdFxGetAdcClockRange(_GET_CLOCKRANGE
             -_MAX), COsdFxGetAdcClockRange(_GET_CLOCKRANGE_MIN), _DET_OVERRANGE_MIN);
2602   1          COsdDispFullSlider(ROW(19), COL(5), 12, stModeUserData.Clock, COsdFxGetAdcClockRange(_GET_CLOCKRANGE_M
             -AX) - COsdFxGetAdcClockRange(_GET_CLOCKRANGE_MIN), COsdFxGetAdcClockRange(_GET_CLOCKRANGE_MIN), _CP_WHITE, _CP_WHITE);
2603   1      
2604   1      #if(_SCALER_SERIES_TYPE == _RTD2472D_SERIES)
2605   1      
2606   1          CAdjustAdcClock(stModeUserData.Clock);
2607   1      
2608   1      #else
                  No Setting !!
              #endif
2611   1      
2612   1          CTimerDelayXms(10);
2613   1      }
2614          
2615          void COsdExitSubClock(void)
2616          {
2617   1          COsdMenuSubClock();
2618   1      }
2619          
2620          //----------------------------------------------------------------------------------------------------
2621          // OSD "Phase" Operation
2622          //----------------------------------------------------------------------------------------------------
2623          void COsdMenuPhase(void)
2624          {
2625   1          if((GET_INPUTSOURCE_TYPE() == _SOURCE_DVI) || (GET_INPUTSOURCE_TYPE() == _SOURCE_HDMI)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 45  

2626   1          || (GET_INPUTSOURCE_TYPE() == _SOURCE_DP))
2627   1          {
2628   2          }
2629   1          else
2630   1      
2631   1          {
2632   2              ucOsdState = _MENU_SUB_PHASE;
2633   2              COsdDispFullSlider(ROW(19), COL(5), 12, stModeUserData.Phase, 63, 0, _CP_WHITE, _CP_WHITE);
2634   2              COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK
             -));
2635   2          }
2636   1      }
2637          
2638          void COsdLeftPhase(void)
2639          {
2640   1          COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_SHARPNESS);
2641   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2642   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2643   1      
2644   1      }
2645          
2646          void COsdRightPhase(void)
2647          {
2648   1          COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_CLOCK);
2649   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2650   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2651   1      
2652   1      }
2653          
2654          void COsdExitPhase(void)
2655          {
2656   1          COsdExitClock();
2657   1      }
2658          
2659          //----------------------------------------------------------------------------------------------------
2660          // OSD "SubPhase" Operation
2661          //----------------------------------------------------------------------------------------------------
2662          void COsdMenuSubPhase(void)
2663          {
2664   1          ucOsdState = _MENU_PHASE;
2665   1          ucOsdEventMsg = _SAVE_EE_MODEUSERDATA_MSG;
2666   1          COsdDispClearText(ROW(18), COL(5), 12, 2);
2667   1          CLR_KEYREPEATENABLE();
2668   1      }
2669          
2670          void COsdLeftSubPhase(void)
2671          {
2672   1          SET_KEYREPEATENABLE();
2673   1          stModeUserData.Phase = COsdFxDetOverRange(stModeUserData.Phase, 63, 0, _DET_OVERRANGE_MAX);
2674   1          COsdDispFullSlider(ROW(19), COL(5), 12, stModeUserData.Phase, 63, 0, _CP_WHITE, _CP_WHITE);
2675   1          CAdjustPhase(stModeUserData.Phase);
2676   1      }
2677          
2678          void COsdRightSubPhase(void)
2679          {
2680   1          SET_KEYREPEATENABLE();
2681   1          stModeUserData.Phase = COsdFxDetOverRange(stModeUserData.Phase, 63, 0, _DET_OVERRANGE_MIN);
2682   1          COsdDispFullSlider(ROW(19), COL(5), 12, stModeUserData.Phase, 63, 0, _CP_WHITE, _CP_WHITE);
2683   1          CAdjustPhase(stModeUserData.Phase);
2684   1      }
2685          
2686          void COsdExitSubPhase(void)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 46  

2687          {
2688   1          COsdMenuSubPhase();
2689   1      }
2690          
2691          //----------------------------------------------------------------------------------------------------
2692          // OSD "Sharpness" Operation
2693          //----------------------------------------------------------------------------------------------------
2694          void COsdMenuSharpness(void)
2695          {
2696   1          COsdFxLoadText(ROW(19), COL(6), 0, tOSD_SHARPNESSITEM_STR);
2697   1      
2698   1          ucOsdState = stOsdUserData.Sharpness + _MENU_SUB_SHARPNESS0;
2699   1          COsdFxHLine(ROW(18), COL(stOsdUserData.Sharpness * 2 + 7), LENGTH(1), 0x4a, _WRITE_BYTE1);
2700   1      
2701   1          COsdFxChange1bitColor(ROW(18), COL(7), WIDTH(9), HEIGHT(1), FGCOLOR(_CP_RED), BGCOLOR(_CP_BLACK));
2702   1          COsdFxHLine(ROW(19), COL(7), LENGTH(10), 0x8c, _WRITE_BYTE0);
2703   1          COsdDispClearText(ROW(19), COL(16), 2, 1);
2704   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2705   1      }
2706          
2707          void COsdLeftSharpness(void)
2708          {
2709   1          COsdDispPenPoint(ROW(9), COL(3), ROW(11), COL(3), _MENU_HPOSITION);
2710   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2711   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2712   1      
2713   1      }
2714          
2715          void COsdRightSharpness(void)
2716          {
2717   1          COsdDispPenPoint(ROW(9), COL(3), ROW(7), COL(3), _MENU_PHASE);
2718   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2719   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2720   1      
2721   1      }
2722          
2723          void COsdExitSharpness(void)
2724          {
2725   1          COsdExitClock();
2726   1      }
2727          
2728          
2729          //----------------------------------------------------------------------------------------------------
2730          // OSD "SubSharpness1" Operation
2731          //----------------------------------------------------------------------------------------------------
2732          void COsdMenuSubSharpness0(void)
2733          {
2734   1          COsdDispClearText(ROW(18), COL(7), 9, 2);
2735   1          ucOsdState = _MENU_SHARPNESS;
2736   1      }
2737          
2738          void COsdLeftSubSharpness0(void)
2739          {
2740   1          COsdDispArrowPoint(ROW(18), COL(7), ROW(18), COL(9), _MENU_SUB_SHARPNESS1);
2741   1      
2742   1          stOsdUserData.Sharpness = 1;
2743   1          CAdjustSharpness(stOsdUserData.Sharpness);
2744   1      
2745   1      }
2746          
2747          void COsdRightSubSharpness0(void)
2748          {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 47  

2749   1      
2750   1      }
2751          
2752          void COsdExitSubSharpness0(void)
2753          {
2754   1          COsdMenuSubSharpness0();
2755   1      }
2756          
2757          //----------------------------------------------------------------------------------------------------
2758          // OSD "SubSharpness2" Operation
2759          //----------------------------------------------------------------------------------------------------
2760          void COsdMenuSubSharpness1(void)
2761          {
2762   1          COsdMenuSubSharpness0();
2763   1      }
2764          
2765          void COsdLeftSubSharpness1(void)
2766          {
2767   1          COsdDispArrowPoint(ROW(18), COL(9), ROW(18), COL(11), _MENU_SUB_SHARPNESS2);
2768   1      
2769   1          stOsdUserData.Sharpness = 2;
2770   1          CAdjustSharpness(stOsdUserData.Sharpness);
2771   1      
2772   1      }
2773          
2774          void COsdRightSubSharpness1(void)
2775          {
2776   1          COsdDispArrowPoint(ROW(18), COL(9), ROW(18), COL(7), _MENU_SUB_SHARPNESS0);
2777   1      
2778   1          stOsdUserData.Sharpness = 0;
2779   1          CAdjustSharpness(stOsdUserData.Sharpness);
2780   1      
2781   1      }
2782          
2783          void COsdExitSubSharpness1(void)
2784          {
2785   1          COsdMenuSubSharpness0();
2786   1      }
2787          
2788          //----------------------------------------------------------------------------------------------------
2789          // OSD "SubSharpness3" Operation
2790          //----------------------------------------------------------------------------------------------------
2791          void COsdMenuSubSharpness2(void)
2792          {
2793   1          COsdMenuSubSharpness0();
2794   1      }
2795          
2796          void COsdLeftSubSharpness2(void)
2797          {
2798   1          COsdDispArrowPoint(ROW(18), COL(11), ROW(18), COL(13), _MENU_SUB_SHARPNESS3);
2799   1      
2800   1          stOsdUserData.Sharpness = 3;
2801   1          CAdjustSharpness(stOsdUserData.Sharpness);
2802   1      }
2803          
2804          void COsdRightSubSharpness2(void)
2805          {
2806   1          COsdDispArrowPoint(ROW(18), COL(11), ROW(18), COL(9), _MENU_SUB_SHARPNESS1);
2807   1      
2808   1          stOsdUserData.Sharpness = 1;
2809   1          CAdjustSharpness(stOsdUserData.Sharpness);
2810   1      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 48  

2811          
2812          void COsdExitSubSharpness2(void)
2813          {
2814   1          COsdMenuSubSharpness0();
2815   1      }
2816          
2817          //----------------------------------------------------------------------------------------------------
2818          // OSD "SubSharpness4" Operation
2819          //----------------------------------------------------------------------------------------------------
2820          void COsdMenuSubSharpness3(void)
2821          {
2822   1          COsdMenuSubSharpness0();
2823   1      }
2824          
2825          void COsdLeftSubSharpness3(void)
2826          {
2827   1          COsdDispArrowPoint(ROW(18), COL(13), ROW(18), COL(15), _MENU_SUB_SHARPNESS4);
2828   1      
2829   1          stOsdUserData.Sharpness = 4;
2830   1          CAdjustSharpness(stOsdUserData.Sharpness);
2831   1      }
2832          
2833          void COsdRightSubSharpness3(void)
2834          {
2835   1          COsdDispArrowPoint(ROW(18), COL(13), ROW(18), COL(11), _MENU_SUB_SHARPNESS2);
2836   1      
2837   1          stOsdUserData.Sharpness = 2;
2838   1          CAdjustSharpness(stOsdUserData.Sharpness);
2839   1      }
2840          
2841          void COsdExitSubSharpness3(void)
2842          {
2843   1          COsdMenuSubSharpness0();
2844   1      }
2845          
2846          //----------------------------------------------------------------------------------------------------
2847          // OSD "SubSharpness5" Operation
2848          //----------------------------------------------------------------------------------------------------
2849          void COsdMenuSubSharpness4(void)
2850          {
2851   1          COsdMenuSubSharpness0();
2852   1      }
2853          
2854          void COsdLeftSubSharpness4(void)
2855          {
2856   1      
2857   1      }
2858          
2859          void COsdRightSubSharpness4(void)
2860          {
2861   1          COsdDispArrowPoint(ROW(18), COL(15), ROW(18), COL(13), _MENU_SUB_SHARPNESS3);
2862   1      
2863   1          stOsdUserData.Sharpness = 3;
2864   1          CAdjustSharpness(stOsdUserData.Sharpness);
2865   1      }
2866          
2867          void COsdExitSubSharpness4(void)
2868          {
2869   1          COsdMenuSubSharpness0();
2870   1      }
2871          
2872          //----------------------------------------------------------------------------------------------------
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 49  

2873          // OSD "HPosition" Operation
2874          //----------------------------------------------------------------------------------------------------
2875          void COsdMenuHPosition(void)
2876          {
2877   1          // V015 VGA Patch Note (6) Modify 20100612 Start
2878   1          // Patch Reason : Open Image Setting for YPbPr.
2879   1          /*
2880   1          if((GET_INPUTSOURCE_TYPE() == _SOURCE_VGA))
2881   1          */
2882   1          if((GET_INPUTSOURCE_TYPE() == _SOURCE_VGA) || (GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR))
2883   1          // V015 VGA Patch Note (6) Modify 20100612 End
2884   1          {
2885   2              ucOsdState = _MENU_SUB_H_POS;
2886   2      
2887   2              COsdDispFullSlider(ROW(19), COL(5), 12, stModeUserData.HPosition, _HPOSITION_BIAS * 2, (stModeUser
             -CenterData.CenterHPos - _HPOSITION_BIAS), _CP_WHITE, _CP_WHITE);
2888   2          }
2889   1      }
2890          
2891          void COsdLeftHPosition(void)
2892          {
2893   1          COsdDispPenPoint(ROW(11), COL(3), ROW(13), COL(3), _MENU_VPOSITION);
2894   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2895   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2896   1      
2897   1      }
2898          
2899          void COsdRightHPosition(void)
2900          {
2901   1          COsdDispPenPoint(ROW(11), COL(3), ROW(9), COL(3), _MENU_SHARPNESS);
2902   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2903   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2904   1      
2905   1      }
2906          
2907          void COsdExitHPosition(void)
2908          {
2909   1          COsdExitClock();
2910   1      }
2911          
2912          //----------------------------------------------------------------------------------------------------
2913          // OSD "SubHPosition" Operation
2914          //----------------------------------------------------------------------------------------------------
2915          void COsdMenuSubHPosition(void)
2916          {
2917   1          CLR_KEYREPEATENABLE();
2918   1          ucOsdEventMsg = _SAVE_EE_MODEUSERDATA_MSG;
2919   1          ucOsdState = _MENU_HPOSITION;
2920   1          COsdDispClearText(ROW(18), COL(5), 12, 2);
2921   1      }
2922          
2923          void COsdLeftSubHPosition(void)
2924          {
2925   1          SET_KEYREPEATENABLE();
2926   1      
2927   1          stModeUserData.HPosition = COsdFxDetOverRange(stModeUserData.HPosition, COsdFxGetHPositionRange(_GET_H
             -POSITIONRANGE_MAX), COsdFxGetHPositionRange(_GET_HPOSITIONRANGE_MIN), _DET_OVERRANGE_MAX);
2928   1          COsdDispFullSlider(ROW(19), COL(5), 12, stModeUserData.HPosition, _HPOSITION_BIAS * 2, stModeUserCente
             -rData.CenterHPos - _HPOSITION_BIAS, _CP_WHITE, _CP_WHITE);
2929   1      
2930   1          CAdjustHPosition();
2931   1      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 50  

2932          
2933          void COsdRightSubHPosition(void)
2934          {
2935   1          SET_KEYREPEATENABLE();
2936   1      
2937   1          stModeUserData.HPosition = COsdFxDetOverRange(stModeUserData.HPosition, COsdFxGetHPositionRange(_GET_H
             -POSITIONRANGE_MAX), COsdFxGetHPositionRange(_GET_HPOSITIONRANGE_MIN), _DET_OVERRANGE_MIN);
2938   1          COsdDispFullSlider(ROW(19), COL(5), 12, stModeUserData.HPosition, _HPOSITION_BIAS * 2, stModeUserCente
             -rData.CenterHPos - _HPOSITION_BIAS, _CP_WHITE, _CP_WHITE);
2939   1      
2940   1          CAdjustHPosition();
2941   1      }
2942          
2943          void COsdExitSubHPosition(void)
2944          {
2945   1          COsdMenuSubHPosition();
2946   1      }
2947          
2948          //----------------------------------------------------------------------------------------------------
2949          // OSD "VPosition" Operation
2950          //----------------------------------------------------------------------------------------------------
2951          void COsdMenuVPosition(void)
2952          {
2953   1          // V015 VGA Patch Note (6) Modify 20100612 Start
2954   1          // Patch Reason : Open Image Setting for YPbPr.
2955   1          /*
2956   1          if((GET_INPUTSOURCE_TYPE() == _SOURCE_VGA))
2957   1          */
2958   1          if((GET_INPUTSOURCE_TYPE() == _SOURCE_VGA) || (GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR))
2959   1          // V015 VGA Patch Note (6) Modify 20100612 End
2960   1          {
2961   2              ucOsdState = _MENU_SUB_V_POS;
2962   2              COsdDispFullSlider(ROW(19), COL(5), 12, stModeUserData.VPosition, _VPOSITION_BIAS * 2, stModeUserC
             -enterData.CenterVPos - _VPOSITION_BIAS, _CP_WHITE, _CP_WHITE);
2963   2          }
2964   1      }
2965          
2966          void COsdLeftVPosition(void)
2967          {
2968   1      #if(_OD_SUPPORT == _ON)
                  COsdDispPenPoint(ROW(13), COL(3), ROW(15), COL(3), _MENU_OD);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              #else
2974   1          COsdDispPenPoint(ROW(13), COL(3), ROW(5), COL(3), _MENU_CLOCK);
2975   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2976   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2977   1      
2978   1      #endif
2979   1      }
2980          
2981          void COsdRightVPosition(void)
2982          {
2983   1          COsdDispPenPoint(ROW(13), COL(3), ROW(11), COL(3), _MENU_HPOSITION);
2984   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
2985   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
2986   1      
2987   1      }
2988          
2989          void COsdExitVPosition(void)
2990          {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 51  

2991   1          COsdExitClock();
2992   1      }
2993          
2994          //----------------------------------------------------------------------------------------------------
2995          // OSD "SubVPosition" Operation
2996          //----------------------------------------------------------------------------------------------------
2997          void COsdMenuSubVPosition(void)
2998          {
2999   1          CLR_KEYREPEATENABLE();
3000   1          ucOsdEventMsg = _SAVE_EE_MODEUSERDATA_MSG;
3001   1          ucOsdState = _MENU_VPOSITION;
3002   1          COsdDispClearText(ROW(18), COL(5), 12, 2);
3003   1      }
3004          
3005          void COsdLeftSubVPosition(void)
3006          {
3007   1          SET_KEYREPEATENABLE();
3008   1          stModeUserData.VPosition = COsdFxDetOverRange(stModeUserData.VPosition, COsdFxGetVPositionRange(_GET_V
             -POSITIONRANGE_MAX), COsdFxGetVPositionRange(_GET_VPOSITIONRANGE_MIN), _DET_OVERRANGE_MAX);
3009   1          COsdDispFullSlider(ROW(19), COL(5), 12, stModeUserData.VPosition, _VPOSITION_BIAS * 2, stModeUserCente
             -rData.CenterVPos - _VPOSITION_BIAS, _CP_WHITE, _CP_WHITE);
3010   1          CAdjustVPosition();
3011   1      }
3012          
3013          void COsdRightSubVPosition(void)
3014          {
3015   1          SET_KEYREPEATENABLE();
3016   1          stModeUserData.VPosition = COsdFxDetOverRange(stModeUserData.VPosition, COsdFxGetVPositionRange(_GET_V
             -POSITIONRANGE_MAX), COsdFxGetVPositionRange(_GET_VPOSITIONRANGE_MIN), _DET_OVERRANGE_MIN);
3017   1          COsdDispFullSlider(ROW(19), COL(5), 12, stModeUserData.VPosition, _VPOSITION_BIAS * 2, stModeUserCente
             -rData.CenterVPos - _VPOSITION_BIAS, _CP_WHITE, _CP_WHITE);
3018   1          CAdjustVPosition();
3019   1      }
3020          
3021          void COsdExitSubVPosition(void)
3022          {
3023   1          COsdMenuSubVPosition();
3024   1      }
3025          
3026          
3027          #if(_OD_SUPPORT == _ON)
              //----------------------------------------------------------------------------------------------------
              // OSD "Gamma" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuOD(void)
              {
                  ucOsdState = _MENU_SUB_OD;
              
                  COsdDispFullSlider(ROW(19), COL(5), 12, stSystemData.ODTable, 100, 0, _CP_WHITE, _CP_WHITE);
              }
              
              void COsdLeftOD(void)
              {
                  COsdDispPenPoint(ROW(15), COL(3), ROW(5), COL(3), _MENU_CLOCK);
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightOD(void)
              {
                  COsdDispPenPoint(ROW(15), COL(3), ROW(13), COL(3), _MENU_VPOSITION);
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 52  

                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitOD(void)
              {
                  COsdExitClock();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Gamma" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuSubOD(void)
              {
                  CLR_KEYREPEATENABLE();
              
                  ucOsdEventMsg = _SAVE_EE_SYSTEMDATA_MSG;
              
                  ucOsdState = _MENU_OD;
                  COsdDispClearText(ROW(18), COL(5), 12, 2);
              }
              
              void COsdLeftSubOD(void)
              {
                  SET_KEYREPEATENABLE();
                  stSystemData.ODTable = COsdFxDetOverRange(stSystemData.ODTable, 100, 0, _DET_OVERRANGE_MAX);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stSystemData.ODTable, 100, 0, _CP_WHITE, _CP_WHITE);
                  CAdjustODeltaGain(stSystemData.ODTable);
              }
              
              void COsdRightSubOD(void)
              {
                  SET_KEYREPEATENABLE();
                  stSystemData.ODTable = COsdFxDetOverRange(stSystemData.ODTable, 100, 0, _DET_OVERRANGE_MIN);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stSystemData.ODTable, 100, 0, _CP_WHITE, _CP_WHITE);
                  CAdjustODeltaGain(stSystemData.ODTable);
              }
              
              void COsdExitSubOD(void)
              {
                  COsdMenuSubOD();
              }
              
              #endif // End of #if(_OD_SUPPORT == _ON)
3092          
3093          
3094          //----------------------------------------------------------------------------------------------------
3095          // OSD "OsdHPos" Operation
3096          //----------------------------------------------------------------------------------------------------
3097          void COsdMenuOsdHPos(void)
3098          {
3099   1          ucOsdState = _MENU_SUB_OSD_H_POS;
3100   1          COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.OsdHPos, 200, 0, _CP_WHITE, _CP_WHITE);
3101   1      }
3102          
3103          void COsdLeftOsdHPos(void)
3104          {
3105   1          COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_OSD_V_POS);
3106   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3107   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3108   1      }
3109          
3110          void COsdRightOsdHPos(void)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 53  

3111          {
3112   1          COsdDispPenPoint(ROW(5), COL(3), ROW(11), COL(3), _MENU_OSD_LANGUAGE);
3113   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3114   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3115   1      }
3116          
3117          void COsdExitOsdHPos(void)
3118          {
3119   1          COsdFxCloseWindow(WINNO(2));
3120   1          COsdDispDrawInitWindow();
3121   1          COsdFxLoadIcon(ROW(9), COL(3), tOSD_POINT_ICO);
3122   1          ucOsdState = _MENU_BRIGHTNESS_SETTING;
3123   1      
3124   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3125   1      }
3126          
3127          //----------------------------------------------------------------------------------------------------
3128          // OSD "SubOsdHPos" Operation
3129          //----------------------------------------------------------------------------------------------------
3130          void COsdMenuSubOsdHPos(void)
3131          {
3132   1          CLR_KEYREPEATENABLE();
3133   1          ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
3134   1          ucOsdState = _MENU_OSD_H_POS;
3135   1          COsdDispClearText(ROW(18), COL(5), 12, 2);
3136   1      }
3137          
3138          void COsdLeftSubOsdHPos(void)
3139          {
3140   1          SET_KEYREPEATENABLE();
3141   1          stOsdUserData.OsdHPos = COsdFxDetOverRange(stOsdUserData.OsdHPos, 200, 0, _DET_OVERRANGE_MAX);
3142   1      
3143   1          // V016 System Patch Note (1) Modify 20100729 Start
3144   1          // Patch Reason : Modify OSD Set position and Draw Window Function
3145   1          /*
3146   1          COsdFxSetPosition(WIDTH(280), WIDTH(400), stOsdUserData.OsdHPos, stOsdUserData.OsdVPos, 0x01);
3147   1          */
3148   1          COsdFxSetPosition(WIDTH(280), WIDTH(440), stOsdUserData.OsdHPos, stOsdUserData.OsdVPos, 0x01);
3149   1          // V016 System Patch Note (1) Modify 20100729 End
3150   1      
3151   1          COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.OsdHPos, 200, 0, _CP_WHITE, _CP_WHITE);
3152   1      }
3153          
3154          void COsdRightSubOsdHPos(void)
3155          {
3156   1          SET_KEYREPEATENABLE();
3157   1          stOsdUserData.OsdHPos = COsdFxDetOverRange(stOsdUserData.OsdHPos, 200, 0, _DET_OVERRANGE_MIN);
3158   1      
3159   1          // V016 System Patch Note (1) Modify 20100729 Start
3160   1          // Patch Reason : Modify OSD Set position and Draw Window Function
3161   1          /*
3162   1          COsdFxSetPosition(WIDTH(280), WIDTH(400), stOsdUserData.OsdHPos, stOsdUserData.OsdVPos, 0x01);
3163   1          */
3164   1          COsdFxSetPosition(WIDTH(280), WIDTH(440), stOsdUserData.OsdHPos, stOsdUserData.OsdVPos, 0x01);
3165   1          // V016 System Patch Note (1) Modify 20100729 End
3166   1      
3167   1          COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.OsdHPos, 200, 0, _CP_WHITE, _CP_WHITE);
3168   1      }
3169          
3170          void COsdExitSubOsdHPos(void)
3171          {
3172   1          COsdMenuSubOsdHPos();
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 54  

3173   1      }
3174          
3175          //----------------------------------------------------------------------------------------------------
3176          // OSD "OsdVPos" Operation
3177          //----------------------------------------------------------------------------------------------------
3178          void COsdMenuOsdVPos(void)
3179          {
3180   1          ucOsdState = _MENU_SUB_OSD_V_POS;
3181   1          COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.OsdVPos, 200, 0, _CP_WHITE, _CP_WHITE);
3182   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3183   1      
3184   1      }
3185          
3186          void COsdLeftOsdVPos(void)
3187          {
3188   1          COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_OSD_TIME);
3189   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3190   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3191   1      
3192   1      }
3193          
3194          void COsdRightOsdVPos(void)
3195          {
3196   1          COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_OSD_H_POS);
3197   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3198   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3199   1      
3200   1      }
3201          
3202          void COsdExitOsdVPos(void)
3203          {
3204   1          COsdExitOsdHPos();
3205   1      }
3206          
3207          
3208          //----------------------------------------------------------------------------------------------------
3209          // OSD "SubOsdVPos" Operation
3210          //----------------------------------------------------------------------------------------------------
3211          void COsdMenuSubOsdVPos(void)
3212          {
3213   1          CLR_KEYREPEATENABLE();
3214   1          ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
3215   1          ucOsdState = _MENU_OSD_V_POS;
3216   1          COsdDispClearText(ROW(18), COL(5), 12, 2);
3217   1      }
3218          
3219          void COsdLeftSubOsdVPos(void)
3220          {
3221   1          SET_KEYREPEATENABLE();
3222   1          stOsdUserData.OsdVPos = COsdFxDetOverRange(stOsdUserData.OsdVPos, 200, 0, _DET_OVERRANGE_MAX);
3223   1      
3224   1          // V016 System Patch Note (1) Modify 20100729 Start
3225   1          // Patch Reason : Modify OSD Set position and Draw Window Function
3226   1          /*
3227   1          COsdFxSetPosition(WIDTH(280), WIDTH(400), stOsdUserData.OsdHPos, stOsdUserData.OsdVPos, 0x01);
3228   1          */
3229   1          COsdFxSetPosition(WIDTH(280), WIDTH(440), stOsdUserData.OsdHPos, stOsdUserData.OsdVPos, 0x01);
3230   1          // V016 System Patch Note (1) Modify 20100729 End
3231   1      
3232   1          COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.OsdVPos, 200, 0, _CP_WHITE, _CP_WHITE);
3233   1      }
3234          
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 55  

3235          void COsdRightSubOsdVPos(void)
3236          {
3237   1          SET_KEYREPEATENABLE();
3238   1          stOsdUserData.OsdVPos = COsdFxDetOverRange(stOsdUserData.OsdVPos, 200, 0, _DET_OVERRANGE_MIN);
3239   1      
3240   1          // V016 System Patch Note (1) Modify 20100729 Start
3241   1          // Patch Reason : Modify OSD Set position and Draw Window Function
3242   1          /*
3243   1          COsdFxSetPosition(WIDTH(280), WIDTH(400), stOsdUserData.OsdHPos, stOsdUserData.OsdVPos, 0x01);
3244   1          */
3245   1          COsdFxSetPosition(WIDTH(280), WIDTH(440), stOsdUserData.OsdHPos, stOsdUserData.OsdVPos, 0x01);
3246   1          // V016 System Patch Note (1) Modify 20100729 End
3247   1      
3248   1          COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.OsdVPos, 200, 0, _CP_WHITE, _CP_WHITE);
3249   1      }
3250          
3251          void COsdExitSubOsdVPos(void)
3252          {
3253   1          COsdMenuSubOsdVPos();
3254   1      }
3255          
3256          //----------------------------------------------------------------------------------------------------
3257          // OSD "OsdTime" Operation
3258          //----------------------------------------------------------------------------------------------------
3259          void COsdMenuOsdTime(void)
3260          {
3261   1          ucOsdState = _MENU_SUB_OSD_TIME;
3262   1          COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.OsdTimeout, 27, 3, _CP_WHITE, _CP_WHITE);
3263   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3264   1      }
3265          
3266          void COsdLeftOsdTime(void)
3267          {
3268   1          COsdDispPenPoint(ROW(9), COL(3), ROW(11), COL(3), _MENU_OSD_LANGUAGE);
3269   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3270   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3271   1      }
3272          
3273          void COsdRightOsdTime(void)
3274          {
3275   1          COsdDispPenPoint(ROW(9), COL(3), ROW(7), COL(3), _MENU_OSD_V_POS);
3276   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3277   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3278   1      }
3279          
3280          void COsdExitOsdTime(void)
3281          {
3282   1          COsdExitOsdHPos();
3283   1      }
3284          
3285          //----------------------------------------------------------------------------------------------------
3286          // OSD "SubOsdTime" Operation
3287          //----------------------------------------------------------------------------------------------------
3288          void COsdMenuSubOsdTime(void)
3289          {
3290   1          CLR_KEYREPEATENABLE();
3291   1          ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
3292   1          ucOsdState = _MENU_OSD_TIME;
3293   1          COsdDispClearText(ROW(18), COL(5), 12, 2);
3294   1      }
3295          
3296          void COsdLeftSubOsdTime(void)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 56  

3297          {
3298   1          SET_KEYREPEATENABLE();
3299   1          stOsdUserData.OsdTimeout = COsdFxDetOverRange(stOsdUserData.OsdTimeout, 30, 3, _DET_OVERRANGE_MAX);
3300   1          COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.OsdTimeout, 27, 3, _CP_WHITE, _CP_WHITE);
3301   1      }
3302          
3303          void COsdRightSubOsdTime(void)
3304          {
3305   1          SET_KEYREPEATENABLE();
3306   1          stOsdUserData.OsdTimeout = COsdFxDetOverRange(stOsdUserData.OsdTimeout, 30, 3, _DET_OVERRANGE_MIN);
3307   1          COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.OsdTimeout, 27, 3, _CP_WHITE, _CP_WHITE);
3308   1      }
3309          
3310          void COsdExitSubOsdTime(void)
3311          {
3312   1          COsdMenuSubOsdTime();
3313   1      }
3314          
3315          //----------------------------------------------------------------------------------------------------
3316          // OSD "Language" Operation
3317          //----------------------------------------------------------------------------------------------------
3318          void COsdMenuLanguage(void)
3319          {
3320   1          BYTE temp;
3321   1      
3322   1          COsdDispClearIcon(ROW(5), COL(0), 5, 20);
3323   1          COsdDispClearText(ROW(5), COL(5), 18, 15);
3324   1          COsdFxCloseWindow(WINNO(2));
3325   1      
3326   1          for(temp = 0; temp < 7; temp ++)
3327   1          {
3328   2              COsdFxLoadText(ROW(5 + temp*2), COL(7), temp, tOSD_LANGUAGE_ITEM_STR);
3329   2          }
3330   1      
3331   1          switch (stOsdUserData.Language)
3332   1          {
3333   2              case 0:
3334   2                  COsdDispPenPoint(ROW(13), COL(3), ROW(5), COL(3), _MENU_SUB_ENG);
3335   2                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_B
             -LACK));
3336   2      
3337   2                  break;
3338   2              case 1:
3339   2                  COsdDispPenPoint(ROW(13), COL(3), ROW(7), COL(3), _MENU_SUB_FRAN);
3340   2                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_B
             -LACK));
3341   2                  break;
3342   2              case 2:
3343   2                  COsdDispPenPoint(ROW(13), COL(3), ROW(9), COL(3), _MENU_SUB_DEUT);
3344   2                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_B
             -LACK));
3345   2                  break;
3346   2              case 3:
3347   2                  COsdDispPenPoint(ROW(13), COL(3), ROW(11), COL(3), _MENU_SUB_ESPA);
3348   2                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_
             -BLACK));
3349   2                  break;
3350   2              case 4:
3351   2                  COsdDispPenPoint(ROW(13), COL(3), ROW(13), COL(3), _MENU_SUB_CHI);
3352   2                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_
             -BLACK));
3353   2                  break;
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 57  

3354   2              case 5:
3355   2                  COsdDispPenPoint(ROW(13), COL(3), ROW(15), COL(3), _MENU_SUB_SIMPLE_CHI);
3356   2                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_
             -BLACK));
3357   2                  break;
3358   2              case 6:
3359   2                  COsdDispPenPoint(ROW(13), COL(3), ROW(17), COL(3), _MENU_SUB_JAP);
3360   2                  COsdFxChange1bitColor(ROW(17), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_
             -BLACK));
3361   2                  break;
3362   2          }
3363   1      }
3364          
3365          void COsdLeftLanguage(void)
3366          {
3367   1          COsdDispPenPoint(ROW(11), COL(3), ROW(5), COL(3), _MENU_OSD_H_POS);
3368   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3369   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3370   1      
3371   1      }
3372          
3373          void COsdRightLanguage(void)
3374          {
3375   1          COsdDispPenPoint(ROW(11), COL(3), ROW(9), COL(3), _MENU_OSD_TIME);
3376   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3377   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3378   1      
3379   1      }
3380          
3381          void COsdExitLanguage(void)
3382          {
3383   1          COsdExitOsdHPos();
3384   1      }
3385          
3386          //----------------------------------------------------------------------------------------------------
3387          // OSD "SubEng" Operation
3388          //----------------------------------------------------------------------------------------------------
3389          void COsdMenuSubEng(void)
3390          {
3391   1          stOsdUserData.Language = _ENGLISH;
3392   1          COsdDispLanguageBack();
3393   1      }
3394          
3395          void COsdLeftSubEng(void)
3396          {
3397   1          COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_SUB_FRAN);
3398   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3399   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3400   1      }
3401          
3402          void COsdRightSubEng(void)
3403          {
3404   1          COsdDispPenPoint(ROW(5), COL(3), ROW(17), COL(3), _MENU_SUB_JAP);
3405   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3406   1          COsdFxChange1bitColor(ROW(17), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3407   1      
3408   1      }
3409          
3410          void COsdExitSubEng(void)
3411          {
3412   1          COsdDispLanguageBack();
3413   1      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 58  

3414          
3415          //----------------------------------------------------------------------------------------------------
3416          // OSD "SubFran" Operation
3417          //----------------------------------------------------------------------------------------------------
3418          void COsdMenuSubFran(void)
3419          {
3420   1          stOsdUserData.Language = _FRENCH;
3421   1          COsdDispLanguageBack();
3422   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3423   1      
3424   1      }
3425          
3426          void COsdLeftSubFran(void)
3427          {
3428   1          COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_SUB_DEUT);
3429   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3430   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3431   1      
3432   1      }
3433          
3434          void COsdRightSubFran(void)
3435          {
3436   1          COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_SUB_ENG);
3437   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3438   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3439   1      
3440   1      }
3441          
3442          void COsdExitSubFran(void)
3443          {
3444   1          COsdExitSubEng();
3445   1      }
3446          
3447          //----------------------------------------------------------------------------------------------------
3448          // OSD "SubDeut" Operation
3449          //----------------------------------------------------------------------------------------------------
3450          void COsdMenuSubDeut(void)
3451          {
3452   1          stOsdUserData.Language = _GERMAN;
3453   1          COsdDispLanguageBack();
3454   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3455   1      
3456   1      }
3457          
3458          void COsdLeftSubDeut(void)
3459          {
3460   1          COsdDispPenPoint(ROW(9), COL(3), ROW(11), COL(3), _MENU_SUB_ESPA);
3461   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3462   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3463   1      
3464   1      }
3465          
3466          void COsdRightSubDeut(void)
3467          {
3468   1          COsdDispPenPoint(ROW(9), COL(3), ROW(7), COL(3), _MENU_SUB_FRAN);
3469   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3470   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3471   1      
3472   1      }
3473          
3474          void COsdExitSubDeut(void)
3475          {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 59  

3476   1          COsdExitSubEng();
3477   1      }
3478          
3479          //----------------------------------------------------------------------------------------------------
3480          // OSD "SubEspa" Operation
3481          //----------------------------------------------------------------------------------------------------
3482          void COsdMenuSubEspa(void)
3483          {
3484   1          stOsdUserData.Language = _SPANISH;
3485   1          COsdDispLanguageBack();
3486   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3487   1      
3488   1      }
3489          
3490          void COsdLeftSubEspa(void)
3491          {
3492   1          COsdDispPenPoint(ROW(11), COL(3), ROW(13), COL(3), _MENU_SUB_CHI);
3493   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3494   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3495   1      
3496   1      }
3497          
3498          void COsdRightSubEspa(void)
3499          {
3500   1          COsdDispPenPoint(ROW(11), COL(3), ROW(9), COL(3), _MENU_SUB_DEUT);
3501   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3502   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3503   1      
3504   1      }
3505          
3506          void COsdExitSubEspa(void)
3507          {
3508   1          COsdExitSubEng();
3509   1      }
3510          
3511          //----------------------------------------------------------------------------------------------------
3512          // OSD "SubChi" Operation
3513          //----------------------------------------------------------------------------------------------------
3514          void COsdMenuSubChi(void)
3515          {
3516   1          CScalerLoadHardwareVLCFont(tFONT_CHI, 0x60);
3517   1          stOsdUserData.Language = _CHINESE_T;
3518   1          COsdDispLanguageBack();
3519   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3520   1      
3521   1      }
3522          
3523          void COsdLeftSubChi(void)
3524          {
3525   1          COsdDispPenPoint(ROW(13), COL(3), ROW(15), COL(3), _MENU_SUB_SIMPLE_CHI);
3526   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3527   1          COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3528   1      
3529   1      }
3530          
3531          void COsdRightSubChi(void)
3532          {
3533   1          COsdDispPenPoint(ROW(13), COL(3), ROW(11), COL(3), _MENU_SUB_ESPA);
3534   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3535   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3536   1      
3537   1      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 60  

3538          
3539          void COsdExitSubChi(void)
3540          {
3541   1          COsdExitSubEng();
3542   1      }
3543          
3544          //----------------------------------------------------------------------------------------------------
3545          // OSD "SubSimpleChi" Operation
3546          //----------------------------------------------------------------------------------------------------
3547          void COsdMenuSubSimpleChi(void)
3548          {
3549   1          CScalerLoadHardwareVLCFont(tFONT_CHI, 0x60);
3550   1          stOsdUserData.Language = _CHINESE_S;
3551   1          COsdDispLanguageBack();
3552   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3553   1      
3554   1      }
3555          
3556          void COsdLeftSubSimpleChi(void)
3557          {
3558   1          COsdDispPenPoint(ROW(15), COL(3), ROW(17), COL(3), _MENU_SUB_JAP);
3559   1          COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3560   1          COsdFxChange1bitColor(ROW(17), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3561   1      
3562   1      }
3563          
3564          void COsdRightSubSimpleChi(void)
3565          {
3566   1          COsdDispPenPoint(ROW(15), COL(3), ROW(13), COL(3), _MENU_SUB_CHI);
3567   1          COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3568   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3569   1      
3570   1      }
3571          
3572          void COsdExitSubSimpleChi(void)
3573          {
3574   1          COsdExitSubEng();
3575   1      }
3576          
3577          //----------------------------------------------------------------------------------------------------
3578          // OSD "SubJap" Operation
3579          //----------------------------------------------------------------------------------------------------
3580          void COsdMenuSubJap(void)
3581          {
3582   1          CScalerLoadHardwareVLCFont(tFONT_JAP, 0x60);
3583   1          stOsdUserData.Language = _JAPAN;
3584   1          COsdDispLanguageBack();
3585   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3586   1      
3587   1      }
3588          
3589          void COsdLeftSubJap(void)
3590          {
3591   1          COsdDispPenPoint(ROW(17), COL(3), ROW(5), COL(3), _MENU_SUB_ENG);
3592   1          COsdFxChange1bitColor(ROW(17), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3593   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3594   1      }
3595          
3596          void COsdRightSubJap(void)
3597          {
3598   1          COsdDispPenPoint(ROW(17), COL(3), ROW(15), COL(3), _MENU_SUB_SIMPLE_CHI);
3599   1          COsdFxChange1bitColor(ROW(17), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 61  

3600   1          COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3601   1      
3602   1      }
3603          
3604          void COsdExitSubJap(void)
3605          {
3606   1          COsdExitSubEng();
3607   1      }
3608          
3609          //----------------------------------------------------------------------------------------------------
3610          // Singal Type "VGA" Operation
3611          //----------------------------------------------------------------------------------------------------
3612          void COsdMenuSingalVGA(void)
3613          {
3614   1      #if(_SOURCE_SEARCH_TYPE_BY_OSD == _ON)
3615   1          CLR_SOURCE_SEARCH_AUTO();
3616   1          stSystemData.SearchIndex = 1;   //VGA
3617   1      #endif
3618   1      
3619   1      #if(_SCALER_SERIES_TYPE == _RTD2472D_SERIES)
3620   1          CSourceSwitchInputPort(_A0_INPUT_PORT);
3621   1          ucOsdEventMsg = _CHANGE_SOURCE_MSG;
3622   1      #else
                  No Setting !!
              #endif
3625   1      }
3626          
3627          void COsdLeftSingalVGA(void)
3628          {
3629   1      #if((_D0_INPUT_PORT_TYPE == _D0_DVI_PORT) || (_D0_INPUT_PORT_TYPE == _D0_DVI_I_PORT) || (_D1_INPUT_PORT_TY
             -PE == _D1_DVI_PORT) || (_D1_INPUT_PORT_TYPE == _D1_DVI_I_PORT))
3630   1          COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_SIGNAL_DVI);
3631   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3632   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3633   1      #elif((_D0_INPUT_PORT_TYPE == _D0_HDMI_PORT) || (_D1_INPUT_PORT_TYPE == _D1_HDMI_PORT))
                  COsdDispPenPoint(ROW(5), COL(3), ROW(9), COL(3), _MENU_SIGNAL_HDMI);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #elif(_DP_SUPPORT == _ON)
                  COsdDispPenPoint(ROW(5), COL(3), ROW(11), COL(3), _MENU_SIGNAL_DISPLAYPORT);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #endif
3642   1      }
3643          
3644          void COsdRightSingalVGA(void)
3645          {
3646   1      #if(_SOURCE_SEARCH_TYPE_BY_OSD == _ON)
3647   1      
3648   1          COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_SIGNAL_AUTOSEARCH);
3649   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3650   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3651   1      
3652   1      #else
              
              #if(_DP_SUPPORT == _ON)
                  COsdDispPenPoint(ROW(5), COL(3), ROW(11), COL(3), _MENU_SIGNAL_DISPLAYPORT);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #elif((_D0_INPUT_PORT_TYPE == _D0_HDMI_PORT) || (_D1_INPUT_PORT_TYPE == _D1_HDMI_PORT))
                  COsdDispPenPoint(ROW(5), COL(3), ROW(9), COL(3), _MENU_SIGNAL_HDMI);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 62  

                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #elif((_D0_INPUT_PORT_TYPE == _D0_DVI_PORT) || (_D0_INPUT_PORT_TYPE == _D0_DVI_I_PORT) || (_D1_INPUT_PORT_
             -TYPE == _D1_DVI_PORT) || (_D1_INPUT_PORT_TYPE == _D1_DVI_I_PORT))
                  COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_SIGNAL_DVI);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #endif
              
              #endif
3669   1      
3670   1      }
3671          
3672          void COsdExitSingalVGA(void)
3673          {
3674   1      #if(_SWITCH_INPUT_SOURCE_OSD == _ON)
3675   1          if(GET_SOURCE_OSD_STATUS())
3676   1          {
3677   2              COsdExitDicomSetting();
3678   2              CLR_SOURCE_OSD_STATUS();
3679   2          }
3680   1          else
3681   1      #endif
3682   1          {
3683   2              COsdFxCloseWindow(WINNO(2));
3684   2              COsdDispDrawInitWindow();
3685   2              COsdFxLoadIcon(ROW(11), COL(3), tOSD_POINT_ICO);
3686   2              ucOsdState = _MENU_SIGNAL_SWITCH;
3687   2              COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(15), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLAC
             -K));
3688   2          }
3689   1      }
3690          
3691          //----------------------------------------------------------------------------------------------------
3692          // Singal Type "DVI" Operation
3693          //----------------------------------------------------------------------------------------------------
3694          void COsdMenuSingalDVI(void)
3695          {
3696   1      #if(_SCALER_SERIES_TYPE == _RTD2472D_SERIES)
3697   1      
3698   1      #if(_SOURCE_SEARCH_TYPE_BY_OSD == _ON)
3699   1          CLR_SOURCE_SEARCH_AUTO();
3700   1          stSystemData.SearchIndex = 0;   //DVI
3701   1      #endif
3702   1      
3703   1      #if(_D0_INPUT_PORT_TYPE == _D0_DVI_PORT)
3704   1          CSourceSwitchInputPort(_D0_INPUT_PORT);
3705   1      
3706   1      #elif(_D1_INPUT_PORT_TYPE == _D1_DVI_PORT)
                  CSourceSwitchInputPort(_D1_INPUT_PORT);
              #endif
3709   1      
3710   1          ucOsdEventMsg = _CHANGE_SOURCE_MSG;
3711   1      
3712   1      #else
                  No Setting !!
              #endif
3715   1      }
3716          
3717          void COsdLeftSingalDVI(void)
3718          {
3719   1      #if(_HDMI_SUPPORT == _ON)
                  COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_SIGNAL_HDMI);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 63  

                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              #elif(_DP_SUPPORT == _ON)
                  COsdDispPenPoint(ROW(7), COL(3), ROW(11), COL(3), _MENU_SIGNAL_DISPLAYPORT);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              #else
3730   1      
3731   1      
3732   1      #if(_SOURCE_SEARCH_TYPE_BY_OSD == _ON)
3733   1          COsdDispPenPoint(ROW(7), COL(3), ROW(13), COL(3), _MENU_SIGNAL_AUTOSEARCH);
3734   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3735   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3736   1      #else
                  COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_SIGNAL_VGA);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #endif
3741   1      
3742   1      #endif
3743   1      }
3744          
3745          void COsdRightSingalDVI(void)
3746          {
3747   1      //    COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_SIGNAL_VGA);
3748   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3749   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3750   1      }
3751          
3752          void COsdExitSingalDVI(void)
3753          {
3754   1      #if(_SWITCH_INPUT_SOURCE_OSD == _ON)
3755   1          if(GET_SOURCE_OSD_STATUS())
3756   1          {
3757   2              COsdExitDicomSetting();
3758   2              CLR_SOURCE_OSD_STATUS();
3759   2          }
3760   1          else
3761   1      #endif
3762   1          {
3763   2              COsdExitSingalVGA();
3764   2          }
3765   1      }
3766          
3767          //----------------------------------------------------------------------------------------------------
3768          // Singal Type "HDMI" Operation
3769          //----------------------------------------------------------------------------------------------------
3770          void COsdMenuSingalHDMI(void)
3771          {
3772   1      #if(_SCALER_SERIES_TYPE == _RTD2472D_SERIES)
3773   1      
3774   1      #if(_SOURCE_SEARCH_TYPE_BY_OSD == _ON)
3775   1          CLR_SOURCE_SEARCH_AUTO();
3776   1          stSystemData.SearchIndex = 0;   //HDMI
3777   1      #endif
3778   1      
3779   1      
3780   1      #if(_D0_INPUT_PORT_TYPE == _D0_HDMI_PORT)
                  CSourceSwitchInputPort(_D0_INPUT_PORT);
              
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 64  

              #elif(_D1_INPUT_PORT_TYPE == _D1_HDMI_PORT)
                  CSourceSwitchInputPort(_D1_INPUT_PORT);
              #endif
3786   1      
3787   1          ucOsdEventMsg = _CHANGE_SOURCE_MSG;
3788   1      //    CHdmiHotPlugProc(20);
3789   1      #else
                  No Setting !!
              #endif
3792   1      }
3793          
3794          void COsdLeftSingalHDMI(void)
3795          {
3796   1      #if(_DP_SUPPORT != _ON)
3797   1      
3798   1      #if(_SOURCE_SEARCH_TYPE_BY_OSD == _ON)
3799   1          COsdDispPenPoint(ROW(9), COL(3), ROW(13), COL(3), _MENU_SIGNAL_AUTOSEARCH);
3800   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3801   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3802   1      #else
                  COsdDispPenPoint(ROW(9), COL(3), ROW(5), COL(3), _MENU_SIGNAL_VGA);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #endif
3807   1      
3808   1      
3809   1      #else
                  COsdDispPenPoint(ROW(9), COL(3), ROW(11), COL(3), _MENU_SIGNAL_DISPLAYPORT);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #endif
3814   1      }
3815          
3816          void COsdRightSingalHDMI(void)
3817          {
3818   1      #if((_D0_INPUT_PORT_TYPE != _D0_DVI_PORT) && (_D0_INPUT_PORT_TYPE != _D0_DVI_I_PORT) && (_D1_INPUT_PORT_TY
             -PE != _D1_DVI_PORT) && (_D1_INPUT_PORT_TYPE != _D1_DVI_I_PORT))
              //    COsdDispPenPoint(ROW(9), COL(3), ROW(5), COL(3), _MENU_SIGNAL_VGA);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              #else
3824   1          COsdDispPenPoint(ROW(9), COL(3), ROW(7), COL(3), _MENU_SIGNAL_DVI);
3825   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3826   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3827   1      #endif
3828   1      }
3829          
3830          void COsdExitSingalHDMI(void)
3831          {
3832   1      #if(_SWITCH_INPUT_SOURCE_OSD == _ON)
3833   1          if(GET_SOURCE_OSD_STATUS())
3834   1          {
3835   2              COsdExitDicomSetting();
3836   2              CLR_SOURCE_OSD_STATUS();
3837   2          }
3838   1          else
3839   1      #endif
3840   1          {
3841   2              COsdExitSingalVGA();
3842   2          }
3843   1      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 65  

3844          
3845          //----------------------------------------------------------------------------------------------------
3846          // Singal Type "DisplayPort" Operation
3847          //----------------------------------------------------------------------------------------------------
3848          void COsdMenuSingalDisplayPort(void)
3849          {
3850   1      #if(_SCALER_SERIES_TYPE == _RTD2472D_SERIES)
3851   1      
3852   1      #if(_SOURCE_SEARCH_TYPE_BY_OSD == _ON)
3853   1          CLR_SOURCE_SEARCH_AUTO();
3854   1          stSystemData.SearchIndex = 2;   //DP
3855   1      #endif
3856   1      
3857   1      
3858   1      #if(_D0_INPUT_PORT_TYPE == _D0_DP_PORT)
                  CSourceSwitchInputPort(_D0_INPUT_PORT);
              
                  SET_INPUT_SOURCE_SEARCH();
              
              #elif(_D1_INPUT_PORT_TYPE == _D1_DP_PORT)
                  CSourceSwitchInputPort(_D1_INPUT_PORT);
              
              #endif
3867   1      
3868   1          ucOsdEventMsg = _CHANGE_SOURCE_MSG;
3869   1          //CDptHotplugProcess();//eagleeyes-20080317
3870   1      #else
                  No Setting !!
              #endif
3873   1      
3874   1      }
3875          
3876          void COsdLeftSingalDisplayPort(void)
3877          {
3878   1      
3879   1      #if(_SOURCE_SEARCH_TYPE_BY_OSD == _ON)
3880   1          COsdDispPenPoint(ROW(11), COL(3), ROW(13), COL(3), _MENU_SIGNAL_AUTOSEARCH);
3881   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3882   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3883   1      #else
              
              
                  COsdDispPenPoint(ROW(11), COL(3), ROW(5), COL(3), _MENU_SIGNAL_VGA);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              #endif
3891   1      
3892   1      }
3893          
3894          void COsdRightSingalDisplayPort(void)
3895          {
3896   1      #if(_HDMI_SUPPORT == _ON)
                  COsdDispPenPoint(ROW(11), COL(3), ROW(9), COL(3), _MENU_SIGNAL_HDMI);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              #elif(_TMDS_SUPPORT == _ON)
3902   1          COsdDispPenPoint(ROW(11), COL(3), ROW(7), COL(3), _MENU_SIGNAL_DVI);
3903   1          COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3904   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3905   1      
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 66  

3906   1      #else
                  COsdDispPenPoint(ROW(11), COL(3), ROW(5), COL(3), _MENU_SIGNAL_VGA);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              #endif // End of #if(_HDMI_SUPPORT == _ON)
3912   1      
3913   1      }
3914          
3915          void COsdExitSingalDisplayPort(void)
3916          {
3917   1      #if(_SWITCH_INPUT_SOURCE_OSD == _ON)
3918   1          if(GET_SOURCE_OSD_STATUS())
3919   1          {
3920   2              COsdExitDicomSetting();
3921   2              CLR_SOURCE_OSD_STATUS();
3922   2          }
3923   1          else
3924   1      #endif
3925   1          {
3926   2              COsdExitSingalVGA();
3927   2          }
3928   1      }
3929          
3930          #if(_SOURCE_SEARCH_TYPE_BY_OSD == _ON)
3931          //----------------------------------------------------------------------------------------------------
3932          // Singal Type "DisplayPort" Operation
3933          //----------------------------------------------------------------------------------------------------
3934          void COsdMenuSingalAutoSearch(void)
3935          {
3936   1          SET_SOURCE_SEARCH_AUTO();
3937   1          stSystemData.SearchIndex = 0;   //HDMI
3938   1          CSourceSwitchInputPort(_D0_INPUT_PORT);
3939   1          ucOsdEventMsg = _CHANGE_SOURCE_MSG;
3940   1      }
3941          
3942          void COsdLeftSingalAutoSearch(void)
3943          {
3944   1      //    COsdDispPenPoint(ROW(13), COL(3), ROW(5), COL(3), _MENU_SIGNAL_VGA);
3945   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3946   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3947   1      }
3948          
3949          void COsdRightSingalAutoSearch(void)
3950          {
3951   1      #if(_DP_SUPPORT == _ON)
                  COsdDispPenPoint(ROW(13), COL(3), ROW(11), COL(3), _MENU_SIGNAL_DISPLAYPORT);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #elif((_D0_INPUT_PORT_TYPE == _D0_HDMI_PORT) || (_D1_INPUT_PORT_TYPE == _D1_HDMI_PORT))
                  COsdDispPenPoint(ROW(13), COL(3), ROW(9), COL(3), _MENU_SIGNAL_HDMI);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #elif((_D0_INPUT_PORT_TYPE == _D0_DVI_PORT) || (_D0_INPUT_PORT_TYPE == _D0_DVI_I_PORT) || (_D1_INPUT_PORT_
             -TYPE == _D1_DVI_PORT) || (_D1_INPUT_PORT_TYPE == _D1_DVI_I_PORT))
3960   1          COsdDispPenPoint(ROW(13), COL(3), ROW(7), COL(3), _MENU_SIGNAL_DVI);
3961   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
3962   1          COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
3963   1      #endif
3964   1      }
3965          
3966          void COsdExitSingalAutoSearch(void)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 67  

3967          {
3968   1      #if(_SWITCH_INPUT_SOURCE_OSD == _ON)
3969   1          if(GET_SOURCE_OSD_STATUS())
3970   1          {
3971   2              COsdExitDicomSetting();
3972   2              CLR_SOURCE_OSD_STATUS();
3973   2          }
3974   1          else
3975   1      #endif
3976   1          {
3977   2              COsdExitSingalVGA();
3978   2          }
3979   1      }
3980          #endif
3981          
3982          
3983          #if(_AUDIO_SUPPORT == _ON)
              //----------------------------------------------------------------------------------------------------
              // OSD "Volume" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuVolume(void)
              {
                  ucOsdState = _MENU_SUB_VOLUME;
                  COsdFxHLine(ROW(19), COL(5), 12, ((_CP_WHITE & 0x0f) << 4), _WRITE_BYTE2);
                  COsdFxHLine(ROW(19), COL(5), 1, 0x0d, _WRITE_BYTE1);
                  COsdFxHLine(ROW(19), COL(5 + 12 - 1), 1, 0x0c, _WRITE_BYTE1);
              
              #if((_SCALER_TYPE == _RTD247xRD) || (_SCALER_TYPE == _RTD248xRD) || (_SCALER_TYPE == _RTD2545LR))
                  COsdFxSlider(ROW(19), COL(5 + 1), 12 - 2, stOsdUserData.Volume, 255 + 0, 0);
              #else
                  COsdFxSlider(ROW(19), COL(5 + 1), 12 - 2, stOsdUserData.Volume, 63 + 0, 0);
              #endif
              
                  COsdFxHLine(ROW(18), COL(5 + 12 - 3), 3, ((_CP_WHITE & 0x0f) << 4), _WRITE_BYTE2);
                  COsdFxShowNumber(ROW(19), COL(19), stOsdUserData.Volume - 0, (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | 
             -_SHOW_3));
              }
              
              void COsdLeftVolume(void)
              {
                  COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_MUTE);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(10), (GET_VOLUME_MUTE_STATUS()), tOSD_AUDIO_TABLE[2]);
              }
              
              void COsdRightVolume(void)
              {
                  COsdLeftVolume();
              }
              
              void COsdExitVolume(void)
              {
                  COsdFxCloseWindow(WINNO(2));
                  COsdDispDrawInitWindow();
                  COsdFxLoadIcon(ROW(13), COL(3), tOSD_POINT_ICO);
                  ucOsdState = _MENU_AUDIO;
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(15), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "subVolume" Operation
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 68  

              //----------------------------------------------------------------------------------------------------
              void COsdMenuSubVolume(void)
              {
                  ucOsdState = _MENU_VOLUME;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 15, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              void COsdLeftSubVolume(void)
              {
                  SET_KEYREPEATENABLE();
              
              #if((_SCALER_TYPE == _RTD247xRD) || (_SCALER_TYPE == _RTD248xRD) || (_SCALER_TYPE == _RTD2545LR))
                  stOsdUserData.Volume = COsdFxDetOverRange(stOsdUserData.Volume, 255, 0, _DET_OVERRANGE_MAX);
              #else
                 stOsdUserData.Volume = COsdFxDetOverRange(stOsdUserData.Volume, 63, 0, _DET_OVERRANGE_MAX);
              #endif
              
                  CAdjustVolume(stOsdUserData.Volume);
                  COsdFxHLine(ROW(19), COL(5), 12, ((_CP_WHITE & 0x0f) << 4), _WRITE_BYTE2);
                  COsdFxHLine(ROW(19), COL(5), 1, 0x0d, _WRITE_BYTE1);
                  COsdFxHLine(ROW(19), COL(5 + 12 - 1), 1, 0x0c, _WRITE_BYTE1);
              
              #if((_SCALER_TYPE == _RTD247xRD) || (_SCALER_TYPE == _RTD248xRD) || (_SCALER_TYPE == _RTD2545LR))
                  COsdFxSlider(ROW(19), COL(5 + 1), 12 - 2, stOsdUserData.Volume, 255 + 0, 0);
              #else
                  COsdFxSlider(ROW(19), COL(5 + 1), 12 - 2, stOsdUserData.Volume, 63 + 0, 0);
              #endif
              
                  COsdFxHLine(ROW(18), COL(5 + 12 - 3), 3, ((_CP_WHITE & 0x0f) << 4), _WRITE_BYTE2);
                  COsdFxShowNumber(ROW(19), COL(19), stOsdUserData.Volume - 0, (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | 
             -_SHOW_3));
              }
              
              void COsdRightSubVolume(void)
              {
                  SET_KEYREPEATENABLE();
              
              #if((_SCALER_TYPE == _RTD247xRD) || (_SCALER_TYPE == _RTD248xRD) || (_SCALER_TYPE == _RTD2545LR))
                  stOsdUserData.Volume = COsdFxDetOverRange(stOsdUserData.Volume, 255, 0, _DET_OVERRANGE_MIN);
              #else
                  stOsdUserData.Volume = COsdFxDetOverRange(stOsdUserData.Volume, 63, 0, _DET_OVERRANGE_MIN);
              #endif
              
              
                  CAdjustVolume(stOsdUserData.Volume);
                  COsdFxHLine(ROW(19), COL(5), 12, ((_CP_WHITE & 0x0f) << 4), _WRITE_BYTE2);
                  COsdFxHLine(ROW(19), COL(5), 1, 0x0d, _WRITE_BYTE1);
                  COsdFxHLine(ROW(19), COL(5 + 12 - 1), 1, 0x0c, _WRITE_BYTE1);
              
              
              #if((_SCALER_TYPE == _RTD247xRD) || (_SCALER_TYPE == _RTD248xRD) || (_SCALER_TYPE == _RTD2545LR))
                  COsdFxSlider(ROW(19), COL(5 + 1), 12 - 2, stOsdUserData.Volume, 255 + 0, 0);
              #else
                  COsdFxSlider(ROW(19), COL(5 + 1), 12 - 2, stOsdUserData.Volume, 63 + 0, 0);
              #endif
              
                  COsdFxHLine(ROW(18), COL(5 + 12 - 3), 3, ((_CP_WHITE & 0x0f) << 4), _WRITE_BYTE2);
                  COsdFxShowNumber(ROW(19), COL(19), stOsdUserData.Volume - 0, (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | 
             -_SHOW_3));
              }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 69  

              
              void COsdExitSubVolume(void)
              {
                  COsdMenuSubVolume();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Volume" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuMute(void)
              {
                  if(GET_VOLUME_MUTE_STATUS())
                  {
                      CLR_VOLUME_MUTE_STATUS();
                  }
                  else
                  {
                      SET_VOLUME_MUTE_STATUS();
              
                      CScalerPageSelect(_PAGE1);
              
                      CScalerSetByte(_P1_AOUT_CTL_F4, 0xC0); //for hdmi to vga mute
                      CScalerSetByte(_P1_HPOUT_CTL_F5, 0xC0); //for hdmi to vga mute
                  }
              
                  COsdFxLoadText(ROW(19), COL(10), (GET_VOLUME_MUTE_STATUS()), tOSD_AUDIO_TABLE[2]);
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  CAdjustAudioControl(_ENABLE);
              }
              
              void COsdLeftMute(void)
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_VOLUME);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdDispClearText(ROW(19), COL(10), 5, 1);
              }
              
              void COsdRightMute(void)
              {
                  COsdLeftMute();
              }
              
              void COsdExitMute(void)
              {
                  COsdExitVolume();
              }
              
              #endif // End of#if(_AUDIO_SUPPORT==_ON)
4137          
4138          #if(_DDCCI_SUPPORT == _ON)
              void COsdMenuDDCCIONOFF(void)
              {
              #if((_MCU_TYPE == _REALTEK_RTD2120) || (_MCU_TYPE == _REALTEK_RTD2122))
                  if(GET_DDCCI_STATUS())
                  {
                      CLR_DDCCI_STATUS();
              #if(_DDC_CHANNEL_SEL == _VGA_DDC_CHANNEL)
                      MCU_I2C_SET_SLAVE_FF27 = 0x6a;
              #else
                      MCU_I2C_SET_SLAVE_FF27 = 0x6b;
              #endif
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 70  

                  }
                  else
                  {
                      SET_DDCCI_STATUS();
                      MCU_I2C_SET_SLAVE_FF27 = 0x6e;
              
                      if((GET_INPUT_PORT(g_ucSearchIndex) == _A0_INPUT_PORT)
                      || (GET_INPUT_PORT(g_ucSearchIndex) == _A1_INPUT_PORT)
                      || (GET_INPUT_PORT(g_ucSearchIndex) == _VI_INPUT_PORT))
                      {
                          MCU_I2C_SET_SLAVE_FF27 = MCU_I2C_SET_SLAVE_FF27 & (~_BIT0);
                      }
                      else
                      {
                          MCU_I2C_SET_SLAVE_FF27 = MCU_I2C_SET_SLAVE_FF27 | (_BIT0);
                      }
                  }
              #elif(_MCU_TYPE == _REALTEK_EMBEDDED)
                  if(GET_DDCCI_STATUS())
                  {
                      CLR_DDCCI_STATUS();
                      MCU_I2C_CHANNEL_CTRL_FF2B = 0x00;
                      MCU_I2C_SET_SLAVE_FF23 = 0x6a;
                      MCU_I2C_IRQ_CTRL_FF28 = 0x16;
              #if(_DDC_CHANNEL_SEL == _HDMI_DDC_CHANNEL)
                          MCU_HDMI_DDC_CTRL2_FF2E &= 0xFE;
              #elif(_DDC_CHANNEL_SEL == _DVI_DDC_CHANNEL)
                          MCU_DVI_DDC_CTRL2_FF20 &= 0xFE;
              #else
                          MCU_ADC_DDC_CTRL2_FF1D &= 0xFE;
              #endif
              
              #if(_DDC_CHANNEL_SEL == _HDMI_DDC_CHANNEL)
                          MCU_I2C_CHANNEL_CTRL_FF2B |= 0x01;  // From HDMI DDC
              #elif(_DDC_CHANNEL_SEL == _DVI_DDC_CHANNEL)
                          MCU_I2C_CHANNEL_CTRL_FF2B &= 0xFE;
                          MCU_I2C_SET_SLAVE_FF23 |= 0x01;     // From DVI DDC
              #else
                          MCU_I2C_CHANNEL_CTRL_FF2B &= 0xFE;
                          MCU_I2C_SET_SLAVE_FF23 &= 0xFE;     // From ADC DDC
              #endif
              
                  }
                  else
                  {
                      SET_DDCCI_STATUS();
                      MCU_I2C_SET_SLAVE_FF23 = 0x6e;
                      MCU_I2C_IRQ_CTRL_FF28 = 0x3F;
              
              #if(_DDC_CHANNEL_SEL == _HDMI_DDC_CHANNEL)
                      MCU_HDMI_DDC_CTRL2_FF2E &= 0xFE;
              #elif(_DDC_CHANNEL_SEL == _DVI_DDC_CHANNEL)
                      MCU_DVI_DDC_CTRL2_FF20 &= 0xFE;
              #else
                      MCU_ADC_DDC_CTRL2_FF1D &= 0xFE;
              #endif
              
                      if((GET_INPUT_PORT(g_ucSearchIndex) == _A0_INPUT_PORT)
                      || (GET_INPUT_PORT(g_ucSearchIndex) == _A1_INPUT_PORT)
                      || (GET_INPUT_PORT(g_ucSearchIndex) == _VI_INPUT_PORT))
                      {
                          MCU_I2C_CHANNEL_CTRL_FF2B &= (~_BIT0);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 71  

                          MCU_I2C_SET_SLAVE_FF23 = MCU_I2C_SET_SLAVE_FF23 & (~_BIT0);
                      }
                      else if(GET_INPUT_PORT(g_ucSearchIndex) == _D0_INPUT_PORT)
                      {
              
              #if(_DDC_CHANNEL_FOR_D0 == _DDC2)
                          MCU_I2C_CHANNEL_CTRL_FF2B &= (~_BIT0);
                          MCU_I2C_SET_SLAVE_FF23 |= _BIT0;
              #else
                          MCU_I2C_CHANNEL_CTRL_FF2B |= _BIT0;
                          MCU_I2C_SET_SLAVE_FF23 &= (~_BIT0);
              #endif
              
                      }
                      else
                      {
              
              #if(_DDC_CHANNEL_FOR_D1 == _DDC2)
                          MCU_I2C_CHANNEL_CTRL_FF2B &= (~_BIT0);
                          MCU_I2C_SET_SLAVE_FF23 |= _BIT0;
              #else
                          MCU_I2C_CHANNEL_CTRL_FF2B |= _BIT0;
                          MCU_I2C_SET_SLAVE_FF23 &= (~_BIT0);
              #endif
              
                      }
              
                  }
              #endif
                  COsdFxLoadText(ROW(19), COL(10), (GET_DDCCI_STATUS()), tOSDDDCCI_ON_OFF_STR);
                  ucOsdEventMsg = _SAVE_EE_SYSTEMDATA_MSG;
              }
              
              void COsdLeftDDCCIONOFF(void)
              {
              
              }
              
              void COsdRightDDCCIONOFF(void)
              {
              
              }
              
              void COsdExitDDCCIONOFF(void)
              {
                  COsdFxCloseWindow(WINNO(2));
                  COsdDispDrawInitWindow();
                  COsdFxLoadIcon(ROW(19), COL(3), tOSD_POINT_ICO);
                  ucOsdState = _MENU_DDCCI;
                  COsdFxChange1bitColor(ROW(19), COL(5), WIDTH(15), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              #endif
4264          
4265          #if(_VIVID_COLOR_FUCTION == _ON)
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuVividColor(void)
              {
                  COsdDispClearIcon(ROW(5), COL(0), 5, 20);
                  COsdDispClearText(ROW(5), COL(5), 20, 15);
              
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 72  

                  if(GET_WINDOW_SIZE() == _VIVID_WINDOW_SIZE_DISABLE)
                  {
                      COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(7), FGCOLOR(_CP_GRAY), BGCOLOR(_CP_BACKGRO
             -UND));
                  }
                  else if(GET_DCC_MODE() != _VIVID_DCC_DISABLE)
                  {
                      COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(4), FGCOLOR(_CP_GRAY), BGCOLOR(_CP_BACKGR
             -OUND));
                  }
              
                  COsdFxLoadText(ROW(19), COL(9), (GET_WINDOW_SIZE()), tVIVID_COLOR_TABLE[1]);
              
                  COsdFxLoadIcon(ROW(5), COL(7), tVIVID_COLOR_TABLE[0]);
                  COsdDispPenPoint(ROW(11), COL(3), ROW(5), COL(3), _MENU_COLOR_WINODW_SIZE);
                  COsdFxDrawWindow(XSTART(40), YSTART(300), XEND(250), YEND(400), tOSD_WINDOW2_STYLE);
                  COsdFxChangeWindowColor(COLOR00(_CP_BLACK), tOSD_WINDOW2_STYLE);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdLeftVividColor(void)
              {
              
              #if(_NON_LINEAR_SCALING_FUCTION == _ON)
                  COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_NONLINEAR_SCALING);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(10), (GET_NON_LINEAR_SCALING_STATUS()), tOSD_AUDIO_TABLE[2]);
              #elif(_ASPECT_RATIO_SUPPORT == _ON)
                  COsdDispPenPoint(ROW(5), COL(3), ROW(9), COL(3), _MENU_ASPECT_RATIO);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(8), (GET_DISP_RATIO()), tOSD_ASPECT_RATIO_TYPE_STR);
              #elif (_SRGB_COLOR_ENHANCE == _ON)
                  COsdDispPenPoint(ROW(5), COL(3), ROW(11), COL(3), _MENU_SRGB);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              // V012 Modify 20100304 Start
              // V012 Patch Note (1) : Add RGB/YUV color space convert function.
              #elif(_COLOR_FORMAT_CONVERT == _ON)
              if((GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR) || (GET_INPUTSOURCE_TYPE() == _SOURCE_VGA))
              {
                  COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_RGB_YUV);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              // V012 Modify 20100304 End
              
              #endif
              
              }
              
              void COsdRightVividColor(void)
              {
              // V012 Modify 20100304 Start
              // V012 Patch Note (1) : Add RGB/YUV color space convert function.
              /*
              #if(_SRGB_COLOR_ENHANCE == _ON)
              */
              #if(_COLOR_FORMAT_CONVERT == _ON)
              if((GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR) || (GET_INPUTSOURCE_TYPE() == _SOURCE_VGA))
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 73  

              {
                  COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_RGB_YUV);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              #elif(_SRGB_COLOR_ENHANCE == _ON)
              // V012 Modify 20100304 End
              
                  COsdDispPenPoint(ROW(5), COL(3), ROW(11), COL(3), _MENU_SRGB);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              #elif(_ASPECT_RATIO_SUPPORT == _ON)
              
                  COsdDispPenPoint(ROW(5), COL(3), ROW(9), COL(3), _MENU_ASPECT_RATIO);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(8), (GET_DISP_RATIO()), tOSD_ASPECT_RATIO_TYPE_STR);
              
              #elif(_NON_LINEAR_SCALING_FUCTION == _ON)
              
                  COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_NONLINEAR_SCALING);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(10), (GET_NON_LINEAR_SCALING_STATUS()), tOSD_AUDIO_TABLE[2]);
              
              #endif
              }
              
              void COsdExitVividColor(void)
              {
                  COsdFxCloseWindow(WINNO(2));
                  COsdDispDrawInitWindow();
                  ucOsdState = _MENU_AUTO_ADJUST_SETTING;
              
              // V012 Modify 20100304 Start
              // V012 Patch Note (1) : Add RGB/YUV color space convert function.
              /*
              #if(_AUDIO_SUPPORT == _ON)
                  COsdFxLoadIcon(ROW(15), COL(3), tOSD_POINT_ICO);
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(15), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #else
                  COsdFxLoadIcon(ROW(13), COL(3), tOSD_POINT_ICO);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(15), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #endif // End of #if(_AUDIO_SUPPORT==_ON)
              */
                  COsdFxLoadIcon(ROW(15), COL(3), tOSD_POINT_ICO);
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(15), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              // V012 Modify 20100304 End
              
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Window" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuColorWindow(void)
              {
                  BYTE temp;
              
                  COsdDispClearIcon(ROW(5), COL(0), 5, 20);
                  COsdDispClearText(ROW(5), COL(5), 20, 15);
              
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 74  

                  for(temp = 0; temp < 4; temp++)
                  {
                      COsdFxLoadText(ROW(5 + temp*2), COL(7), temp, tVIVID_COLOR_TABLE[1]);
                  }
              
                  COsdDispPenPoint(ROW(5), COL(3), ROW(5 + (GET_WINDOW_SIZE() * 2)), COL(3), (_MENU_COLOR_WINODW_SIZE_DI
             -SABLE + GET_WINDOW_SIZE()));
                  COsdFxDrawWindow(XSTART(40), YSTART(300), XEND(250), YEND(400), tOSD_WINDOW2_STYLE);
                  COsdFxChangeWindowColor(COLOR00(_CP_BLACK), tOSD_WINDOW2_STYLE);
                  COsdFxChange1bitColor(ROW(5 + (GET_WINDOW_SIZE() * 2)), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELL
             -OW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdLeftColorWindow(void)
              {
                  if(GET_WINDOW_SIZE() != _VIVID_WINDOW_SIZE_DISABLE)
                  {
                      COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_DCC_MODE);
                      COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK)
             -);
                      COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK
             -));
              
                      COsdDispClearText(ROW(19), COL(9), 16, 1);
                      COsdFxLoadText(ROW(19), COL(9), (GET_DCC_MODE()), tVIVID_COLOR_TABLE[3]);
                  }
              }
              
              void COsdRightColorWindow(void)
              {
                  if(GET_WINDOW_SIZE() != _VIVID_WINDOW_SIZE_DISABLE)
                  {
                      if(GET_DCC_MODE() == _VIVID_DCC_DISABLE)
                      {
              
                          COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_VIVID_BRIGHTNESS);
                          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BL
             -ACK));
                          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_
             -BLACK));
              
                          COsdDispClearText(ROW(19), COL(9), 16, 1);
                      }
                      else
                      {
                          COsdDispPenPoint(ROW(5), COL(3), ROW(9), COL(3), _MENU_ICM_MODE);
                          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BL
             -ACK));
                          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_B
             -LACK));
              
                          COsdDispClearText(ROW(19), COL(9), 16, 1);
                          COsdFxLoadText(ROW(19), COL(9), (GET_ICM_MODE()), tVIVID_COLOR_TABLE[3]);
                      }
                  }
              }
              
              void COsdExitColorWindow(void)
              {
                  COsdMenuSpecial();
              }
              
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 75  

              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Window Disable" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuColorWindowDisable(void)
              {
                  SET_WINDOW_SIZE(ucOsdState - _MENU_COLOR_WINODW_SIZE_DISABLE);
                  COsdDispVividColorHLWindow();
              }
              
              void COsdLeftColorWindowDisable(void)
              {
                  COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_COLOR_WINODW_SIZE_FULL);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightColorWindowDisable(void)
              {
                  COsdDispPenPoint(ROW(5), COL(3), ROW(11), COL(3), _MENU_COLOR_WINODW_SIZE_USER);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitColorWindowDisable(void)
              {
                  COsdMenuVividColor();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Demo Window Full" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuColorWindowFull(void)
              {
                  COsdMenuColorWindowDisable();
              }
              
              void COsdLeftColorWindowFull(void)
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_COLOR_WINODW_SIZE_DEMO);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightColorWindowFull(void)
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_COLOR_WINODW_SIZE_DISABLE);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitColorWindowFull(void)
              {
                  COsdExitColorWindowDisable();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Demo Window" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuColorWindowDemo(void)
              {
                  COsdMenuColorWindowDisable();
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 76  

              }
              
              void COsdLeftColorWindowDemo(void)
              {
                  COsdDispPenPoint(ROW(9), COL(3), ROW(11), COL(3), _MENU_COLOR_WINODW_SIZE_USER);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightColorWindowDemo(void)
              {
                  COsdDispPenPoint(ROW(9), COL(3), ROW(7), COL(3), _MENU_COLOR_WINODW_SIZE_FULL);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitColorWindowDemo(void)
              {
                  COsdExitColorWindowDisable();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Window User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuColorWindowUser(void)
              {
                  COsdMenuColorWindowDisable();
              
                  COsdDispClearIcon(ROW(5), COL(0), 5, 20);
                  COsdDispClearText(ROW(5), COL(5), 20, 15);
                  COsdFxLoadIcon(ROW(5), COL(7), tVIVID_COLOR_TABLE[2]);
                  COsdDispPenPoint(ROW(5), COL(3), ROW(5), COL(3), _MENU_COLOR_WINODW_SIZE_USER_HPOS);
                  COsdFxDrawWindow(XSTART(40), YSTART(300), XEND(250), YEND(400), tOSD_WINDOW2_STYLE);
                  COsdFxChangeWindowColor(COLOR00(_CP_BLACK), tOSD_WINDOW2_STYLE);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdLeftColorWindowUser(void)
              {
                  COsdDispPenPoint(ROW(11), COL(3), ROW(5), COL(3), _MENU_COLOR_WINODW_SIZE_DISABLE);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightColorWindowUser(void)
              {
                  COsdDispPenPoint(ROW(11), COL(3), ROW(9), COL(3), _MENU_COLOR_WINODW_SIZE_DEMO);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitColorWindowUser(void)
              {
                  COsdExitColorWindowDisable();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Window User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuColorWindowUserHPos(void)
              {
                  ucOsdState = _MENU_COLOR_WINODW_SIZE_USER_HPOS_ADJ;
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 77  

                  COsdDispFullSlider(ROW(19), COL(5), LENGTH(13), stOsdUserData.VividWinHPos, _VIVID_WINDOW_H_POSITION_M
             -AX, _VIVID_WINDOW_H_POSITION_MIN, _CP_WHITE, _CP_WHITE);
              }
              
              void COsdLeftColorWindowUserHPos(void)
              {
                  COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_COLOR_WINODW_SIZE_USER_VPOS);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightColorWindowUserHPos(void)
              {
                  COsdDispPenPoint(ROW(5), COL(3), ROW(11), COL(3), _MENU_COLOR_WINODW_SIZE_USER_VHEI);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitColorWindowUserHPos(void)
              {
                  BYTE temp;
                  COsdDispClearIcon(ROW(5), COL(0), 5, 20);
                  COsdDispClearText(ROW(5), COL(5), 20, 15);
              
                  for(temp = 0; temp < 4; temp++)
                  {
                      COsdFxLoadText(ROW(5 + temp*2), COL(7), temp, tVIVID_COLOR_TABLE[1]);
                  }
              
                  COsdDispPenPoint(ROW(11), COL(3), ROW(11), COL(3), _MENU_COLOR_WINODW_SIZE_USER);
                  COsdFxDrawWindow(XSTART(40), YSTART(300), XEND(250), YEND(400), tOSD_WINDOW2_STYLE);
                  COsdFxChangeWindowColor(COLOR00(_CP_BLACK), tOSD_WINDOW2_STYLE);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Window User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuColorWindowUserHPosAdj(void)
              {
                  ucOsdState = _MENU_COLOR_WINODW_SIZE_USER_HPOS;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 20, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              void COsdLeftColorWindowUserHPosAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividWinHPos = COsdFxDetOverRange(stOsdUserData.VividWinHPos, _VIVID_WINDOW_H_POSITION_M
             -AX, _VIVID_WINDOW_H_POSITION_MIN, _DET_OVERRANGE_MAX);
                  COsdDispFullSlider(ROW(19), COL(5), LENGTH(13), stOsdUserData.VividWinHPos, _VIVID_WINDOW_H_POSITION_M
             -AX, _VIVID_WINDOW_H_POSITION_MIN, _CP_WHITE, _CP_WHITE);
                  CAdjustHLWindowHV(stOsdUserData.VividWinHPos, stOsdUserData.VividWinHWidth, stOsdUserData.VividWinVPos
             -, stOsdUserData.VividWinVHeight);
              }
              
              void COsdRightColorWindowUserHPosAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividWinHPos = COsdFxDetOverRange(stOsdUserData.VividWinHPos, _VIVID_WINDOW_H_POSITION_M
             -AX, _VIVID_WINDOW_H_POSITION_MIN, _DET_OVERRANGE_MIN);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 78  

                  COsdDispFullSlider(ROW(19), COL(5), LENGTH(13), stOsdUserData.VividWinHPos, _VIVID_WINDOW_H_POSITION_M
             -AX, _VIVID_WINDOW_H_POSITION_MIN, _CP_WHITE, _CP_WHITE);
                  CAdjustHLWindowHV(stOsdUserData.VividWinHPos, stOsdUserData.VividWinHWidth, stOsdUserData.VividWinVPos
             -, stOsdUserData.VividWinVHeight);
              }
              
              void COsdExitColorWindowUserHPosAdj(void)
              {
                  COsdMenuColorWindowUserHPosAdj();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Window User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuColorWindowUserVPos(void)
              {
                  ucOsdState = _MENU_COLOR_WINODW_SIZE_USER_VPOS_ADJ;
                  COsdDispFullSlider(ROW(19), COL(5), LENGTH(13), stOsdUserData.VividWinVPos, _VIVID_WINDOW_V_POSITION_M
             -AX, _VIVID_WINDOW_V_POSITION_MIN, _CP_WHITE, _CP_WHITE);
              }
              
              void COsdLeftColorWindowUserVPos(void)
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_COLOR_WINODW_SIZE_USER_HWID);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightColorWindowUserVPos(void)
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_COLOR_WINODW_SIZE_USER_HPOS);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitColorWindowUserVPos(void)
              {
                  COsdExitColorWindowUserHPos();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Window User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuColorWindowUserVPosAdj(void)
              {
                  ucOsdState = _MENU_COLOR_WINODW_SIZE_USER_VPOS;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 20, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              void COsdLeftColorWindowUserVPosAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividWinVPos = COsdFxDetOverRange(stOsdUserData.VividWinVPos, _VIVID_WINDOW_V_POSITION_M
             -AX, _VIVID_WINDOW_V_POSITION_MIN, _DET_OVERRANGE_MAX);
                  COsdDispFullSlider(ROW(19), COL(5), LENGTH(13), stOsdUserData.VividWinVPos, _VIVID_WINDOW_V_POSITION_M
             -AX, _VIVID_WINDOW_V_POSITION_MIN, _CP_WHITE, _CP_WHITE);
                  CAdjustHLWindowHV(stOsdUserData.VividWinHPos, stOsdUserData.VividWinHWidth, stOsdUserData.VividWinVPos
             -, stOsdUserData.VividWinVHeight);
              }
              
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 79  

              void COsdRightColorWindowUserVPosAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividWinVPos = COsdFxDetOverRange(stOsdUserData.VividWinVPos, _VIVID_WINDOW_V_POSITION_M
             -AX, _VIVID_WINDOW_V_POSITION_MIN, _DET_OVERRANGE_MIN);
                  COsdDispFullSlider(ROW(19), COL(5), LENGTH(13), stOsdUserData.VividWinVPos, _VIVID_WINDOW_V_POSITION_M
             -AX, _VIVID_WINDOW_V_POSITION_MIN, _CP_WHITE, _CP_WHITE);
                  CAdjustHLWindowHV(stOsdUserData.VividWinHPos, stOsdUserData.VividWinHWidth, stOsdUserData.VividWinVPos
             -, stOsdUserData.VividWinVHeight);
              }
              
              void COsdExitColorWindowUserVPosAdj(void)
              {
                  COsdMenuColorWindowUserVPosAdj();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Window User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuColorWindowUserHWid(void)
              {
                  ucOsdState = _MENU_COLOR_WINODW_SIZE_USER_HWID_ADJ;
                  COsdDispFullSlider(ROW(19), COL(5), LENGTH(13), stOsdUserData.VividWinHWidth, _VIVID_WINDOW_H_WIDTH_MA
             -X, _VIVID_WINDOW_H_WIDTH_MIN, _CP_WHITE, _CP_WHITE);
              }
              
              void COsdLeftColorWindowUserHWid(void)
              {
                  COsdDispPenPoint(ROW(9), COL(3), ROW(11), COL(3), _MENU_COLOR_WINODW_SIZE_USER_VHEI);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightColorWindowUserHWid(void)
              {
                  COsdDispPenPoint(ROW(9), COL(3), ROW(7), COL(3), _MENU_COLOR_WINODW_SIZE_USER_VPOS);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitColorWindowUserHWid(void)
              {
                  COsdExitColorWindowUserHPos();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Window User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuColorWindowUserHWidAdj(void)
              {
                  ucOsdState = _MENU_COLOR_WINODW_SIZE_USER_HWID;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 20, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              void COsdLeftColorWindowUserHWidAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividWinHWidth = COsdFxDetOverRange(stOsdUserData.VividWinHWidth, _VIVID_WINDOW_H_WIDTH_
             -MAX, _VIVID_WINDOW_H_WIDTH_MIN, _DET_OVERRANGE_MAX);
                  COsdDispFullSlider(ROW(19), COL(5), LENGTH(13), stOsdUserData.VividWinHWidth, _VIVID_WINDOW_H_WIDTH_MA
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 80  

             -X, _VIVID_WINDOW_H_WIDTH_MIN, _CP_WHITE, _CP_WHITE);
                  CAdjustHLWindowHV(stOsdUserData.VividWinHPos, stOsdUserData.VividWinHWidth, stOsdUserData.VividWinVPos
             -, stOsdUserData.VividWinVHeight);
              }
              
              void COsdRightColorWindowUserHWidAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividWinHWidth = COsdFxDetOverRange(stOsdUserData.VividWinHWidth, _VIVID_WINDOW_H_WIDTH_
             -MAX, _VIVID_WINDOW_H_WIDTH_MIN, _DET_OVERRANGE_MIN);
                  COsdDispFullSlider(ROW(19), COL(5), LENGTH(13), stOsdUserData.VividWinHWidth, _VIVID_WINDOW_H_WIDTH_MA
             -X, _VIVID_WINDOW_H_WIDTH_MIN, _CP_WHITE, _CP_WHITE);
                  CAdjustHLWindowHV(stOsdUserData.VividWinHPos, stOsdUserData.VividWinHWidth, stOsdUserData.VividWinVPos
             -, stOsdUserData.VividWinVHeight);
              }
              
              void COsdExitColorWindowUserHWidAdj(void)
              {
                  COsdMenuColorWindowUserHWidAdj();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Window User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuColorWindowUserVHei(void)
              {
                  ucOsdState = _MENU_COLOR_WINODW_SIZE_USER_VHEI_ADJ;
                  COsdDispFullSlider(ROW(19), COL(5), LENGTH(13), stOsdUserData.VividWinVHeight, _VIVID_WINDOW_V_HEIGHT_
             -MAX, _VIVID_WINDOW_V_HEIGHT_MIN, _CP_WHITE, _CP_WHITE);
              }
              
              void COsdLeftColorWindowUserVHei(void)
              {
                  COsdDispPenPoint(ROW(11), COL(3), ROW(5), COL(3), _MENU_COLOR_WINODW_SIZE_USER_HPOS);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightColorWindowUserVHei(void)
              {
                  COsdDispPenPoint(ROW(11), COL(3), ROW(9), COL(3), _MENU_COLOR_WINODW_SIZE_USER_HWID);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitColorWindowUserVHei(void)
              {
                  COsdExitColorWindowUserHPos();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Window User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuColorWindowUserVHeiAdj(void)
              {
                  ucOsdState = _MENU_COLOR_WINODW_SIZE_USER_VHEI;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 20, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              void COsdLeftColorWindowUserVHeiAdj(void)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 81  

              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividWinVHeight = COsdFxDetOverRange(stOsdUserData.VividWinVHeight, _VIVID_WINDOW_V_HEIG
             -HT_MAX, _VIVID_WINDOW_V_HEIGHT_MIN, _DET_OVERRANGE_MAX);
                  COsdDispFullSlider(ROW(19), COL(5), LENGTH(13), stOsdUserData.VividWinVHeight, _VIVID_WINDOW_V_HEIGHT_
             -MAX, _VIVID_WINDOW_V_HEIGHT_MIN, _CP_WHITE, _CP_WHITE);
                  CAdjustHLWindowHV(stOsdUserData.VividWinHPos, stOsdUserData.VividWinHWidth, stOsdUserData.VividWinVPos
             -, stOsdUserData.VividWinVHeight);
              }
              
              void COsdRightColorWindowUserVHeiAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividWinVHeight = COsdFxDetOverRange(stOsdUserData.VividWinVHeight, _VIVID_WINDOW_V_HEIG
             -HT_MAX, _VIVID_WINDOW_V_HEIGHT_MIN, _DET_OVERRANGE_MIN);
                  COsdDispFullSlider(ROW(19), COL(5), LENGTH(13), stOsdUserData.VividWinVHeight, _VIVID_WINDOW_V_HEIGHT_
             -MAX, _VIVID_WINDOW_V_HEIGHT_MIN, _CP_WHITE, _CP_WHITE);
                  CAdjustHLWindowHV(stOsdUserData.VividWinHPos, stOsdUserData.VividWinHWidth, stOsdUserData.VividWinVPos
             -, stOsdUserData.VividWinVHeight);
              }
              
              void COsdExitColorWindowUserVHeiAdj(void)
              {
                  COsdMenuColorWindowUserVHeiAdj();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color DCC Mode" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuDCCMode(void)
              {
                  BYTE temp;
              
                  COsdDispClearIcon(ROW(5), COL(0), 5, 20);
                  COsdDispClearText(ROW(5), COL(5), 20, 15);
              
                  for(temp = 0; temp < 4; temp++)
                  {
                      COsdFxLoadText(ROW(5 + temp*2), COL(7), temp, tVIVID_COLOR_TABLE[3]);
                  }
              
                  COsdDispPenPoint(ROW(5), COL(3), ROW(5 + (GET_DCC_MODE() * 2)), COL(3), (_MENU_DCC_MODE_DISABLE + GET_
             -DCC_MODE()));
                  COsdFxDrawWindow(XSTART(40), YSTART(300), XEND(250), YEND(400), tOSD_WINDOW2_STYLE);
                  COsdFxChangeWindowColor(COLOR00(_CP_BLACK), tOSD_WINDOW2_STYLE);
                  COsdFxChange1bitColor(ROW(5 + (GET_DCC_MODE() * 2)), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW)
             -, BGCOLOR(_CP_BLACK));
              }
              
              void COsdLeftDCCMode(void)
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_ICM_MODE);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
                  COsdDispClearText(ROW(19), COL(9), 16, 1);
                  COsdFxLoadText(ROW(19), COL(9), (GET_ICM_MODE()), tVIVID_COLOR_TABLE[3]);
              }
              
              void COsdRightDCCMode(void)
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_COLOR_WINODW_SIZE);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 82  

                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
                  COsdDispClearText(ROW(19), COL(9), 16, 1);
                  COsdFxLoadText(ROW(19), COL(9), (GET_WINDOW_SIZE()), tVIVID_COLOR_TABLE[1]);
              }
              
              void COsdExitDCCMode(void)
              {
                  COsdMenuSpecial();
              }
              
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color DCC Mode Disable" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuDCCModeDisable(void)
              {
                  SET_DCC_MODE(ucOsdState - _MENU_DCC_MODE_DISABLE);
                  COsdDispVividColor();
              }
              
              void COsdLeftDCCModeDisable(void)
              {
                  COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_DCC_MODE_MOVIE);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightDCCModeDisable(void)
              {
                  COsdDispPenPoint(ROW(5), COL(3), ROW(11), COL(3), _MENU_DCC_MODE_GAME);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitDCCModeDisable(void)
              {
                  COsdDispClearIcon(ROW(5), COL(0), 5, 20);
                  COsdDispClearText(ROW(5), COL(5), 20, 15);
              
                  if(GET_DCC_MODE() != _VIVID_DCC_DISABLE)
                  {
                      COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(4), FGCOLOR(_CP_GRAY), BGCOLOR(_CP_BACKGR
             -OUND));
                  }
              
                  COsdFxLoadText(ROW(19), COL(9), (GET_DCC_MODE()), tVIVID_COLOR_TABLE[3]);
                  COsdFxLoadIcon(ROW(5), COL(7), tVIVID_COLOR_TABLE[0]);
                  COsdDispPenPoint(ROW(7), COL(3), ROW(7), COL(3), _MENU_DCC_MODE);
                  COsdFxDrawWindow(XSTART(40), YSTART(300), XEND(250), YEND(400), tOSD_WINDOW2_STYLE);
                  COsdFxChangeWindowColor(COLOR00(_CP_BLACK), tOSD_WINDOW2_STYLE);
              
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color DCC Mode Movie" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuDCCModeMovie(void)
              {
                  COsdMenuDCCModeDisable();
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 83  

              }
              
              void COsdLeftDCCModeMovie(void)
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_DCC_MODE_PHOTO);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightDCCModeMovie(void)
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_DCC_MODE_DISABLE);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitDCCModeMovie(void)
              {
                  COsdExitDCCModeDisable();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color DCC Mode Photo" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuDCCModePhoto(void)
              {
                  COsdMenuDCCModeDisable();
              }
              
              void COsdLeftDCCModePhoto(void)
              {
                  COsdDispPenPoint(ROW(9), COL(3), ROW(11), COL(3), _MENU_DCC_MODE_GAME);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightDCCModePhoto(void)
              {
                  COsdDispPenPoint(ROW(9), COL(3), ROW(7), COL(3), _MENU_DCC_MODE_MOVIE);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitDCCModePhoto(void)
              {
                  COsdExitDCCModeDisable();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color DCC Mode Game" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuDCCModeGame(void)
              {
                  COsdMenuDCCModeDisable();
              }
              
              void COsdLeftDCCModeGame(void)
              {
                  COsdDispPenPoint(ROW(11), COL(3), ROW(5), COL(3), _MENU_DCC_MODE_DISABLE);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 84  

              
              void COsdRightDCCModeGame(void)
              {
                  COsdDispPenPoint(ROW(11), COL(3), ROW(9), COL(3), _MENU_DCC_MODE_PHOTO);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitDCCModeGame(void)
              {
                  COsdExitDCCModeDisable();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMMode(void)
              {
                  BYTE temp;
              
                  COsdDispClearIcon(ROW(5), COL(0), 5, 20);
                  COsdDispClearText(ROW(5), COL(5), 20, 15);
              
                  for(temp = 0; temp < 5; temp++)
                  {
                      COsdFxLoadText(ROW(5 + temp*2), COL(7), temp, tVIVID_COLOR_TABLE[3]);
                  }
              
                  COsdDispPenPoint(ROW(5), COL(3), ROW(5 + (GET_ICM_MODE() * 2)), COL(3), (_MENU_ICM_MODE_DISABLE + GET_
             -ICM_MODE()));
                  COsdFxDrawWindow(XSTART(40), YSTART(300), XEND(250), YEND(400), tOSD_WINDOW2_STYLE);
                  COsdFxChangeWindowColor(COLOR00(_CP_BLACK), tOSD_WINDOW2_STYLE);
                  COsdFxChange1bitColor(ROW(5 + (GET_ICM_MODE() * 2)), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW)
             -, BGCOLOR(_CP_BLACK));
              }
              
              void COsdLeftICMMode(void)
              {
                  if(GET_DCC_MODE() == _VIVID_DCC_DISABLE)
                  {
                      COsdDispPenPoint(ROW(9), COL(3), ROW(11), COL(3), _MENU_VIVID_CONTRAST);
                      COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK)
             -);
                      COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLAC
             -K));
              
                      COsdDispClearText(ROW(19), COL(9), 16, 1);
                  }
                  else
                  {
                      COsdDispPenPoint(ROW(9), COL(3), ROW(5), COL(3), _MENU_COLOR_WINODW_SIZE);
                      COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK)
             -);
                      COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK
             -));
              
                      COsdDispClearText(ROW(19), COL(9), 16, 1);
                      COsdFxLoadText(ROW(19), COL(9), (GET_WINDOW_SIZE()), tVIVID_COLOR_TABLE[1]);
                  }
              }
              
              void COsdRightICMMode(void)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 85  

              {
                  COsdDispPenPoint(ROW(9), COL(3), ROW(7), COL(3), _MENU_DCC_MODE);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
                  COsdDispClearText(ROW(19), COL(9), 16, 1);
                  COsdFxLoadText(ROW(19), COL(9), (GET_DCC_MODE()), tVIVID_COLOR_TABLE[3]);
              }
              
              void COsdExitICMMode(void)
              {
                  COsdMenuSpecial();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode Disable" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeDisable(void)
              {
                  SET_ICM_MODE(ucOsdState - _MENU_ICM_MODE_DISABLE);
                  COsdDispVividColor();
              }
              
              void COsdLeftICMModeDisable(void)
              {
                  COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_ICM_MODE_MOVIE);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightICMModeDisable(void)
              {
                  COsdDispPenPoint(ROW(5), COL(3), ROW(13), COL(3), _MENU_ICM_MODE_USER);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitICMModeDisable(void)
              {
                  COsdDispClearIcon(ROW(5), COL(0), 5, 20);
                  COsdDispClearText(ROW(5), COL(5), 20, 15);
              
                  if(GET_DCC_MODE() != _VIVID_DCC_DISABLE)
                  {
                      COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(4), FGCOLOR(_CP_GRAY), BGCOLOR(_CP_BACKGR
             -OUND));
                  }
              
                  COsdFxLoadText(ROW(19), COL(9), (GET_ICM_MODE()), tVIVID_COLOR_TABLE[3]);
                  COsdFxLoadIcon(ROW(5), COL(7), tVIVID_COLOR_TABLE[0]);
                  COsdDispPenPoint(ROW(9), COL(3), ROW(9), COL(3), _MENU_ICM_MODE);
                  COsdFxDrawWindow(XSTART(40), YSTART(300), XEND(250), YEND(400), tOSD_WINDOW2_STYLE);
                  COsdFxChangeWindowColor(COLOR00(_CP_BLACK), tOSD_WINDOW2_STYLE);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode Movie" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeMovie(void)
              {
                  COsdMenuICMModeDisable();
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 86  

              }
              
              void COsdLeftICMModeMovie(void)
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_ICM_MODE_PHOTO);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightICMModeMovie(void)
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_ICM_MODE_DISABLE);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitICMModeMovie(void)
              {
                  COsdExitICMModeDisable();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode Photo" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModePhoto(void)
              {
                  COsdMenuICMModeDisable();
              }
              
              void COsdLeftICMModePhoto(void)
              {
                  COsdDispPenPoint(ROW(9), COL(3), ROW(11), COL(3), _MENU_ICM_MODE_GAME);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightICMModePhoto(void)
              {
                  COsdDispPenPoint(ROW(9), COL(3), ROW(7), COL(3), _MENU_ICM_MODE_MOVIE);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitICMModePhoto(void)
              {
                  COsdExitICMModeDisable();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode Game" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeGame(void)
              {
                  COsdMenuICMModeDisable();
              }
              
              void COsdLeftICMModeGame(void)
              {
                  COsdDispPenPoint(ROW(11), COL(3), ROW(13), COL(3), _MENU_ICM_MODE_USER);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 87  

              
              void COsdRightICMModeGame(void)
              {
                  COsdDispPenPoint(ROW(11), COL(3), ROW(9), COL(3), _MENU_ICM_MODE_PHOTO);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitICMModeGame(void)
              {
                  COsdExitICMModeDisable();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeUser(void)
              {
                  BYTE temp;
              
                  COsdMenuICMModeDisable();
              
                  CAdjustVividHueSat(_RED, stOsdUserData.VividICMRedHue, stOsdUserData.VividICMRedSat);
                  CAdjustVividHueSat(_GREEN, stOsdUserData.VividICMGreenHue, stOsdUserData.VividICMGreenSat);
                  CAdjustVividHueSat(_BLUE, stOsdUserData.VividICMBlueHue, stOsdUserData.VividICMBlueSat);
              
                  COsdDispClearIcon(ROW(5), COL(0), 5, 20);
                  COsdDispClearText(ROW(5), COL(5), 20, 15);
              
                  for(temp = 0; temp < 6; temp++)
                  {
                      COsdFxLoadText(ROW(5 + temp*2), COL(7), (temp + 5), tVIVID_COLOR_TABLE[3]);
                  }
              
                  COsdDispPenPoint(ROW(5), COL(3), ROW(5), COL(3), (_MENU_ICM_MODE_USER_RED_HUE));
                  COsdFxDrawWindow(XSTART(40), YSTART(300), XEND(250), YEND(400), tOSD_WINDOW2_STYLE);
                  COsdFxChangeWindowColor(COLOR00(_CP_BLACK), tOSD_WINDOW2_STYLE);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              }
              
              void COsdLeftICMModeUser(void)
              {
                  COsdDispPenPoint(ROW(13), COL(3), ROW(5), COL(3), _MENU_ICM_MODE_DISABLE);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightICMModeUser(void)
              {
                  COsdDispPenPoint(ROW(13), COL(3), ROW(11), COL(3), _MENU_ICM_MODE_GAME);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitICMModeUser(void)
              {
                  COsdExitICMModeDisable();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode User" Operation
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 88  

              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeUserRedHue(void)
              {
                  ucOsdState = _MENU_ICM_MODE_USER_RED_HUE_ADJ;
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMRedHue, _ICM_RED_HUE_MAX, _ICM_RED_HUE_M
             -IN, _CP_RED, _CP_WHITE);
              }
              
              void COsdLeftICMModeUserRedHue(void)
              {
                  COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_ICM_MODE_USER_RED_SAT);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightICMModeUserRedHue(void)
              {
                  COsdDispPenPoint(ROW(5), COL(3), ROW(15), COL(3), _MENU_ICM_MODE_USER_BLUE_SAT);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitICMModeUserRedHue(void)
              {
                  COsdMenuICMMode();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeUserRedHueAdj(void)
              {
                  ucOsdState = _MENU_ICM_MODE_USER_RED_HUE;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 20, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              void COsdLeftICMModeUserRedHueAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividICMRedHue = COsdFxDetOverRange(stOsdUserData.VividICMRedHue, _ICM_RED_HUE_MAX, _ICM
             -_RED_HUE_MIN, _DET_OVERRANGE_MAX);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMRedHue, _ICM_RED_HUE_MAX, _ICM_RED_HUE_M
             -IN, _CP_RED, _CP_WHITE);
                  CAdjustVividHueSat(_RED, stOsdUserData.VividICMRedHue, stOsdUserData.VividICMRedSat);
              }
              
              void COsdRightICMModeUserRedHueAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividICMRedHue = COsdFxDetOverRange(stOsdUserData.VividICMRedHue, _ICM_RED_HUE_MAX, _ICM
             -_RED_HUE_MIN, _DET_OVERRANGE_MIN);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMRedHue, _ICM_RED_HUE_MAX, _ICM_RED_HUE_M
             -IN, _CP_RED, _CP_WHITE);
                  CAdjustVividHueSat(_RED, stOsdUserData.VividICMRedHue, stOsdUserData.VividICMRedSat);
              }
              
              void COsdExitICMModeUserRedHueAdj(void)
              {
                  COsdMenuICMModeUserRedHueAdj();
              }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 89  

              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeUserRedSat(void)
              {
                  ucOsdState = _MENU_ICM_MODE_USER_RED_SAT_ADJ;
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMRedSat, _ICM_RED_SAT_MAX, _ICM_RED_SAT_M
             -IN, _CP_RED, _CP_WHITE);
              }
              
              void COsdLeftICMModeUserRedSat(void)
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_ICM_MODE_USER_GREEN_HUE);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightICMModeUserRedSat(void)
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_ICM_MODE_USER_RED_HUE);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitICMModeUserRedSat(void)
              {
                  COsdExitICMModeUserRedHue();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeUserRedSatAdj(void)
              {
                  ucOsdState = _MENU_ICM_MODE_USER_RED_SAT;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 20, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              void COsdLeftICMModeUserRedSatAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividICMRedSat = COsdFxDetOverRange(stOsdUserData.VividICMRedSat, _ICM_RED_SAT_MAX, _ICM
             -_RED_SAT_MIN, _DET_OVERRANGE_MAX);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMRedSat, _ICM_RED_SAT_MAX, _ICM_RED_SAT_M
             -IN, _CP_RED, _CP_WHITE);
                  CAdjustVividHueSat(_RED, stOsdUserData.VividICMRedHue, stOsdUserData.VividICMRedSat);
              }
              
              void COsdRightICMModeUserRedSatAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividICMRedSat = COsdFxDetOverRange(stOsdUserData.VividICMRedSat, _ICM_RED_SAT_MAX, _ICM
             -_RED_SAT_MIN, _DET_OVERRANGE_MIN);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMRedSat, _ICM_RED_SAT_MAX, _ICM_RED_SAT_M
             -IN, _CP_RED, _CP_WHITE);
                  CAdjustVividHueSat(_RED, stOsdUserData.VividICMRedHue, stOsdUserData.VividICMRedSat);
              }
              
              void COsdExitICMModeUserRedSatAdj(void)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 90  

              {
                  COsdMenuICMModeUserRedSatAdj();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeUserGreenHue(void)
              {
                  ucOsdState = _MENU_ICM_MODE_USER_GREEN_HUE_ADJ;
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMGreenHue, _ICM_GREEN_HUE_MAX, _ICM_GREEN
             -_HUE_MIN, _CP_GREEN, _CP_WHITE);
              }
              
              void COsdLeftICMModeUserGreenHue(void)
              {
                  COsdDispPenPoint(ROW(9), COL(3), ROW(11), COL(3), _MENU_ICM_MODE_USER_GREEN_SAT);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightICMModeUserGreenHue(void)
              {
                  COsdDispPenPoint(ROW(9), COL(3), ROW(7), COL(3), _MENU_ICM_MODE_USER_RED_SAT);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitICMModeUserGreenHue(void)
              {
                  COsdExitICMModeUserRedHue();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeUserGreenHueAdj(void)
              {
                  ucOsdState = _MENU_ICM_MODE_USER_GREEN_HUE;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 20, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              void COsdLeftICMModeUserGreenHueAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividICMGreenHue = COsdFxDetOverRange(stOsdUserData.VividICMGreenHue, _ICM_GREEN_HUE_MAX
             -, _ICM_GREEN_HUE_MIN, _DET_OVERRANGE_MAX);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMGreenHue, _ICM_GREEN_HUE_MAX, _ICM_GREEN
             -_HUE_MIN, _CP_GREEN, _CP_WHITE);
                  CAdjustVividHueSat(_GREEN, stOsdUserData.VividICMGreenHue, stOsdUserData.VividICMGreenSat);
              }
              
              void COsdRightICMModeUserGreenHueAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividICMGreenHue = COsdFxDetOverRange(stOsdUserData.VividICMGreenHue, _ICM_GREEN_HUE_MAX
             -, _ICM_GREEN_HUE_MIN, _DET_OVERRANGE_MIN);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMGreenHue, _ICM_GREEN_HUE_MAX, _ICM_GREEN
             -_HUE_MIN, _CP_GREEN, _CP_WHITE);
                  CAdjustVividHueSat(_GREEN, stOsdUserData.VividICMGreenHue, stOsdUserData.VividICMGreenSat);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 91  

              }
              
              void COsdExitICMModeUserGreenHueAdj(void)
              {
                  COsdMenuICMModeUserGreenHueAdj();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeUserGreenSat(void)
              {
                  ucOsdState = _MENU_ICM_MODE_USER_GREEN_SAT_ADJ;
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMGreenSat, _ICM_GREEN_SAT_MAX, _ICM_GREEN
             -_SAT_MIN, _CP_GREEN, _CP_WHITE);
              }
              
              void COsdLeftICMModeUserGreenSat(void)
              {
                  COsdDispPenPoint(ROW(11), COL(3), ROW(13), COL(3), _MENU_ICM_MODE_USER_BLUE_HUE);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightICMModeUserGreenSat(void)
              {
                  COsdDispPenPoint(ROW(11), COL(3), ROW(9), COL(3), _MENU_ICM_MODE_USER_GREEN_HUE);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitICMModeUserGreenSat(void)
              {
                  COsdExitICMModeUserRedHue();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeUserGreenSatAdj(void)
              {
                  ucOsdState = _MENU_ICM_MODE_USER_GREEN_SAT;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 20, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              void COsdLeftICMModeUserGreenSatAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividICMGreenSat = COsdFxDetOverRange(stOsdUserData.VividICMGreenSat, _ICM_GREEN_SAT_MAX
             -, _ICM_GREEN_SAT_MIN, _DET_OVERRANGE_MAX);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMGreenSat, _ICM_GREEN_SAT_MAX, _ICM_GREEN
             -_SAT_MIN, _CP_GREEN, _CP_WHITE);
                  CAdjustVividHueSat(_GREEN, stOsdUserData.VividICMGreenHue, stOsdUserData.VividICMGreenSat);
              }
              
              void COsdRightICMModeUserGreenSatAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividICMGreenSat = COsdFxDetOverRange(stOsdUserData.VividICMGreenSat, _ICM_GREEN_SAT_MAX
             -, _ICM_GREEN_SAT_MIN, _DET_OVERRANGE_MIN);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 92  

                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMGreenSat, _ICM_GREEN_SAT_MAX, _ICM_GREEN
             -_SAT_MIN, _CP_GREEN, _CP_WHITE);
                  CAdjustVividHueSat(_GREEN, stOsdUserData.VividICMGreenHue, stOsdUserData.VividICMGreenSat);
              }
              
              void COsdExitICMModeUserGreenSatAdj(void)
              {
                  COsdMenuICMModeUserGreenSatAdj();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeUserBlueHue(void)
              {
                  ucOsdState = _MENU_ICM_MODE_USER_BLUE_HUE_ADJ;
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMBlueHue, _ICM_BLUE_HUE_MAX, _ICM_BLUE_HU
             -E_MIN, _CP_BLUE, _CP_WHITE);
              }
              
              void COsdLeftICMModeUserBlueHue(void)
              {
                  COsdDispPenPoint(ROW(13), COL(3), ROW(15), COL(3), _MENU_ICM_MODE_USER_BLUE_SAT);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightICMModeUserBlueHue(void)
              {
                  COsdDispPenPoint(ROW(13), COL(3), ROW(11), COL(3), _MENU_ICM_MODE_USER_GREEN_SAT);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitICMModeUserBlueHue(void)
              {
                  COsdExitICMModeUserRedHue();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeUserBlueHueAdj(void)
              {
                  ucOsdState = _MENU_ICM_MODE_USER_BLUE_HUE;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 20, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              void COsdLeftICMModeUserBlueHueAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividICMBlueHue = COsdFxDetOverRange(stOsdUserData.VividICMBlueHue, _ICM_BLUE_HUE_MAX, _
             -ICM_BLUE_HUE_MIN, _DET_OVERRANGE_MAX);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMBlueHue, _ICM_BLUE_HUE_MAX, _ICM_BLUE_HU
             -E_MIN, _CP_BLUE, _CP_WHITE);
                  CAdjustVividHueSat(_BLUE, stOsdUserData.VividICMBlueHue, stOsdUserData.VividICMBlueSat);
              }
              
              void COsdRightICMModeUserBlueHueAdj(void)
              {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 93  

                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividICMBlueHue = COsdFxDetOverRange(stOsdUserData.VividICMBlueHue, _ICM_BLUE_HUE_MAX, _
             -ICM_BLUE_HUE_MIN, _DET_OVERRANGE_MIN);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMBlueHue, _ICM_BLUE_HUE_MAX, _ICM_BLUE_HU
             -E_MIN, _CP_BLUE, _CP_WHITE);
                  CAdjustVividHueSat(_BLUE, stOsdUserData.VividICMBlueHue, stOsdUserData.VividICMBlueSat);
              }
              
              void COsdExitICMModeUserBlueHueAdj(void)
              {
                  COsdMenuICMModeUserBlueHueAdj();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeUserBlueSat(void)
              {
                  ucOsdState = _MENU_ICM_MODE_USER_BLUE_SAT_ADJ;
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMBlueSat, _ICM_BLUE_SAT_MAX, _ICM_BLUE_SA
             -T_MIN, _CP_BLUE, _CP_WHITE);
              }
              
              void COsdLeftICMModeUserBlueSat(void)
              {
                  COsdDispPenPoint(ROW(15), COL(3), ROW(5), COL(3), _MENU_ICM_MODE_USER_RED_HUE);
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightICMModeUserBlueSat(void)
              {
                  COsdDispPenPoint(ROW(15), COL(3), ROW(13), COL(3), _MENU_ICM_MODE_USER_BLUE_HUE);
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitICMModeUserBlueSat(void)
              {
                  COsdExitICMModeUserRedHue();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color ICM Mode User" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuICMModeUserBlueSatAdj(void)
              {
                  ucOsdState = _MENU_ICM_MODE_USER_BLUE_SAT;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 20, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              void COsdLeftICMModeUserBlueSatAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividICMBlueSat = COsdFxDetOverRange(stOsdUserData.VividICMBlueSat, _ICM_BLUE_SAT_MAX, _
             -ICM_BLUE_SAT_MIN, _DET_OVERRANGE_MAX);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMBlueSat, _ICM_BLUE_SAT_MAX, _ICM_BLUE_SA
             -T_MIN, _CP_BLUE, _CP_WHITE);
                  CAdjustVividHueSat(_BLUE, stOsdUserData.VividICMBlueHue, stOsdUserData.VividICMBlueSat);
              }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 94  

              
              void COsdRightICMModeUserBlueSatAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividICMBlueSat = COsdFxDetOverRange(stOsdUserData.VividICMBlueSat, _ICM_BLUE_SAT_MAX, _
             -ICM_BLUE_SAT_MIN, _DET_OVERRANGE_MIN);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividICMBlueSat, _ICM_BLUE_SAT_MAX, _ICM_BLUE_SA
             -T_MIN, _CP_BLUE, _CP_WHITE);
                  CAdjustVividHueSat(_BLUE, stOsdUserData.VividICMBlueHue, stOsdUserData.VividICMBlueSat);
              }
              
              void COsdExitICMModeUserBlueSatAdj(void)
              {
                  COsdMenuICMModeUserBlueSatAdj();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Contrast" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuVividContrast(void)
              {
                  ucOsdState = _MENU_VIVID_CONTRAST_ADJ;
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividContrast, _VIVID_CONTRAST_MAX, _VIVID_CONTR
             -AST_MIN, _CP_WHITE, _CP_WHITE);
              }
              
              void COsdLeftVividContrast(void)
              {
                  COsdDispPenPoint(ROW(11), COL(3), ROW(13), COL(3), _MENU_VIVID_BRIGHTNESS);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdRightVividContrast(void)
              {
                  COsdDispPenPoint(ROW(11), COL(3), ROW(9), COL(3), _MENU_ICM_MODE);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(9), (GET_ICM_MODE()), tVIVID_COLOR_TABLE[3]);
              }
              
              void COsdExitVividContrast(void)
              {
                  COsdMenuSpecial();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Contrast Adjust" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuVividContrastAdj(void)
              {
                  ucOsdState = _MENU_VIVID_CONTRAST;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 20, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              void COsdLeftVividContrastAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividContrast = COsdFxDetOverRange(stOsdUserData.VividContrast, _VIVID_CONTRAST_MAX, _VI
             -VID_CONTRAST_MIN, _DET_OVERRANGE_MAX);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 95  

                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividContrast, _VIVID_CONTRAST_MAX, _VIVID_CONTR
             -AST_MIN, _CP_WHITE, _CP_WHITE);
                  CAdjustHLWindowContrast(_ENABLE, stOsdUserData.VividContrast);
              }
              
              void COsdRightVividContrastAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividContrast = COsdFxDetOverRange(stOsdUserData.VividContrast, _VIVID_CONTRAST_MAX, _VI
             -VID_CONTRAST_MIN, _DET_OVERRANGE_MIN);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividContrast, _VIVID_CONTRAST_MAX, _VIVID_CONTR
             -AST_MIN, _CP_WHITE, _CP_WHITE);
                  CAdjustHLWindowContrast(_ENABLE, stOsdUserData.VividContrast);
              }
              
              void COsdExitVividContrastAdj(void)
              {
                  COsdMenuVividContrastAdj();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Brightness" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuVividBrightness(void)
              {
                  ucOsdState = _MENU_VIVID_BRIGHTNESS_ADJ;
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividBright, _VIVID_BRIGHTNESS_MAX, _VIVID_BRIGH
             -TNESS_MIN, _CP_WHITE, _CP_WHITE);
              }
              
              void COsdLeftVividBrightness(void)
              {
                  COsdDispPenPoint(ROW(13), COL(3), ROW(5), COL(3), _MENU_COLOR_WINODW_SIZE);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
                  COsdDispClearText(ROW(19), COL(9), 16, 1);
                  COsdFxLoadText(ROW(19), COL(9), (GET_WINDOW_SIZE()), tVIVID_COLOR_TABLE[1]);
              }
              
              void COsdRightVividBrightness(void)
              {
                  COsdDispPenPoint(ROW(13), COL(3), ROW(11), COL(3), _MENU_VIVID_CONTRAST);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              
              void COsdExitVividBrightness(void)
              {
                  COsdMenuSpecial();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Vivid Color Brightness Adjust" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuVividBrightnessAdj(void)
              {
                  ucOsdState = _MENU_VIVID_BRIGHTNESS;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 20, 2);
                  CLR_KEYREPEATENABLE();
              }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 96  

              
              void COsdLeftVividBrightnessAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividBright = COsdFxDetOverRange(stOsdUserData.VividBright, _VIVID_BRIGHTNESS_MAX, _VIVI
             -D_BRIGHTNESS_MIN, _DET_OVERRANGE_MAX);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividBright, _VIVID_BRIGHTNESS_MAX, _VIVID_BRIGH
             -TNESS_MIN, _CP_WHITE, _CP_WHITE);
                  CAdjustHLWindowBrightness(_ENABLE, stOsdUserData.VividBright);
              }
              
              void COsdRightVividBrightnessAdj(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.VividBright = COsdFxDetOverRange(stOsdUserData.VividBright, _VIVID_BRIGHTNESS_MAX, _VIVI
             -D_BRIGHTNESS_MIN, _DET_OVERRANGE_MIN);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.VividBright, _VIVID_BRIGHTNESS_MAX, _VIVID_BRIGH
             -TNESS_MIN, _CP_WHITE, _CP_WHITE);
                  CAdjustHLWindowBrightness(_ENABLE, stOsdUserData.VividBright);
              }
              
              void COsdExitVividBrightnessAdj(void)
              {
                  COsdMenuVividBrightnessAdj();
              }
              
              
              #endif // End of #if(_VIVID_COLOR_FUCTION == _ON)
5702          
5703          
5704          #if(_NON_LINEAR_SCALING_FUCTION == _ON)
              //----------------------------------------------------------------------------------------------------
              // OSD "NonLinear Scaling" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuNonLinearScaling(void)
              {
                  if(GET_NON_LINEAR_SCALING_STATUS())
                  {
                      CLR_NON_LINEAR_SCALING_STATUS();
                  }
                  else
                  {
                      SET_NON_LINEAR_SCALING_STATUS();
                  }
              
              #if(_AUDIO_SUPPORT == _ON)
                  COsdFxLoadText(ROW(19), COL(10), (GET_NON_LINEAR_SCALING_STATUS()), tOSD_AUDIO_TABLE[2]);
              #endif
              
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  CModeResetMode();
              }
              
              void COsdLeftNonLinearScaling(void)
              {
                  COsdDispClearText(ROW(19), COL(10), LENGTH(5), 1);
              
              #if(_ASPECT_RATIO_SUPPORT == _ON)
                  COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_ASPECT_RATIO);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(8), (GET_DISP_RATIO()), tOSD_ASPECT_RATIO_TYPE_STR);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 97  

              
              // V012 Modify 20100304 Start
              // V012 Patch Note (1) : Add RGB/YUV color space convert function.
              /*
              #elif(_VIVID_COLOR_FUCTION == _ON)
                  COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_VIVID_COLOR);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #elif(_SRGB_COLOR_ENHANCE == _ON)
                  COsdDispPenPoint(ROW(7), COL(3), ROW(11), COL(3), _MENU_SRGB);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              */
              #elif(_SRGB_COLOR_ENHANCE == _ON)
                  COsdDispPenPoint(ROW(7), COL(3), ROW(11), COL(3), _MENU_SRGB);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #elif(_COLOR_FORMAT_CONVERT == _ON)
              if((GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR) || (GET_INPUTSOURCE_TYPE() == _SOURCE_VGA))
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(13), COL(3), _MENU_RGB_YUV);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              #elif(_VIVID_COLOR_FUCTION == _ON)
                  COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_VIVID_COLOR);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              // V012 Modify 20100304 End
              
              #endif
              
              }
              
              void COsdRightNonLinearScaling(void)
              {
                  COsdDispClearText(ROW(19), COL(10), LENGTH(5), 1);
              
              #if(_VIVID_COLOR_FUCTION == _ON)
                  COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_VIVID_COLOR);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              // V012 Modify 20100304 Start
              // V012 Patch Note (1) : Add RGB/YUV color space convert function.
              /*
              #elif(_ASPECT_RATIO_SUPPORT == _ON)
                  COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_ASPECT_RATIO);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(8), (GET_DISP_RATIO()), tOSD_ASPECT_RATIO_TYPE_STR);
              #elif(_SRGB_COLOR_ENHANCE == _ON)
                  COsdDispPenPoint(ROW(7), COL(3), ROW(11), COL(3), _MENU_SRGB);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              */
              #elif(_COLOR_FORMAT_CONVERT == _ON)
              if((GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR) || (GET_INPUTSOURCE_TYPE() == _SOURCE_VGA))
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(13), COL(3), _MENU_RGB_YUV);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 98  

              }
              #elif(_SRGB_COLOR_ENHANCE == _ON)
                  COsdDispPenPoint(ROW(7), COL(3), ROW(11), COL(3), _MENU_SRGB);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #elif(_ASPECT_RATIO_SUPPORT == _ON)
                  COsdDispPenPoint(ROW(7), COL(3), ROW(9), COL(3), _MENU_ASPECT_RATIO);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(8), (GET_DISP_RATIO()), tOSD_ASPECT_RATIO_TYPE_STR);
              // V012 Modify 20100304 End
              
              #endif
              
              }
              
              void COsdExitNonLinearScaling(void)
              {
                  COsdFxCloseWindow(WINNO(2));
                  COsdDispDrawInitWindow();
                  ucOsdState = _MENU_AUTO_ADJUST_SETTING;
              
              #if(_AUDIO_SUPPORT == _ON)
                  COsdFxLoadIcon(ROW(15), COL(3), tOSD_POINT_ICO);
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(15), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #else
              
                  COsdFxLoadIcon(ROW(15), COL(3), tOSD_POINT_ICO);
              
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(15), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              #endif // End of #if(_AUDIO_SUPPORT==_ON)
              
              }
              
              #endif // End of #if(_NON_LINEAR_SCALING_FUCTION == _ON)
5834          
5835          
5836          #if(_ASPECT_RATIO_SUPPORT == _ON)
5837          //----------------------------------------------------------------------------------------------------
5838          // OSD "NonLinear Scaling" Operation
5839          //----------------------------------------------------------------------------------------------------
5840          void COsdMenuAspectRatio(void)
5841          {
5842   1      #if((_OD_SUPPORT == _ON) || (_FRC_SUPPORT == _ON))
                  if(GET_DISP_RATIO() == DISP_FULL_SCREEN)
                  {
                      SET_DISP_RATIO(DISP_ORIGINAL_SIZE);
                  }
                  else if(GET_DISP_RATIO() == DISP_ORIGINAL_SIZE)
                  {
                      SET_DISP_RATIO(DISP_FIXED_AR_IN);
                  }
                  else
                  {
                      SET_DISP_RATIO(DISP_FULL_SCREEN);
                  }
              
                  CEepromSaveSystemData();
              
              
                  CModeResetMode();
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 99  

              
              #else
5862   1      
5863   1          if(GET_DISP_RATIO() == _ON)
5864   1          {
5865   2              SET_DISP_RATIO(_OFF);
5866   2          }
5867   1          else
5868   1          {
5869   2              SET_DISP_RATIO(_ON);
5870   2          }
5871   1      
5872   1          CAdjustBackgroundColor(0, 0, 0);
5873   1          CScalerSetBit(_VDISP_CTRL_28, 0x5f, 0x20);
5874   1          CModeSetDHWidthToDisplay();
5875   1          CTimerDelayXms(100);
5876   1          CScalerSetBit(_VDISP_CTRL_28, 0x5f, 0x00);
5877   1          COsdFxLoadText(ROW(19), COL(8), (GET_DISP_RATIO()), tOSD_ASPECT_RATIO_TYPE_STR);
5878   1      
5879   1      #endif
5880   1      
5881   1      }
5882          
5883          void COsdLeftAspectRatio(void)
5884          {
5885   1          COsdDispClearText(ROW(19), COL(5), LENGTH(15), 1);
5886   1      
5887   1      #if (_SRGB_COLOR_ENHANCE == _ON)
              
                  COsdDispPenPoint(ROW(9), COL(3), ROW(11), COL(3), _MENU_SRGB);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              // V012 Modify 20100304 Start
              // V012 Patch Note (1) : Add RGB/YUV color space convert function.
              #elif(_COLOR_FORMAT_CONVERT == _ON)
5896   1      if((GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR) || (GET_INPUTSOURCE_TYPE() == _SOURCE_VGA))
5897   1      {
5898   2          COsdDispPenPoint(ROW(9), COL(3), ROW(13), COL(3), _MENU_RGB_YUV);
5899   2          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
5900   2          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
5901   2      }
5902   1      // V012 Modify 20100304 End
5903   1      
5904   1      #elif(_VIVID_COLOR_FUCTION == _ON)
              
                  COsdDispPenPoint(ROW(9), COL(3), ROW(5), COL(3), _MENU_VIVID_COLOR);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              #elif(_NON_LINEAR_SCALING_FUCTION == _ON)
              
                  COsdDispPenPoint(ROW(9), COL(3), ROW(7), COL(3), _MENU_NONLINEAR_SCALING);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(10), (GET_NON_LINEAR_SCALING_STATUS()), tOSD_AUDIO_TABLE[2]);
              
              #endif
5918   1      }
5919          
5920          void COsdRightAspectRatio(void)
5921          {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 100 

5922   1          COsdDispClearText(ROW(19), COL(5), LENGTH(15), 1);
5923   1      
5924   1      #if(_NON_LINEAR_SCALING_FUCTION == _ON)
                  COsdDispPenPoint(ROW(9), COL(3), ROW(7), COL(3), _MENU_NONLINEAR_SCALING);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(10), (GET_NON_LINEAR_SCALING_STATUS()), tOSD_AUDIO_TABLE[2]);
              #elif(_VIVID_COLOR_FUCTION == _ON)
                  COsdDispPenPoint(ROW(9), COL(3), ROW(5), COL(3), _MENU_VIVID_COLOR);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              // V012 Modify 20100304 Start
              // V012 Patch Note (1) : Add RGB/YUV color space convert function.
              #elif(_COLOR_FORMAT_CONVERT == _ON)
5937   1      if((GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR) || (GET_INPUTSOURCE_TYPE() == _SOURCE_VGA))
5938   1      {
5939   2          COsdDispPenPoint(ROW(9), COL(3), ROW(13), COL(3), _MENU_RGB_YUV);
5940   2          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
5941   2          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
5942   2      }
5943   1      // V012 Modify 20100304 End
5944   1      
5945   1      #elif (_SRGB_COLOR_ENHANCE == _ON)
                  COsdDispPenPoint(ROW(9), COL(3), ROW(11), COL(3), _MENU_SRGB);
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #endif
5950   1      
5951   1      
5952   1      
5953   1      }
5954          
5955          void COsdExitAspectRatio(void)
5956          {
5957   1          COsdFxCloseWindow(WINNO(2));
5958   1          COsdDispDrawInitWindow();
5959   1          ucOsdState = _MENU_AUTO_ADJUST_SETTING;
5960   1      
5961   1      #if(_AUDIO_SUPPORT == _ON)
                  COsdFxLoadIcon(ROW(15), COL(3), tOSD_POINT_ICO);
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(15), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #else
5965   1      
5966   1          COsdFxLoadIcon(ROW(15), COL(3), tOSD_POINT_ICO);
5967   1      
5968   1          COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(15), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
5969   1      #endif // End of #if(_AUDIO_SUPPORT==_ON)
5970   1      
5971   1      }
5972          
5973          #endif // End of #if(_ASPECT_RATIO_SUPPORT == _ON)
5974          
5975          #if (_SRGB_COLOR_ENHANCE == _ON)
              
              void COsdMenuSrgb(void)
              {
                  BYTE temp;
              
                  COsdDispClearIcon(ROW(5), COL(0), 5, 20);
                  COsdDispClearText(ROW(5), COL(5), 20, 15);
              
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 101 

                  for(temp = 0; temp < 2; temp++)
                  {
                      COsdFxLoadText(ROW(5 + temp*2), COL(7), stOsdUserData.Language, tOSD_SRGB_FUCTION_TABLE[temp]);
                  }
              
                  COsdDispPenPoint(ROW(5), COL(3), ROW(5), COL(3), _MENU_HUE);
                  COsdFxDrawWindow(XSTART(40), YSTART(300), XEND(250), YEND(400), tOSD_WINDOW2_STYLE);
                  COsdFxChangeWindowColor(COLOR00(_CP_BLACK), tOSD_WINDOW2_STYLE);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              }
              void COsdLeftSrgb(void)
              {
                  COsdDispClearText(ROW(19), COL(5), LENGTH(15), 1);
              
              // V012 Modify 20100304 Start
              // V012 Patch Note (1) : Add RGB/YUV color space convert function.
              /*
              #if(_VIVID_COLOR_FUCTION == _ON)
              */
              #if(_COLOR_FORMAT_CONVERT == _ON)
              if((GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR) || (GET_INPUTSOURCE_TYPE() == _SOURCE_VGA))
              {
                  COsdDispPenPoint(ROW(11), COL(3), ROW(13), COL(3), _MENU_RGB_YUV);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              #elif(_VIVID_COLOR_FUCTION == _ON)
              // V012 Modify 20100304 End
              
                  COsdDispPenPoint(ROW(11), COL(3), ROW(5), COL(3), _MENU_VIVID_COLOR);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              #elif(_NON_LINEAR_SCALING_FUCTION == _ON)
                  COsdDispPenPoint(ROW(11), COL(3), ROW(7), COL(3), _MENU_NONLINEAR_SCALING);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(10), (GET_NON_LINEAR_SCALING_STATUS()), tOSD_AUDIO_TABLE[2]);
              
              #elif(_ASPECT_RATIO_SUPPORT == _ON)
                  COsdDispPenPoint(ROW(11), COL(3), ROW(9), COL(3), _MENU_ASPECT_RATIO);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(8), (GET_DISP_RATIO()), tOSD_ASPECT_RATIO_TYPE_STR);
              
              #endif
              
              }
              void COsdRightSrgb(void)
              {
                  COsdDispClearText(ROW(19), COL(5), LENGTH(15), 1);
              
              #if(_ASPECT_RATIO_SUPPORT == _ON)
              
                  COsdDispPenPoint(ROW(11), COL(3), ROW(9), COL(3), _MENU_ASPECT_RATIO);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(8), (GET_DISP_RATIO()), tOSD_ASPECT_RATIO_TYPE_STR);
              
              #elif(_NON_LINEAR_SCALING_FUCTION == _ON)
              
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 102 

                  COsdDispPenPoint(ROW(11), COL(3), ROW(7), COL(3), _MENU_NONLINEAR_SCALING);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(10), (GET_NON_LINEAR_SCALING_STATUS()), tOSD_AUDIO_TABLE[2]);
              
              #elif(_VIVID_COLOR_FUCTION == _ON)
              
                  COsdDispPenPoint(ROW(11), COL(3), ROW(5), COL(3), _MENU_VIVID_COLOR);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              // V012 Modify 20100304 Start
              // V012 Patch Note (1) : Add RGB/YUV color space convert function.
              #elif(_COLOR_FORMAT_CONVERT == _ON)
              if((GET_INPUTSOURCE_TYPE() == _SOURCE_YPBPR) || (GET_INPUTSOURCE_TYPE() == _SOURCE_VGA))
              {
                  COsdDispPenPoint(ROW(11), COL(3), ROW(13), COL(3), _MENU_RGB_YUV);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              }
              // V012 Modify 20100304 End
              
              #endif
              }
              void COsdExitSrgb(void)
              {
                  COsdFxCloseWindow(WINNO(2));
                  COsdDispDrawInitWindow();
                  ucOsdState = _MENU_AUTO_ADJUST_SETTING;
              
              // V012 Modify 20100304 Start
              // V012 Patch Note (1) : Add RGB/YUV color space convert function.
              /*
              #if(_AUDIO_SUPPORT == _ON)
              
                  COsdFxLoadIcon(ROW(15), COL(3), tOSD_POINT_ICO);
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(15), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              #else
              
                  COsdFxLoadIcon(ROW(13), COL(3), tOSD_POINT_ICO);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(15), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #endif // End of #if(_AUDIO_SUPPORT==_ON)
              */
                  COsdFxLoadIcon(ROW(15), COL(3), tOSD_POINT_ICO);
                  COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(15), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              // V012 Modify 20100304 End
              
              }
              
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Contrast" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuHue(void)
              {
                  ucOsdState = _MENU_SUB_HUE;
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.Hue, _HUE_MAX - _HUE_MIN, _HUE_MIN, _CP_WHITE, _
             -CP_WHITE);
              }
              
              void COsdLeftHue(void)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 103 

              {
                  COsdDispPenPoint(ROW(5), COL(3), ROW(7), COL(3), _MENU_SATURATION);
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              }
              
              void COsdRightHue(void)
              {
                  COsdLeftHue();
              
              }
              
              void COsdExitHue(void)
              {
                  COsdMenuSpecial();
              }
              
              //----------------------------------------------------------------------------------------------------
              // OSD "subContrast" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuSubHue(void)
              {
                  ucOsdState = _MENU_HUE;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 12, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              void COsdLeftSubHue(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.Hue = COsdFxDetOverRange(stOsdUserData.Hue, _HUE_MAX, _HUE_MIN, _DET_OVERRANGE_MAX);
                  CAdjustSaturationHue(stOsdUserData.Hue, _FALSE);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.Hue, _HUE_MAX - _HUE_MIN, _HUE_MIN, _CP_WHITE, _
             -CP_WHITE);
              }
              
              void COsdRightSubHue(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.Hue = COsdFxDetOverRange(stOsdUserData.Hue, _HUE_MAX, _HUE_MIN, _DET_OVERRANGE_MIN);
                  CAdjustSaturationHue(stOsdUserData.Hue, _FALSE);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.Hue, _HUE_MAX - _HUE_MIN, _HUE_MIN, _CP_WHITE, _
             -CP_WHITE);
              }
              
              void COsdExitSubHue(void)
              {
                  ucOsdState = _MENU_HUE;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 15, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              
              //----------------------------------------------------------------------------------------------------
              // OSD "Brightness" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuSaturation(void)
              {
                  ucOsdState = _MENU_SUB_SATURATION;
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 104 

                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.Sat, _SATURATION_MAX - _SATURATION_MIN, _SATURAT
             -ION_MIN, _CP_WHITE, _CP_WHITE);
              
              }
              
              void COsdLeftSaturation(void)
              {
                  COsdDispPenPoint(ROW(7), COL(3), ROW(5), COL(3), _MENU_HUE);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              }
              
              void COsdRightSaturation(void)
              {
                  COsdLeftSaturation();
              }
              
              void COsdExitSaturation(void)
              {
                  COsdExitHue();
              }
              
              
              //----------------------------------------------------------------------------------------------------
              // OSD "SubBrightness" Operation
              //----------------------------------------------------------------------------------------------------
              void COsdMenuSubSaturation(void)
              {
                  ucOsdState = _MENU_SATURATION;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 12, 2);
                  CLR_KEYREPEATENABLE();
              }
              
              void COsdLeftSubSaturation(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.Sat = COsdFxDetOverRange(stOsdUserData.Sat, _SATURATION_MAX, _SATURATION_MIN, _DET_OVERR
             -ANGE_MAX);
                  CAdjustSaturationHue(stOsdUserData.Sat, _TRUE);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.Sat, _SATURATION_MAX - _SATURATION_MIN, _SATURAT
             -ION_MIN, _CP_WHITE, _CP_WHITE);
              }
              
              void COsdRightSubSaturation(void)
              {
                  SET_KEYREPEATENABLE();
                  stOsdUserData.Sat = COsdFxDetOverRange(stOsdUserData.Sat, _SATURATION_MAX, _SATURATION_MIN, _DET_OVERR
             -ANGE_MIN);
                  CAdjustSaturationHue(stOsdUserData.Sat, _TRUE);
                  COsdDispFullSlider(ROW(19), COL(5), 12, stOsdUserData.Sat, _SATURATION_MAX - _SATURATION_MIN, _SATURAT
             -ION_MIN, _CP_WHITE, _CP_WHITE);
              }
              
              void COsdExitSubSaturation(void)
              {
                  ucOsdState = _MENU_SATURATION;
                  ucOsdEventMsg = _SAVE_EE_OSDUSERDATA_MSG;
                  COsdDispClearText(ROW(18), COL(5), 15, 2);
                  CLR_KEYREPEATENABLE();
              }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 105 

              #endif
6225          
6226          // V012 Modify 20100304 Start
6227          // V012 Patch Note (1) : Add RGB/YUV color space convert function.
6228          #if(_COLOR_FORMAT_CONVERT == _ON)
6229          //----------------------------------------------------------------------------------------------------
6230          // OSD "RGBYUV" Operation
6231          //----------------------------------------------------------------------------------------------------
6232          void COsdMenuRGBYUV(void)
6233          {
6234   1          COsdFxLoadText(ROW(19), COL(5), stOsdUserData.Language, tOSD_RGBYUV_STR);
6235   1      
6236   1          if(GET_COLOR_FORMAT_STATUS())
6237   1          {
6238   2              COsdDispArrowPoint(ROW(18), COL(13), ROW(18), COL(13), _MENU_SUB_YUV);
6239   2          }
6240   1          else
6241   1          {
6242   2              COsdDispArrowPoint(ROW(18), COL(7), ROW(18), COL(7), _MENU_SUB_RGB);
6243   2          }
6244   1      }
6245          
6246          void COsdLeftRGBYUV(void)
6247          {
6248   1      #if(_VIVID_COLOR_FUCTION == _ON)
                  COsdDispPenPoint(ROW(13), COL(3), ROW(5), COL(3), _MENU_VIVID_COLOR);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              
              #elif(_NON_LINEAR_SCALING_FUCTION == _ON)
                  COsdDispPenPoint(ROW(13), COL(3), ROW(7), COL(3), _MENU_NONLINEAR_SCALING);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(10), (GET_NON_LINEAR_SCALING_STATUS()), tOSD_AUDIO_TABLE[2]);
              
              #elif(_ASPECT_RATIO_SUPPORT == _ON)
6260   1          COsdDispPenPoint(ROW(13), COL(3), ROW(9), COL(3), _MENU_ASPECT_RATIO);
6261   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
6262   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
6263   1          COsdFxLoadText(ROW(19), COL(8), (GET_DISP_RATIO()), tOSD_ASPECT_RATIO_TYPE_STR);
6264   1      
6265   1      #elif(_SRGB_COLOR_ENHANCE == _ON)
                  COsdDispPenPoint(ROW(13), COL(3), ROW(11), COL(3), _MENU_SRGB);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
              #endif
6270   1      
6271   1      }
6272          
6273          void COsdRightRGBYUV(void)
6274          {
6275   1      #if(_SRGB_COLOR_ENHANCE == _ON)
                  COsdDispPenPoint(ROW(13), COL(3), ROW(11), COL(3), _MENU_SRGB);
                  COsdFxChange1bitColor(ROW(11), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
              
              #elif(_ASPECT_RATIO_SUPPORT == _ON)
6281   1          COsdDispPenPoint(ROW(13), COL(3), ROW(9), COL(3), _MENU_ASPECT_RATIO);
6282   1          COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
6283   1          COsdFxChange1bitColor(ROW(9), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
6284   1          COsdFxLoadText(ROW(19), COL(8), (GET_DISP_RATIO()), tOSD_ASPECT_RATIO_TYPE_STR);
6285   1      
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 106 

6286   1      #elif(_NON_LINEAR_SCALING_FUCTION == _ON)
                  COsdDispPenPoint(ROW(13), COL(3), ROW(7), COL(3), _MENU_NONLINEAR_SCALING);
                  COsdFxChange1bitColor(ROW(7), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
                  COsdFxLoadText(ROW(19), COL(10), (GET_NON_LINEAR_SCALING_STATUS()), tOSD_AUDIO_TABLE[2]);
              
              #elif(_VIVID_COLOR_FUCTION == _ON)
                  COsdDispPenPoint(ROW(13), COL(3), ROW(5), COL(3), _MENU_VIVID_COLOR);
                  COsdFxChange1bitColor(ROW(13), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
                  COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(20), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
              #endif
6297   1      
6298   1      }
6299          
6300          void COsdExitRGBYUV(void)
6301          {
6302   1          COsdFxCloseWindow(WINNO(2));
6303   1          COsdDispDrawInitWindow();
6304   1          ucOsdState = _MENU_AUTO_ADJUST_SETTING;
6305   1      
6306   1          COsdFxLoadIcon(ROW(15), COL(3), tOSD_POINT_ICO);
6307   1          COsdFxChange1bitColor(ROW(15), COL(5), WIDTH(15), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
6308   1      }
6309          
6310          //----------------------------------------------------------------------------------------------------
6311          // OSD "SUB RGB" Operation
6312          //----------------------------------------------------------------------------------------------------
6313          void COsdMenuSubRGB(void)
6314          {
6315   1          SET_COLOR_FORMAT_STATUS(_RGB_COLOR_FORMAT);
6316   1      
6317   1          // V014 VGA Patch Note (6) Modify 20100527 Start
6318   1          // Patch Reason : Modify Video Mode Can't Light On
6319   1          SET_MODE_COLOR_FORMAT_FLAG(_RGB_COLOR_FORMAT);
6320   1          // V014 VGA Patch Note (6) Modify 20100527 End
6321   1      
6322   1          CEepromSaveSystemData();
6323   1      
6324   1          // V014 VGA Patch Note (6) Modify 20100527 Start
6325   1          // Patch Reason : Modify Video Mode Can't Light On
6326   1          CEepromSaveModeData(stModeInfo.ModeCurr);
6327   1          // V014 VGA Patch Note (6) Modify 20100527 End
6328   1      
6329   1          COsdDispClearText(ROW(18), COL(5), 17, 4);
6330   1          ucOsdState = _MENU_RGB_YUV;
6331   1      
6332   1      // V012 Modify 20100316 Start
6333   1      // V012 Patch Note (2) : Overscan function update.
6334   1      #if(_OVERSCAN_SUPPORT == _ON)
6335   1          CModeOverScan();
6336   1      #endif
6337   1      // V012 Modify 20100316 End
6338   1      
6339   1          // V015 VGA Patch Note (12) Modify 20100625 Start
6340   1          // Patch Reason : Modify OSD Reslotion show type for vedio timing.
6341   1          COsdDispClearText(ROW(23), COL(5), WIDTH(20), HEIGHT(1));
6342   1          COSDDispTimingInfoStyle();
6343   1          // V015 VGA Patch Note (12) Modify 20100625 End
6344   1      }
6345          
6346          void COsdLeftSubRGB(void)
6347          {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 107 

6348   1          COsdDispArrowPoint(ROW(18), COL(7), ROW(18), COL(13), _MENU_SUB_YUV);
6349   1      }
6350          
6351          void COsdRightSubRGB(void)
6352          {
6353   1          COsdDispArrowPoint(ROW(18), COL(7), ROW(18), COL(13), _MENU_SUB_YUV);
6354   1      }
6355          
6356          void COsdExitSubRGB(void)
6357          {
6358   1          COsdDispClearText(ROW(18), COL(5), 17, 4);
6359   1          ucOsdState = _MENU_RGB_YUV;
6360   1      }
6361          
6362          //----------------------------------------------------------------------------------------------------
6363          // OSD "SUB YUV" Operation
6364          //----------------------------------------------------------------------------------------------------
6365          void COsdMenuSubYUV(void)
6366          {
6367   1          SET_COLOR_FORMAT_STATUS(_YUV_COLOR_FORMAT);
6368   1      
6369   1          // V014 VGA Patch Note (6) Modify 20100527 Start
6370   1          // Patch Reason : Modify Video Mode Can't Light On
6371   1          SET_MODE_COLOR_FORMAT_FLAG(_YUV_COLOR_FORMAT);
6372   1          // V014 VGA Patch Note (6) Modify 20100527 End
6373   1      
6374   1          CEepromSaveSystemData();
6375   1      
6376   1          // V014 VGA Patch Note (6) Modify 20100527 Start
6377   1          // Patch Reason : Modify Video Mode Can't Light On
6378   1          CEepromSaveModeData(stModeInfo.ModeCurr);
6379   1          // V014 VGA Patch Note (6) Modify 20100527 End
6380   1      
6381   1          COsdDispClearText(ROW(18), COL(5), 17, 4);
6382   1          ucOsdState = _MENU_RGB_YUV;
6383   1      
6384   1      // V012 Modify 20100316 Start
6385   1      // V012 Patch Note (2) : Overscan function update.
6386   1      #if(_OVERSCAN_SUPPORT == _ON)
6387   1          CModeOverScan();
6388   1      #endif
6389   1      // V012 Modify 20100316 End
6390   1      
6391   1          // V015 VGA Patch Note (12) Modify 20100625 Start
6392   1          // Patch Reason : Modify OSD Reslotion show type for vedio timing.
6393   1          COsdDispClearText(ROW(23), COL(5), WIDTH(20), HEIGHT(1));
6394   1          COSDDispTimingInfoStyle();
6395   1          // V015 VGA Patch Note (12) Modify 20100625 End
6396   1      }
6397          
6398          void COsdLeftSubYUV(void)
6399          {
6400   1          COsdDispArrowPoint(ROW(18), COL(13), ROW(18), COL(7), _MENU_SUB_RGB);
6401   1      }
6402          
6403          void COsdRightSubYUV(void)
6404          {
6405   1          COsdDispArrowPoint(ROW(18), COL(13), ROW(18), COL(7), _MENU_SUB_RGB);
6406   1      }
6407          
6408          void COsdExitSubYUV(void)
6409          {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 108 

6410   1          COsdDispClearText(ROW(18), COL(5), 17, 4);
6411   1          ucOsdState = _MENU_RGB_YUV;
6412   1      }
6413          #endif  // End of #if(_COLOR_FORMAT_CONVERT == _ON)
6414          // V012 Modify 20100304 End
6415          
6416          //----------------------------------------------------------------------------------------------------
6417          // OSD "Factory Mode ITEM" Operation
6418          //----------------------------------------------------------------------------------------------------
6419          
6420          //----------------------------------------------------------------------------------------------------
6421          // OSD "FAutoColor" Operation
6422          //----------------------------------------------------------------------------------------------------
6423          void COsdMenuFAutoColor(void)
6424          {
6425   1          CAutoDoWhiteBalance();
6426   1          COsdDispShowFactoryModeValue();
6427   1      }
6428          
6429          void COsdLeftFAutoColor(void)
6430          {
6431   1          COsdDispWindowPoint(1, _MENU_F_RESET);
6432   1      }
6433          
6434          void COsdRightFAutoColor(void)
6435          {
6436   1          COsdDispWindowPoint(11, _MENU_F_EXIT);
6437   1      }
6438          
6439          void COsdExitFAutoColor(void)
6440          {
6441   1      
6442   1      }
6443          
6444          //----------------------------------------------------------------------------------------------------
6445          // OSD "FReset" Operation
6446          //----------------------------------------------------------------------------------------------------
6447          void COsdMenuFReset(void)
6448          {
6449   1      
6450   1      }
6451          
6452          void COsdLeftFReset(void)
6453          {
6454   1          COsdDispWindowPoint(2, _MENU_F_OFFSET);
6455   1      }
6456          
6457          void COsdRightFReset(void)
6458          {
6459   1          COsdDispWindowPoint(0, _MENU_F_AUTOCOLOR);
6460   1      }
6461          
6462          void COsdExitFReset(void)
6463          {
6464   1      
6465   1      }
6466          
6467          //----------------------------------------------------------------------------------------------------
6468          // OSD "FOffset" Operation
6469          //----------------------------------------------------------------------------------------------------
6470          void COsdMenuFOffset(void)
6471          {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 109 

6472   1          COsdDispWindowHPoint(ROW(2), 154, 60, 0, 12, _MENU_F_OFFSET_R);
6473   1      }
6474          
6475          void COsdLeftFOffset(void)
6476          {
6477   1          COsdDispWindowPoint(3, _MENU_F_GAIN);
6478   1      }
6479          
6480          void COsdRightFOffset(void)
6481          {
6482   1          COsdDispWindowPoint(1, _MENU_F_RESET);
6483   1      }
6484          
6485          void COsdExitFOffset(void)
6486          {
6487   1      
6488   1      }
6489          
6490          //----------------------------------------------------------------------------------------------------
6491          // OSD "FOffsetR" Operation
6492          //----------------------------------------------------------------------------------------------------
6493          void COsdMenuFOffsetR(void)
6494          {
6495   1          COsdDispWindowHPoint(ROW(2), 154, 60, 0, 50, _MENU_F_OFFSET_R_ADJ);
6496   1      }
6497          
6498          void COsdLeftFOffsetR(void)
6499          {
6500   1          COsdDispWindowHPoint(ROW(2), 154, 60, 1, 12, _MENU_F_OFFSET_G);
6501   1      }
6502          
6503          void COsdRightFOffsetR(void)
6504          {
6505   1          COsdDispWindowHPoint(ROW(2), 154, 60, 2, 12, _MENU_F_OFFSET_B);
6506   1      }
6507          
6508          void COsdExitFOffsetR(void)
6509          {
6510   1          COsdFxCloseWindow(WINNO(2));
6511   1          ucOsdState = _MENU_F_OFFSET;
6512   1      }
6513          
6514          //----------------------------------------------------------------------------------------------------
6515          // OSD "FOffsetR adj" Operation
6516          //----------------------------------------------------------------------------------------------------
6517          void COsdMenuFOffsetRAdj(void)
6518          {
6519   1          COsdDispWindowHPoint(ROW(2), 154, 60, 0, 12, _MENU_F_OFFSET_R);
6520   1          ucOsdEventMsg = _SAVE_EE_ADCDATA_MSG;
6521   1      }
6522          
6523          void COsdLeftFOffsetRAdj(void)
6524          {
6525   1          stAdcData.AdcOffset[_RED] = COsdFxDetOverRange(stAdcData.AdcOffset[_RED], 255, 0, _DET_OVERRANGE_MAX);
6526   1          COsdFxShowNumber(ROW(5), COL(17), stAdcData.AdcOffset[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | 
             -_SHOW_3));
6527   1          CAdjustAdcOffset();
6528   1      }
6529          
6530          void COsdRightFOffsetRAdj(void)
6531          {
6532   1          stAdcData.AdcOffset[_RED] = COsdFxDetOverRange(stAdcData.AdcOffset[_RED], 255, 0, _DET_OVERRANGE_MIN);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 110 

6533   1          COsdFxShowNumber(ROW(5), COL(17), stAdcData.AdcOffset[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | 
             -_SHOW_3));
6534   1          CAdjustAdcOffset();
6535   1      }
6536          
6537          void COsdExitFOffsetRAdj(void)
6538          {
6539   1          COsdExitFOffsetR();
6540   1      }
6541          
6542          //----------------------------------------------------------------------------------------------------
6543          // OSD "FOffsetG" Operation
6544          //----------------------------------------------------------------------------------------------------
6545          void COsdMenuFOffsetG(void)
6546          {
6547   1          COsdDispWindowHPoint(ROW(2), 154, 60, 1, 50, _MENU_F_OFFSET_G_ADJ);
6548   1      }
6549          
6550          void COsdLeftFOffsetG(void)
6551          {
6552   1          COsdDispWindowHPoint(ROW(2), 154, 60, 2, 12, _MENU_F_OFFSET_B);
6553   1      }
6554          
6555          void COsdRightFOffsetG(void)
6556          {
6557   1          COsdDispWindowHPoint(ROW(2), 154, 60, 0, 12, _MENU_F_OFFSET_R);
6558   1      }
6559          
6560          void COsdExitFOffsetG(void)
6561          {
6562   1          COsdExitFOffsetR();
6563   1      }
6564          
6565          //----------------------------------------------------------------------------------------------------
6566          // OSD "FOffsetG adj" Operation
6567          //----------------------------------------------------------------------------------------------------
6568          void COsdMenuFOffsetGAdj(void)
6569          {
6570   1          COsdDispWindowHPoint(ROW(2), 154, 60, 1, 12, _MENU_F_OFFSET_G);
6571   1          ucOsdEventMsg = _SAVE_EE_ADCDATA_MSG;
6572   1      }
6573          
6574          void COsdLeftFOffsetGAdj(void)
6575          {
6576   1          stAdcData.AdcOffset[_GREEN] = COsdFxDetOverRange(stAdcData.AdcOffset[_GREEN], 255, 0, _DET_OVERRANGE_M
             -AX);
6577   1          COsdFxShowNumber(ROW(5), COL(22), stAdcData.AdcOffset[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF 
             -| _SHOW_3));
6578   1          CAdjustAdcOffset();
6579   1      }
6580          
6581          void COsdRightFOffsetGAdj(void)
6582          {
6583   1          stAdcData.AdcOffset[_GREEN] = COsdFxDetOverRange(stAdcData.AdcOffset[_GREEN], 255, 0, _DET_OVERRANGE_M
             -IN);
6584   1          COsdFxShowNumber(ROW(5), COL(22), stAdcData.AdcOffset[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF 
             -| _SHOW_3));
6585   1          CAdjustAdcOffset();
6586   1      }
6587          
6588          void COsdExitFOffsetGAdj(void)
6589          {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 111 

6590   1          COsdExitFOffsetR();
6591   1      }
6592          
6593          //----------------------------------------------------------------------------------------------------
6594          // OSD "FOffsetB" Operation
6595          //----------------------------------------------------------------------------------------------------
6596          void COsdMenuFOffsetB(void)
6597          {
6598   1          COsdDispWindowHPoint(ROW(2), 154, 60, 2, 50, _MENU_F_OFFSET_B_ADJ);
6599   1      }
6600          
6601          void COsdLeftFOffsetB(void)
6602          {
6603   1          COsdDispWindowHPoint(ROW(2), 154, 60, 0, 12, _MENU_F_OFFSET_R);
6604   1      }
6605          
6606          void COsdRightFOffsetB(void)
6607          {
6608   1          COsdDispWindowHPoint(ROW(2), 154, 60, 1, 12, _MENU_F_OFFSET_G);
6609   1      }
6610          
6611          void COsdExitFOffsetB(void)
6612          {
6613   1          COsdExitFOffsetR();
6614   1      }
6615          
6616          //----------------------------------------------------------------------------------------------------
6617          // OSD "FOffsetBAdj" Operation
6618          //----------------------------------------------------------------------------------------------------
6619          void COsdMenuFOffsetBAdj(void)
6620          {
6621   1          COsdDispWindowHPoint(ROW(2), 154, 60, 2, 12, _MENU_F_OFFSET_B);
6622   1          ucOsdEventMsg = _SAVE_EE_ADCDATA_MSG;
6623   1      }
6624          
6625          void COsdLeftFOffsetBAdj(void)
6626          {
6627   1          stAdcData.AdcOffset[_BLUE] = COsdFxDetOverRange(stAdcData.AdcOffset[_BLUE], 255, 0, _DET_OVERRANGE_MAX
             -);
6628   1          COsdFxShowNumber(ROW(5), COL(27), stAdcData.AdcOffset[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF |
             - _SHOW_3));
6629   1          CAdjustAdcOffset();
6630   1      }
6631          
6632          void COsdRightFOffsetBAdj(void)
6633          {
6634   1          stAdcData.AdcOffset[_BLUE] = COsdFxDetOverRange(stAdcData.AdcOffset[_BLUE], 255, 0, _DET_OVERRANGE_MIN
             -);
6635   1          COsdFxShowNumber(ROW(5), COL(27), stAdcData.AdcOffset[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF |
             - _SHOW_3));
6636   1          CAdjustAdcOffset();
6637   1      }
6638          
6639          void COsdExitFOffsetBAdj(void)
6640          {
6641   1          COsdExitFOffsetR();
6642   1      }
6643          
6644          //----------------------------------------------------------------------------------------------------
6645          // OSD "FGain" Operation
6646          //----------------------------------------------------------------------------------------------------
6647          void COsdMenuFGain(void)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 112 

6648          {
6649   1          COsdDispWindowHPoint(ROW(3), 154, 60, 0, 12, _MENU_F_GAIN_R);
6650   1      }
6651          
6652          void COsdLeftFGain(void)
6653          {
6654   1          COsdDispWindowPoint(4, _MENU_F_COLOR9300);
6655   1          SET_COLOR_TEMP_TYPE(_CT_9300);
6656   1          COsdDispColorTempSelect();
6657   1      }
6658          
6659          void COsdRightFGain(void)
6660          {
6661   1          COsdDispWindowPoint(2, _MENU_F_OFFSET);
6662   1      }
6663          
6664          void COsdExitFGain(void)
6665          {
6666   1      
6667   1      }
6668          
6669          //----------------------------------------------------------------------------------------------------
6670          // OSD "FGainR" Operation
6671          //----------------------------------------------------------------------------------------------------
6672          void COsdMenuFGainR(void)
6673          {
6674   1          COsdDispWindowHPoint(ROW(3), 154, 60, 0, 50, _MENU_F_GAIN_R_ADJ);
6675   1          ucOsdEventMsg = _SAVE_EE_ADCDATA_MSG;
6676   1      }
6677          
6678          void COsdLeftFGainR(void)
6679          {
6680   1          COsdDispWindowHPoint(ROW(3), 154, 60, 1, 12, _MENU_F_GAIN_G);
6681   1      }
6682          
6683          void COsdRightFGainR(void)
6684          {
6685   1          COsdDispWindowHPoint(ROW(3), 154, 60, 2, 12, _MENU_F_GAIN_B);
6686   1      }
6687          
6688          void COsdExitFGainR(void)
6689          {
6690   1          COsdFxCloseWindow(WINNO(2));
6691   1          ucOsdState = _MENU_F_GAIN;
6692   1      }
6693          
6694          //----------------------------------------------------------------------------------------------------
6695          // OSD "FGainRAdj" Operation
6696          //----------------------------------------------------------------------------------------------------
6697          void COsdMenuFGainRAdj(void)
6698          {
6699   1          COsdDispWindowHPoint(ROW(3), 154, 60, 0, 12, _MENU_F_GAIN_R);
6700   1          ucOsdEventMsg = _SAVE_EE_ADCDATA_MSG;
6701   1      }
6702          
6703          void COsdLeftFGainRAdj(void)
6704          {
6705   1          stAdcData.AdcGain[_RED] = COsdFxDetOverRange(stAdcData.AdcGain[_RED], 255, 0, _DET_OVERRANGE_MAX);
6706   1          COsdFxShowNumber(ROW(7), COL(16), stAdcData.AdcGain[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | _S
             -HOW_3));
6707   1          CAdjustAdcGain();
6708   1      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 113 

6709          
6710          void COsdRightFGainRAdj(void)
6711          {
6712   1          stAdcData.AdcGain[_RED] = COsdFxDetOverRange(stAdcData.AdcGain[_RED], 255, 0, _DET_OVERRANGE_MIN);
6713   1          COsdFxShowNumber(ROW(7), COL(16), stAdcData.AdcGain[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | _S
             -HOW_3));
6714   1          CAdjustAdcGain();
6715   1      }
6716          
6717          void COsdExitFGainRAdj(void)
6718          {
6719   1          COsdExitFGainR();
6720   1      }
6721          
6722          //----------------------------------------------------------------------------------------------------
6723          // OSD "FGainG" Operation
6724          //----------------------------------------------------------------------------------------------------
6725          void COsdMenuFGainG(void)
6726          {
6727   1          COsdDispWindowHPoint(ROW(3), 154, 60, 1, 50, _MENU_F_GAIN_G_ADJ);
6728   1      }
6729          
6730          void COsdLeftFGainG(void)
6731          {
6732   1          COsdDispWindowHPoint(ROW(3), 154, 60, 2, 12, _MENU_F_GAIN_B);
6733   1      }
6734          
6735          void COsdRightFGainG(void)
6736          {
6737   1          COsdDispWindowHPoint(ROW(3), 154, 60, 0, 12, _MENU_F_GAIN_R);
6738   1      }
6739          
6740          void COsdExitFGainG(void)
6741          {
6742   1          COsdExitFGainR();
6743   1      }
6744          
6745          //----------------------------------------------------------------------------------------------------
6746          // OSD "FGainGAdj" Operation
6747          //----------------------------------------------------------------------------------------------------
6748          void COsdMenuFGainGAdj(void)
6749          {
6750   1          COsdDispWindowHPoint(ROW(3), 154, 60, 1, 12, _MENU_F_GAIN_G);
6751   1          ucOsdEventMsg = _SAVE_EE_ADCDATA_MSG;
6752   1      }
6753          
6754          void COsdLeftFGainGAdj(void)
6755          {
6756   1          stAdcData.AdcGain[_GREEN] = COsdFxDetOverRange(stAdcData.AdcGain[_GREEN], 255, 0, _DET_OVERRANGE_MAX);
6757   1          COsdFxShowNumber(ROW(7), COL(21), stAdcData.AdcGain[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | 
             -_SHOW_3));
6758   1          CAdjustAdcGain();
6759   1      }
6760          
6761          void COsdRightFGainGAdj(void)
6762          {
6763   1          stAdcData.AdcGain[_GREEN] = COsdFxDetOverRange(stAdcData.AdcGain[_GREEN], 255, 0, _DET_OVERRANGE_MIN);
6764   1          COsdFxShowNumber(ROW(7), COL(21), stAdcData.AdcGain[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | 
             -_SHOW_3));
6765   1          CAdjustAdcGain();
6766   1      }
6767          
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 114 

6768          void COsdExitFGainGAdj(void)
6769          {
6770   1          COsdExitFGainR();
6771   1      }
6772          
6773          //----------------------------------------------------------------------------------------------------
6774          // OSD "FGainB" Operation
6775          //----------------------------------------------------------------------------------------------------
6776          void COsdMenuFGainB(void)
6777          {
6778   1          COsdDispWindowHPoint(ROW(3), 154, 60, 2, 50, _MENU_F_GAIN_B_ADJ);
6779   1      }
6780          
6781          void COsdLeftFGainB(void)
6782          {
6783   1          COsdDispWindowHPoint(ROW(3), 154, 60, 0, 12, _MENU_F_GAIN_R);
6784   1      }
6785          
6786          void COsdRightFGainB(void)
6787          {
6788   1          COsdDispWindowHPoint(ROW(3), 154, 60, 1, 12, _MENU_F_GAIN_G);
6789   1      }
6790          
6791          void COsdExitFGainB(void)
6792          {
6793   1          COsdExitFGainR();
6794   1      }
6795          
6796          //----------------------------------------------------------------------------------------------------
6797          // OSD "FGainBAdj" Operation
6798          //----------------------------------------------------------------------------------------------------
6799          void COsdMenuFGainBAdj(void)
6800          {
6801   1          COsdDispWindowHPoint(ROW(3), 154, 60, 2, 12, _MENU_F_GAIN_B);
6802   1          ucOsdEventMsg = _SAVE_EE_ADCDATA_MSG;
6803   1      }
6804          
6805          void COsdLeftFGainBAdj(void)
6806          {
6807   1          stAdcData.AdcGain[_BLUE] = COsdFxDetOverRange(stAdcData.AdcGain[_BLUE], 255, 0, _DET_OVERRANGE_MAX);
6808   1          COsdFxShowNumber(ROW(7), COL(26), stAdcData.AdcGain[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | _
             -SHOW_3));
6809   1          CAdjustAdcGain();
6810   1      }
6811          
6812          void COsdRightFGainBAdj(void)
6813          {
6814   1          stAdcData.AdcGain[_BLUE] = COsdFxDetOverRange(stAdcData.AdcGain[_BLUE], 255, 0, _DET_OVERRANGE_MIN);
6815   1          COsdFxShowNumber(ROW(7), COL(26), stAdcData.AdcGain[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_OFF | _
             -SHOW_3));
6816   1          CAdjustAdcGain();
6817   1      }
6818          
6819          void COsdExitFGainBAdj(void)
6820          {
6821   1          COsdExitFGainR();
6822   1      }
6823          
6824          //----------------------------------------------------------------------------------------------------
6825          // OSD "FColor9300" Operation
6826          //----------------------------------------------------------------------------------------------------
6827          void COsdMenuFColor9300(void)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 115 

6828          {
6829   1          COsdDispWindowHPoint(ROW(4), 154, 60, 0, 12, _MENU_F_COLOR9300_R);
6830   1      }
6831          
6832          void COsdLeftFColor9300(void)
6833          {
6834   1          COsdDispWindowPoint(5, _MENU_F_COLOR6500);
6835   1          SET_COLOR_TEMP_TYPE(_CT_6500);
6836   1          COsdDispColorTempSelect();
6837   1      }
6838          
6839          void COsdRightFColor9300(void)
6840          {
6841   1          COsdDispWindowPoint(3, _MENU_F_GAIN);
6842   1          CEepromLoadSystemData();
6843   1      
6844   1          COsdDispColorTempSelect();
6845   1      }
6846          
6847          void COsdExitFColor9300(void)
6848          {
6849   1      
6850   1      }
6851          
6852          //----------------------------------------------------------------------------------------------------
6853          // OSD "FColor9300R" Operation
6854          //----------------------------------------------------------------------------------------------------
6855          void COsdMenuFColor9300R(void)
6856          {
6857   1          COsdDispWindowHPoint(ROW(4), 154, 60, 0, 50, _MENU_F_COLOR9300_R_ADJ);
6858   1      }
6859          
6860          void COsdLeftFColor9300R(void)
6861          {
6862   1          COsdDispWindowHPoint(ROW(4), 154, 60, 1, 12, _MENU_F_COLOR9300_G);
6863   1      }
6864          
6865          void COsdRightFColor9300R(void)
6866          {
6867   1          COsdDispWindowHPoint(ROW(4), 154, 60, 2, 12, _MENU_F_COLOR9300_B);
6868   1      }
6869          
6870          void COsdExitFColor9300R(void)
6871          {
6872   1          COsdFxCloseWindow(WINNO(2));
6873   1          ucOsdState = _MENU_F_COLOR9300;
6874   1      }
6875          
6876          //----------------------------------------------------------------------------------------------------
6877          // OSD "FColor9300RAdj" Operation
6878          //----------------------------------------------------------------------------------------------------
6879          void COsdMenuFColor9300RAdj(void)
6880          {
6881   1          COsdDispWindowHPoint(ROW(4), 154, 60, 0, 12, _MENU_F_COLOR9300_R);
6882   1      }
6883          
6884          void COsdLeftFColor9300RAdj(void)
6885          {
6886   1          SET_COLOR_TEMP_TYPE(_CT_9300);
6887   1          CEepromLoadColorTempData();
6888   1          stColorTempData.ColorTemp[_RED] = COsdFxDetOverRange(stColorTempData.ColorTemp[_RED], 255, 0, _DET_OVE
             -RRANGE_MAX);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 116 

6889   1          COsdFxShowNumber(ROW(9), COL(16), stColorTempData.ColorTemp[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_
             -OFF | _SHOW_3));
6890   1          CAdjustContrast(stConBriData.Contrast);
6891   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
6892   1      }
6893          
6894          void COsdRightFColor9300RAdj(void)
6895          {
6896   1          SET_COLOR_TEMP_TYPE(_CT_9300);
6897   1          CEepromLoadColorTempData();
6898   1          stColorTempData.ColorTemp[_RED] = COsdFxDetOverRange(stColorTempData.ColorTemp[_RED], 255, 0, _DET_OVE
             -RRANGE_MIN);
6899   1          COsdFxShowNumber(ROW(9), COL(16), stColorTempData.ColorTemp[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER_
             -OFF | _SHOW_3));
6900   1          CAdjustContrast(stConBriData.Contrast);
6901   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
6902   1      }
6903          
6904          void COsdExitFColor9300RAdj(void)
6905          {
6906   1          COsdExitFColor9300R();
6907   1      }
6908          
6909          //----------------------------------------------------------------------------------------------------
6910          // OSD "FColor9300G" Operation
6911          //----------------------------------------------------------------------------------------------------
6912          void COsdMenuFColor9300G(void)
6913          {
6914   1          COsdDispWindowHPoint(ROW(4), 154, 60, 1, 50, _MENU_F_COLOR9300_G_ADJ);
6915   1      }
6916          
6917          void COsdLeftFColor9300G(void)
6918          {
6919   1          COsdDispWindowHPoint(ROW(4), 154, 60, 2, 12, _MENU_F_COLOR9300_B);
6920   1      }
6921          
6922          void COsdRightFColor9300G(void)
6923          {
6924   1          COsdDispWindowHPoint(ROW(4), 154, 60, 0, 12, _MENU_F_COLOR9300_R);
6925   1      }
6926          
6927          void COsdExitFColor9300G(void)
6928          {
6929   1          COsdExitFColor9300R();
6930   1      }
6931          
6932          //----------------------------------------------------------------------------------------------------
6933          // OSD "FColor9300GAdj" Operation
6934          //----------------------------------------------------------------------------------------------------
6935          void COsdMenuFColor9300GAdj(void)
6936          {
6937   1          COsdDispWindowHPoint(ROW(4), 154, 60, 1, 12, _MENU_F_COLOR9300_G);
6938   1      }
6939          
6940          void COsdLeftFColor9300GAdj(void)
6941          {
6942   1          SET_COLOR_TEMP_TYPE(_CT_9300);
6943   1          CEepromLoadColorTempData();
6944   1          stColorTempData.ColorTemp[_GREEN] = COsdFxDetOverRange(stColorTempData.ColorTemp[_GREEN], 255, 0, _DET
             -_OVERRANGE_MAX);
6945   1          COsdFxShowNumber(ROW(9), COL(21), stColorTempData.ColorTemp[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_3));
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 117 

6946   1          CAdjustContrast(stConBriData.Contrast);
6947   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
6948   1      }
6949          
6950          void COsdRightFColor9300GAdj(void)
6951          {
6952   1          SET_COLOR_TEMP_TYPE(_CT_9300);
6953   1          CEepromLoadColorTempData();
6954   1          stColorTempData.ColorTemp[_GREEN] = COsdFxDetOverRange(stColorTempData.ColorTemp[_GREEN], 255, 0, _DET
             -_OVERRANGE_MIN);
6955   1          COsdFxShowNumber(ROW(9), COL(21), stColorTempData.ColorTemp[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_3));
6956   1          CAdjustContrast(stConBriData.Contrast);
6957   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
6958   1      }
6959          
6960          void COsdExitFColor9300GAdj(void)
6961          {
6962   1          COsdExitFColor9300R();
6963   1      }
6964          
6965          //----------------------------------------------------------------------------------------------------
6966          // OSD "FColor9300B" Operation
6967          //----------------------------------------------------------------------------------------------------
6968          void COsdMenuFColor9300B(void)
6969          {
6970   1          COsdDispWindowHPoint(ROW(4), 154, 60, 2, 50, _MENU_F_COLOR9300_B_ADJ);
6971   1      }
6972          
6973          void COsdLeftFColor9300B(void)
6974          {
6975   1          COsdDispWindowHPoint(ROW(4), 154, 60, 0, 12, _MENU_F_COLOR9300_R);
6976   1      }
6977          
6978          void COsdRightFColor9300B(void)
6979          {
6980   1          COsdDispWindowHPoint(ROW(4), 154, 60, 1, 12, _MENU_F_COLOR9300_G);
6981   1      }
6982          
6983          void COsdExitFColor9300B(void)
6984          {
6985   1          COsdExitFColor9300R();
6986   1      }
6987          
6988          //----------------------------------------------------------------------------------------------------
6989          // OSD "FColor9300BAdj" Operation
6990          //----------------------------------------------------------------------------------------------------
6991          void COsdMenuFColor9300BAdj(void)
6992          {
6993   1          COsdDispWindowHPoint(ROW(4), 154, 60, 2, 12, _MENU_F_COLOR9300_B);
6994   1      }
6995          
6996          void COsdLeftFColor9300BAdj(void)
6997          {
6998   1          SET_COLOR_TEMP_TYPE(_CT_9300);
6999   1          CEepromLoadColorTempData();
7000   1          stColorTempData.ColorTemp[_BLUE] = COsdFxDetOverRange(stColorTempData.ColorTemp[_BLUE], 255, 0, _DET_O
             -VERRANGE_MAX);
7001   1          COsdFxShowNumber(ROW(9), COL(26), stColorTempData.ColorTemp[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER
             -_OFF | _SHOW_3));
7002   1          CAdjustContrast(stConBriData.Contrast);
7003   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 118 

7004   1      }
7005          
7006          void COsdRightFColor9300BAdj(void)
7007          {
7008   1          SET_COLOR_TEMP_TYPE(_CT_9300);
7009   1          CEepromLoadColorTempData();
7010   1          stColorTempData.ColorTemp[_BLUE] = COsdFxDetOverRange(stColorTempData.ColorTemp[_BLUE], 255, 0, _DET_O
             -VERRANGE_MIN);
7011   1          COsdFxShowNumber(ROW(9), COL(26), stColorTempData.ColorTemp[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER
             -_OFF | _SHOW_3));
7012   1          CAdjustContrast(stConBriData.Contrast);
7013   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7014   1      }
7015          
7016          void COsdExitFColor9300BAdj(void)
7017          {
7018   1          COsdExitFColor9300R();
7019   1      }
7020          
7021          //----------------------------------------------------------------------------------------------------
7022          // OSD "FColor6500" Operation
7023          //----------------------------------------------------------------------------------------------------
7024          void COsdMenuFColor6500(void)
7025          {
7026   1          COsdDispWindowHPoint(ROW(5), 154, 60, 0, 12, _MENU_F_COLOR6500_R);
7027   1      }
7028          
7029          void COsdLeftFColor6500(void)
7030          {
7031   1          COsdDispWindowPoint(6, _MENU_F_COLOR5800);
7032   1          SET_COLOR_TEMP_TYPE(_CT_5800);
7033   1          COsdDispColorTempSelect();
7034   1      }
7035          
7036          void COsdRightFColor6500(void)
7037          {
7038   1          COsdDispWindowPoint(4, _MENU_F_COLOR9300);
7039   1          SET_COLOR_TEMP_TYPE(_CT_9300);
7040   1          COsdDispColorTempSelect();
7041   1      }
7042          
7043          void COsdExitFColor6500(void)
7044          {
7045   1      
7046   1      }
7047          
7048          //----------------------------------------------------------------------------------------------------
7049          // OSD "FColor6500R" Operation
7050          //----------------------------------------------------------------------------------------------------
7051          void COsdMenuFColor6500R(void)
7052          {
7053   1          COsdDispWindowHPoint(ROW(5), 154, 60, 0, 50, _MENU_F_COLOR6500_R_ADJ);
7054   1      }
7055          
7056          void COsdLeftFColor6500R(void)
7057          {
7058   1          COsdDispWindowHPoint(ROW(5), 154, 60, 1, 12, _MENU_F_COLOR6500_G);
7059   1      }
7060          
7061          void COsdRightFColor6500R(void)
7062          {
7063   1          COsdDispWindowHPoint(ROW(5), 154, 60, 2, 12, _MENU_F_COLOR6500_B);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 119 

7064   1      }
7065          
7066          void COsdExitFColor6500R(void)
7067          {
7068   1          COsdFxCloseWindow(WINNO(2));
7069   1          ucOsdState = _MENU_F_COLOR6500;
7070   1      }
7071          
7072          //----------------------------------------------------------------------------------------------------
7073          // OSD "FColor6500RAdj" Operation
7074          //----------------------------------------------------------------------------------------------------
7075          void COsdMenuFColor6500RAdj(void)
7076          {
7077   1          COsdDispWindowHPoint(ROW(5), 154, 60, 0, 12, _MENU_F_COLOR6500_R);
7078   1      }
7079          
7080          void COsdLeftFColor6500RAdj(void)
7081          {
7082   1          SET_COLOR_TEMP_TYPE(_CT_6500);
7083   1          CEepromLoadColorTempData();
7084   1          stColorTempData.ColorTemp[_RED] = COsdFxDetOverRange(stColorTempData.ColorTemp[_RED], 255, 0, _DET_OVE
             -RRANGE_MAX);
7085   1          COsdFxShowNumber(ROW(11), COL(16), stColorTempData.ColorTemp[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER
             -_OFF | _SHOW_3));
7086   1          CAdjustContrast(stConBriData.Contrast);
7087   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7088   1      }
7089          
7090          void COsdRightFColor6500RAdj(void)
7091          {
7092   1          SET_COLOR_TEMP_TYPE(_CT_6500);
7093   1          CEepromLoadColorTempData();
7094   1          stColorTempData.ColorTemp[_RED] = COsdFxDetOverRange(stColorTempData.ColorTemp[_RED], 255, 0, _DET_OVE
             -RRANGE_MIN);
7095   1          COsdFxShowNumber(ROW(11), COL(16), stColorTempData.ColorTemp[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER
             -_OFF | _SHOW_3));
7096   1          CAdjustContrast(stConBriData.Contrast);
7097   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7098   1      }
7099          
7100          void COsdExitFColor6500RAdj(void)
7101          {
7102   1          COsdExitFColor6500R();
7103   1      }
7104          
7105          //----------------------------------------------------------------------------------------------------
7106          // OSD "FColor6500G" Operation
7107          //----------------------------------------------------------------------------------------------------
7108          void COsdMenuFColor6500G(void)
7109          {
7110   1          COsdDispWindowHPoint(ROW(5), 154, 60, 1, 50, _MENU_F_COLOR6500_G_ADJ);
7111   1      }
7112          
7113          void COsdLeftFColor6500G(void)
7114          {
7115   1          COsdDispWindowHPoint(ROW(5), 154, 60, 2, 12, _MENU_F_COLOR6500_B);
7116   1      }
7117          
7118          void COsdRightFColor6500G(void)
7119          {
7120   1          COsdDispWindowHPoint(ROW(5), 154, 60, 0, 12, _MENU_F_COLOR6500_R);
7121   1      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 120 

7122          
7123          void COsdExitFColor6500G(void)
7124          {
7125   1          COsdExitFColor6500R();
7126   1      }
7127          
7128          //----------------------------------------------------------------------------------------------------
7129          // OSD "FColor6500GAdj" Operation
7130          //----------------------------------------------------------------------------------------------------
7131          void COsdMenuFColor6500GAdj(void)
7132          {
7133   1          COsdDispWindowHPoint(ROW(5), 154, 60, 1, 12, _MENU_F_COLOR6500_G);
7134   1      }
7135          
7136          void COsdLeftFColor6500GAdj(void)
7137          {
7138   1          SET_COLOR_TEMP_TYPE(_CT_6500);
7139   1          CEepromLoadColorTempData();
7140   1          stColorTempData.ColorTemp[_GREEN] = COsdFxDetOverRange(stColorTempData.ColorTemp[_GREEN], 255, 0, _DET
             -_OVERRANGE_MAX);
7141   1          COsdFxShowNumber(ROW(11), COL(21), stColorTempData.ColorTemp[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMB
             -ER_OFF | _SHOW_3));
7142   1          CAdjustContrast(stConBriData.Contrast);
7143   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7144   1      }
7145          
7146          void COsdRightFColor6500GAdj(void)
7147          {
7148   1          SET_COLOR_TEMP_TYPE(_CT_6500);
7149   1          CEepromLoadColorTempData();
7150   1          stColorTempData.ColorTemp[_GREEN] = COsdFxDetOverRange(stColorTempData.ColorTemp[_GREEN], 255, 0, _DET
             -_OVERRANGE_MIN);
7151   1          COsdFxShowNumber(ROW(11), COL(21), stColorTempData.ColorTemp[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMB
             -ER_OFF | _SHOW_3));
7152   1          CAdjustContrast(stConBriData.Contrast);
7153   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7154   1      }
7155          
7156          void COsdExitFColor6500GAdj(void)
7157          {
7158   1          COsdExitFColor6500R();
7159   1      }
7160          
7161          //----------------------------------------------------------------------------------------------------
7162          // OSD "FColor6500B" Operation
7163          //----------------------------------------------------------------------------------------------------
7164          void COsdMenuFColor6500B(void)
7165          {
7166   1          COsdDispWindowHPoint(ROW(5), 154, 60, 2, 50, _MENU_F_COLOR6500_B_ADJ);
7167   1      }
7168          
7169          void COsdLeftFColor6500B(void)
7170          {
7171   1          COsdDispWindowHPoint(ROW(5), 154, 60, 0, 12, _MENU_F_COLOR6500_R);
7172   1      }
7173          
7174          void COsdRightFColor6500B(void)
7175          {
7176   1          COsdDispWindowHPoint(ROW(5), 154, 60, 1, 12, _MENU_F_COLOR6500_G);
7177   1      }
7178          
7179          void COsdExitFColor6500B(void)
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 121 

7180          {
7181   1          COsdExitFColor6500R();
7182   1      }
7183          
7184          //----------------------------------------------------------------------------------------------------
7185          // OSD "FColor6500BAdj" Operation
7186          //----------------------------------------------------------------------------------------------------
7187          void COsdMenuFColor6500BAdj(void)
7188          {
7189   1          COsdDispWindowHPoint(ROW(5), 154, 60, 2, 12, _MENU_F_COLOR6500_B);
7190   1      }
7191          
7192          void COsdLeftFColor6500BAdj(void)
7193          {
7194   1          SET_COLOR_TEMP_TYPE(_CT_6500);
7195   1          CEepromLoadColorTempData();
7196   1          stColorTempData.ColorTemp[_BLUE] = COsdFxDetOverRange(stColorTempData.ColorTemp[_BLUE], 255, 0, _DET_O
             -VERRANGE_MAX);
7197   1          COsdFxShowNumber(ROW(11), COL(26), stColorTempData.ColorTemp[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_3));
7198   1          CAdjustContrast(stConBriData.Contrast);
7199   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7200   1      }
7201          
7202          void COsdRightFColor6500BAdj(void)
7203          {
7204   1          SET_COLOR_TEMP_TYPE(_CT_6500);
7205   1          CEepromLoadColorTempData();
7206   1          stColorTempData.ColorTemp[_BLUE] = COsdFxDetOverRange(stColorTempData.ColorTemp[_BLUE], 255, 0, _DET_O
             -VERRANGE_MIN);
7207   1          COsdFxShowNumber(ROW(11), COL(26), stColorTempData.ColorTemp[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_3));
7208   1          CAdjustContrast(stConBriData.Contrast);
7209   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7210   1      }
7211          
7212          void COsdExitFColor6500BAdj(void)
7213          {
7214   1          COsdExitFColor6500R();
7215   1      }
7216          
7217          //----------------------------------------------------------------------------------------------------
7218          // OSD "FColor5800" Operation
7219          //----------------------------------------------------------------------------------------------------
7220          void COsdMenuFColor5800(void)
7221          {
7222   1          COsdDispWindowHPoint(ROW(6), 154, 60, 0, 12, _MENU_F_COLOR5800_R);
7223   1      }
7224          
7225          void COsdLeftFColor5800(void)
7226          {
7227   1          COsdDispWindowPoint(7, _MENU_F_SRGB);
7228   1          SET_COLOR_TEMP_TYPE(_CT_SRGB);
7229   1          COsdDispColorTempSelect();
7230   1      }
7231          
7232          void COsdRightFColor5800(void)
7233          {
7234   1          COsdDispWindowPoint(5, _MENU_F_COLOR6500);
7235   1          SET_COLOR_TEMP_TYPE(_CT_6500);
7236   1          COsdDispColorTempSelect();
7237   1      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 122 

7238          
7239          void COsdExitFColor5800(void)
7240          {
7241   1      
7242   1      }
7243          
7244          //----------------------------------------------------------------------------------------------------
7245          // OSD "FColor5800R" Operation
7246          //----------------------------------------------------------------------------------------------------
7247          void COsdMenuFColor5800R(void)
7248          {
7249   1          COsdDispWindowHPoint(ROW(6), 154, 60, 0, 50, _MENU_F_COLOR5800_R_ADJ);
7250   1      }
7251          
7252          void COsdLeftFColor5800R(void)
7253          {
7254   1          COsdDispWindowHPoint(ROW(6), 154, 60, 1, 12, _MENU_F_COLOR5800_G);
7255   1      }
7256          
7257          void COsdRightFColor5800R(void)
7258          {
7259   1          COsdDispWindowHPoint(ROW(6), 154, 60, 2, 12, _MENU_F_COLOR5800_B);
7260   1      }
7261          
7262          void COsdExitFColor5800R(void)
7263          {
7264   1          COsdFxCloseWindow(WINNO(2));
7265   1          ucOsdState = _MENU_F_COLOR5800;
7266   1      }
7267          
7268          //----------------------------------------------------------------------------------------------------
7269          // OSD "FColor5800RAdj" Operation
7270          //----------------------------------------------------------------------------------------------------
7271          void COsdMenuFColor5800RAdj(void)
7272          {
7273   1          COsdDispWindowHPoint(ROW(6), 154, 60, 0, 12, _MENU_F_COLOR5800_R);
7274   1      }
7275          
7276          void COsdLeftFColor5800RAdj(void)
7277          {
7278   1          SET_COLOR_TEMP_TYPE(_CT_5800);
7279   1          CEepromLoadColorTempData();
7280   1          stColorTempData.ColorTemp[_RED] = COsdFxDetOverRange(stColorTempData.ColorTemp[_RED], 255, 0, _DET_OVE
             -RRANGE_MAX);
7281   1          COsdFxShowNumber(ROW(13), COL(16), stColorTempData.ColorTemp[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER
             -_OFF | _SHOW_3));
7282   1          CAdjustContrast(stConBriData.Contrast);
7283   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7284   1      }
7285          
7286          void COsdRightFColor5800RAdj(void)
7287          {
7288   1          SET_COLOR_TEMP_TYPE(_CT_5800);
7289   1          CEepromLoadColorTempData();
7290   1          stColorTempData.ColorTemp[_RED] = COsdFxDetOverRange(stColorTempData.ColorTemp[_RED], 255, 0, _DET_OVE
             -RRANGE_MIN);
7291   1          COsdFxShowNumber(ROW(13), COL(16), stColorTempData.ColorTemp[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER
             -_OFF | _SHOW_3));
7292   1          CAdjustContrast(stConBriData.Contrast);
7293   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7294   1      }
7295          
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 123 

7296          void COsdExitFColor5800RAdj(void)
7297          {
7298   1          COsdExitFColor5800R();
7299   1      }
7300          
7301          //----------------------------------------------------------------------------------------------------
7302          // OSD "FColor5800G" Operation
7303          //----------------------------------------------------------------------------------------------------
7304          void COsdMenuFColor5800G(void)
7305          {
7306   1          COsdDispWindowHPoint(ROW(6), 154, 60, 1, 50, _MENU_F_COLOR5800_G_ADJ);
7307   1      }
7308          
7309          void COsdLeftFColor5800G(void)
7310          {
7311   1          COsdDispWindowHPoint(ROW(6), 154, 60, 2, 12, _MENU_F_COLOR5800_B);
7312   1      }
7313          
7314          void COsdRightFColor5800G(void)
7315          {
7316   1          COsdDispWindowHPoint(ROW(6), 154, 60, 0, 12, _MENU_F_COLOR5800_R);
7317   1      }
7318          
7319          void COsdExitFColor5800G(void)
7320          {
7321   1          COsdExitFColor5800R();
7322   1      }
7323          
7324          //----------------------------------------------------------------------------------------------------
7325          // OSD "FColor5800GAdj" Operation
7326          //----------------------------------------------------------------------------------------------------
7327          void COsdMenuFColor5800GAdj(void)
7328          {
7329   1          COsdDispWindowHPoint(ROW(6), 154, 60, 1, 12, _MENU_F_COLOR5800_G);
7330   1      }
7331          
7332          void COsdLeftFColor5800GAdj(void)
7333          {
7334   1          SET_COLOR_TEMP_TYPE(_CT_5800);
7335   1          CEepromLoadColorTempData();
7336   1          stColorTempData.ColorTemp[_GREEN] = COsdFxDetOverRange(stColorTempData.ColorTemp[_GREEN], 255, 0, _DET
             -_OVERRANGE_MAX);
7337   1          COsdFxShowNumber(ROW(13), COL(21), stColorTempData.ColorTemp[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMB
             -ER_OFF | _SHOW_3));
7338   1          CAdjustContrast(stConBriData.Contrast);
7339   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7340   1      }
7341          
7342          void COsdRightFColor5800GAdj(void)
7343          {
7344   1          SET_COLOR_TEMP_TYPE(_CT_5800);
7345   1          CEepromLoadColorTempData();
7346   1          stColorTempData.ColorTemp[_GREEN] = COsdFxDetOverRange(stColorTempData.ColorTemp[_GREEN], 255, 0, _DET
             -_OVERRANGE_MIN);
7347   1          COsdFxShowNumber(ROW(13), COL(21), stColorTempData.ColorTemp[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMB
             -ER_OFF | _SHOW_3));
7348   1          CAdjustContrast(stConBriData.Contrast);
7349   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7350   1      }
7351          
7352          void COsdExitFColor5800GAdj(void)
7353          {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 124 

7354   1          COsdExitFColor5800R();
7355   1      }
7356          
7357          //----------------------------------------------------------------------------------------------------
7358          // OSD "FColor5800B" Operation
7359          //----------------------------------------------------------------------------------------------------
7360          void COsdMenuFColor5800B(void)
7361          {
7362   1          COsdDispWindowHPoint(ROW(6), 154, 60, 2, 50, _MENU_F_COLOR5800_B_ADJ);
7363   1      }
7364          
7365          void COsdLeftFColor5800B(void)
7366          {
7367   1          COsdDispWindowHPoint(ROW(6), 154, 60, 0, 12, _MENU_F_COLOR5800_R);
7368   1      }
7369          
7370          void COsdRightFColor5800B(void)
7371          {
7372   1          COsdDispWindowHPoint(ROW(6), 154, 60, 1, 12, _MENU_F_COLOR5800_G);
7373   1      }
7374          
7375          void COsdExitFColor5800B(void)
7376          {
7377   1          COsdExitFColor5800R();
7378   1      }
7379          
7380          //----------------------------------------------------------------------------------------------------
7381          // OSD "FColor5800BAdj" Operation
7382          //----------------------------------------------------------------------------------------------------
7383          void COsdMenuFColor5800BAdj(void)
7384          {
7385   1          COsdDispWindowHPoint(ROW(6), 154, 60, 2, 12, _MENU_F_COLOR5800_B);
7386   1      }
7387          
7388          void COsdLeftFColor5800BAdj(void)
7389          {
7390   1          SET_COLOR_TEMP_TYPE(_CT_5800);
7391   1          CEepromLoadColorTempData();
7392   1          stColorTempData.ColorTemp[_BLUE] = COsdFxDetOverRange(stColorTempData.ColorTemp[_BLUE], 255, 0, _DET_O
             -VERRANGE_MAX);
7393   1          COsdFxShowNumber(ROW(13), COL(26), stColorTempData.ColorTemp[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_3));
7394   1          CAdjustContrast(stConBriData.Contrast);
7395   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7396   1      }
7397          
7398          void COsdRightFColor5800BAdj(void)
7399          {
7400   1          SET_COLOR_TEMP_TYPE(_CT_5800);
7401   1          CEepromLoadColorTempData();
7402   1          stColorTempData.ColorTemp[_BLUE] = COsdFxDetOverRange(stColorTempData.ColorTemp[_BLUE], 255, 0, _DET_O
             -VERRANGE_MIN);
7403   1          COsdFxShowNumber(ROW(13), COL(26), stColorTempData.ColorTemp[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_3));
7404   1          CAdjustContrast(stConBriData.Contrast);
7405   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7406   1      }
7407          
7408          void COsdExitFColor5800BAdj(void)
7409          {
7410   1          COsdExitFColor5800R();
7411   1      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 125 

7412          
7413          //----------------------------------------------------------------------------------------------------
7414          // OSD "FSrgb" Operation
7415          //----------------------------------------------------------------------------------------------------
7416          void COsdMenuFSrgb(void)
7417          {
7418   1          COsdDispWindowHPoint(ROW(7), 154, 60, 0, 12, _MENU_F_SRGB_R);
7419   1      }
7420          
7421          void COsdLeftFSrgb(void)
7422          {
7423   1          COsdDispWindowPoint(8, _MENU_F_USER);
7424   1          SET_COLOR_TEMP_TYPE(_CT_USER);
7425   1          COsdDispColorTempSelect();
7426   1      }
7427          
7428          void COsdRightFSrgb(void)
7429          {
7430   1          COsdDispWindowPoint(6, _MENU_F_COLOR5800);
7431   1          SET_COLOR_TEMP_TYPE(_CT_5800);
7432   1          COsdDispColorTempSelect();
7433   1      }
7434          
7435          void COsdExitFSrgb(void)
7436          {
7437   1      
7438   1      }
7439          
7440          //----------------------------------------------------------------------------------------------------
7441          // OSD "FSrgbR" Operation
7442          //----------------------------------------------------------------------------------------------------
7443          void COsdMenuFSrgbR(void)
7444          {
7445   1          COsdDispWindowHPoint(ROW(7), 154, 60, 0, 50, _MENU_F_SRGB_R_ADJ);
7446   1      }
7447          
7448          void COsdLeftFSrgbR(void)
7449          {
7450   1          COsdDispWindowHPoint(ROW(7), 154, 60, 1, 12, _MENU_F_SRGB_G);
7451   1      }
7452          
7453          void COsdRightFSrgbR(void)
7454          {
7455   1          COsdDispWindowHPoint(ROW(7), 154, 60, 2, 12, _MENU_F_SRGB_B);
7456   1      }
7457          
7458          void COsdExitFSrgbR(void)
7459          {
7460   1          COsdFxCloseWindow(WINNO(2));
7461   1          ucOsdState = _MENU_F_SRGB;
7462   1      }
7463          
7464          //----------------------------------------------------------------------------------------------------
7465          // OSD "FSrgbRAdj" Operation
7466          //----------------------------------------------------------------------------------------------------
7467          void COsdMenuFSrgbRAdj(void)
7468          {
7469   1          COsdDispWindowHPoint(ROW(7), 154, 60, 0, 12, _MENU_F_SRGB_R);
7470   1      }
7471          
7472          void COsdLeftFSrgbRAdj(void)
7473          {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 126 

7474   1          SET_COLOR_TEMP_TYPE(_CT_SRGB);
7475   1          CEepromLoadColorTempData();
7476   1          stColorTempData.ColorTemp[_RED] = COsdFxDetOverRange(stColorTempData.ColorTemp[_RED], 255, 0, _DET_OVE
             -RRANGE_MAX);
7477   1          COsdFxShowNumber(ROW(15), COL(15), stColorTempData.ColorTemp[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER
             -_OFF | _SHOW_3));
7478   1          CAdjustContrast(stConBriData.Contrast);
7479   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7480   1      }
7481          
7482          void COsdRightFSrgbRAdj(void)
7483          {
7484   1          SET_COLOR_TEMP_TYPE(_CT_SRGB);
7485   1          CEepromLoadColorTempData();
7486   1          stColorTempData.ColorTemp[_RED] = COsdFxDetOverRange(stColorTempData.ColorTemp[_RED], 255, 0, _DET_OVE
             -RRANGE_MIN);
7487   1          COsdFxShowNumber(ROW(15), COL(15), stColorTempData.ColorTemp[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER
             -_OFF | _SHOW_3));
7488   1          CAdjustContrast(stConBriData.Contrast);
7489   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7490   1      }
7491          
7492          void COsdExitFSrgbRAdj(void)
7493          {
7494   1          COsdExitFSrgbR();
7495   1      }
7496          
7497          //----------------------------------------------------------------------------------------------------
7498          // OSD "FSrgbG" Operation
7499          //----------------------------------------------------------------------------------------------------
7500          void COsdMenuFSrgbG(void)
7501          {
7502   1          COsdDispWindowHPoint(ROW(7), 154, 60, 1, 50, _MENU_F_SRGB_G_ADJ);
7503   1      }
7504          
7505          void COsdLeftFSrgbG(void)
7506          {
7507   1          COsdDispWindowHPoint(ROW(7), 154, 60, 2, 12, _MENU_F_SRGB_B);
7508   1      }
7509          
7510          void COsdRightFSrgbG(void)
7511          {
7512   1          COsdDispWindowHPoint(ROW(7), 154, 60, 0, 12, _MENU_F_SRGB_R);
7513   1      }
7514          
7515          void COsdExitFSrgbG(void)
7516          {
7517   1          COsdExitFSrgbR();
7518   1      }
7519          
7520          //----------------------------------------------------------------------------------------------------
7521          // OSD "FSrgbGAdj" Operation
7522          //----------------------------------------------------------------------------------------------------
7523          void COsdMenuFSrgbGAdj(void)
7524          {
7525   1          COsdDispWindowHPoint(ROW(7), 154, 60, 1, 12, _MENU_F_SRGB_G);
7526   1      }
7527          
7528          void COsdLeftFSrgbGAdj(void)
7529          {
7530   1          SET_COLOR_TEMP_TYPE(_CT_SRGB);
7531   1          CEepromLoadColorTempData();
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 127 

7532   1          stColorTempData.ColorTemp[_GREEN] = COsdFxDetOverRange(stColorTempData.ColorTemp[_GREEN], 255, 0, _DET
             -_OVERRANGE_MAX);
7533   1          COsdFxShowNumber(ROW(15), COL(20), stColorTempData.ColorTemp[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMB
             -ER_OFF | _SHOW_3));
7534   1          CAdjustContrast(stConBriData.Contrast);
7535   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7536   1      }
7537          
7538          void COsdRightFSrgbGAdj(void)
7539          {
7540   1          SET_COLOR_TEMP_TYPE(_CT_SRGB);
7541   1          CEepromLoadColorTempData();
7542   1          stColorTempData.ColorTemp[_GREEN] = COsdFxDetOverRange(stColorTempData.ColorTemp[_GREEN], 255, 0, _DET
             -_OVERRANGE_MIN);
7543   1          COsdFxShowNumber(ROW(15), COL(20), stColorTempData.ColorTemp[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMB
             -ER_OFF | _SHOW_3));
7544   1          CAdjustContrast(stConBriData.Contrast);
7545   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7546   1      }
7547          
7548          void COsdExitFSrgbGAdj(void)
7549          {
7550   1          COsdExitFSrgbR();
7551   1      }
7552          
7553          //----------------------------------------------------------------------------------------------------
7554          // OSD "FSrgbB" Operation
7555          //----------------------------------------------------------------------------------------------------
7556          void COsdMenuFSrgbB(void)
7557          {
7558   1          COsdDispWindowHPoint(ROW(7), 154, 60, 2, 50, _MENU_F_SRGB_B_ADJ);
7559   1      }
7560          
7561          void COsdLeftFSrgbB(void)
7562          {
7563   1          COsdDispWindowHPoint(ROW(7), 154, 60, 0, 12, _MENU_F_SRGB_R);
7564   1      }
7565          
7566          void COsdRightFSrgbB(void)
7567          {
7568   1          COsdDispWindowHPoint(ROW(7), 154, 60, 1, 12, _MENU_F_SRGB_G);
7569   1      }
7570          
7571          void COsdExitFSrgbB(void)
7572          {
7573   1          COsdExitFSrgbR();
7574   1      }
7575          
7576          //----------------------------------------------------------------------------------------------------
7577          // OSD "FSrgbBAdj" Operation
7578          //----------------------------------------------------------------------------------------------------
7579          void COsdMenuFSrgbBAdj(void)
7580          {
7581   1          COsdDispWindowHPoint(ROW(7), 154, 60, 2, 12, _MENU_F_SRGB_B);
7582   1      }
7583          
7584          void COsdLeftFSrgbBAdj(void)
7585          {
7586   1          SET_COLOR_TEMP_TYPE(_CT_SRGB);
7587   1          CEepromLoadColorTempData();
7588   1          stColorTempData.ColorTemp[_BLUE] = COsdFxDetOverRange(stColorTempData.ColorTemp[_BLUE], 255, 0, _DET_O
             -VERRANGE_MAX);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 128 

7589   1          COsdFxShowNumber(ROW(15), COL(25), stColorTempData.ColorTemp[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_3));
7590   1          CAdjustContrast(stConBriData.Contrast);
7591   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7592   1      }
7593          
7594          void COsdRightFSrgbBAdj(void)
7595          {
7596   1          SET_COLOR_TEMP_TYPE(_CT_SRGB);
7597   1          CEepromLoadColorTempData();
7598   1          stColorTempData.ColorTemp[_BLUE] = COsdFxDetOverRange(stColorTempData.ColorTemp[_BLUE], 255, 0, _DET_O
             -VERRANGE_MIN);
7599   1          COsdFxShowNumber(ROW(15), COL(25), stColorTempData.ColorTemp[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_3));
7600   1          CAdjustContrast(stConBriData.Contrast);
7601   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7602   1      
7603   1      }
7604          
7605          void COsdExitFSrgbBAdj(void)
7606          {
7607   1          COsdExitFSrgbR();
7608   1      }
7609          
7610          //----------------------------------------------------------------------------------------------------
7611          // OSD "FUser" Operation
7612          //----------------------------------------------------------------------------------------------------
7613          void COsdMenuFUser(void)
7614          {
7615   1          COsdDispWindowHPoint(ROW(8), 154, 60, 0, 12, _MENU_F_USER_R);
7616   1      }
7617          
7618          void COsdLeftFUser(void)
7619          {
7620   1          COsdDispWindowPoint(9, _MENU_F_BRIGHT);
7621   1          CEepromLoadSystemData();
7622   1      
7623   1          COsdDispColorTempSelect();
7624   1      }
7625          
7626          void COsdRightFUser(void)
7627          {
7628   1          COsdDispWindowPoint(7, _MENU_F_SRGB);
7629   1          SET_COLOR_TEMP_TYPE(_CT_SRGB);
7630   1          COsdDispColorTempSelect();
7631   1      }
7632          
7633          void COsdExitFUser(void)
7634          {
7635   1      
7636   1      }
7637          
7638          //----------------------------------------------------------------------------------------------------
7639          // OSD "FUserR" Operation
7640          //----------------------------------------------------------------------------------------------------
7641          void COsdMenuFUserR(void)
7642          {
7643   1          COsdDispWindowHPoint(ROW(8), 154, 60, 0, 50, _MENU_F_USER_R_ADJ);
7644   1      }
7645          
7646          void COsdLeftFUserR(void)
7647          {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 129 

7648   1          COsdDispWindowHPoint(ROW(8), 154, 60, 1, 12, _MENU_F_USER_G);
7649   1      }
7650          
7651          void COsdRightFUserR(void)
7652          {
7653   1          COsdDispWindowHPoint(ROW(8), 154, 60, 2, 12, _MENU_F_USER_B);
7654   1      }
7655          
7656          void COsdExitFUserR(void)
7657          {
7658   1          COsdFxCloseWindow(WINNO(2));
7659   1          ucOsdState = _MENU_F_USER;
7660   1      }
7661          
7662          //----------------------------------------------------------------------------------------------------
7663          // OSD "FUserRAdj" Operation
7664          //----------------------------------------------------------------------------------------------------
7665          void COsdMenuFUserRAdj(void)
7666          {
7667   1          COsdDispWindowHPoint(ROW(8), 154, 60, 0, 12, _MENU_F_USER_R);
7668   1      }
7669          
7670          void COsdLeftFUserRAdj(void)
7671          {
7672   1          SET_COLOR_TEMP_TYPE(_CT_USER);
7673   1          CEepromLoadColorTempData();
7674   1          stColorTempData.ColorTemp[_RED] = COsdFxDetOverRange(stColorTempData.ColorTemp[_RED], 255, 0, _DET_OVE
             -RRANGE_MAX);
7675   1          COsdFxShowNumber(ROW(17), COL(16), stColorTempData.ColorTemp[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER
             -_OFF | _SHOW_3));
7676   1          CAdjustContrast(stConBriData.Contrast);
7677   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7678   1      }
7679          
7680          void COsdRightFUserRAdj(void)
7681          {
7682   1          SET_COLOR_TEMP_TYPE(_CT_USER);
7683   1          CEepromLoadColorTempData();
7684   1          stColorTempData.ColorTemp[_RED] = COsdFxDetOverRange(stColorTempData.ColorTemp[_RED], 255, 0, _DET_OVE
             -RRANGE_MIN);
7685   1          COsdFxShowNumber(ROW(17), COL(16), stColorTempData.ColorTemp[_RED], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBER
             -_OFF | _SHOW_3));
7686   1          CAdjustContrast(stConBriData.Contrast);
7687   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7688   1      }
7689          
7690          void COsdExitFUserRAdj(void)
7691          {
7692   1          COsdExitFUserR();
7693   1      }
7694          
7695          //----------------------------------------------------------------------------------------------------
7696          // OSD "FUserG" Operation
7697          //----------------------------------------------------------------------------------------------------
7698          void COsdMenuFUserG(void)
7699          {
7700   1          COsdDispWindowHPoint(ROW(8), 154, 60, 1, 50, _MENU_F_USER_G_ADJ);
7701   1      }
7702          
7703          void COsdLeftFUserG(void)
7704          {
7705   1          COsdDispWindowHPoint(ROW(8), 154, 60, 2, 12, _MENU_F_USER_B);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 130 

7706   1      }
7707          
7708          void COsdRightFUserG(void)
7709          {
7710   1          COsdDispWindowHPoint(ROW(8), 154, 60, 0, 12, _MENU_F_USER_R);
7711   1      }
7712          
7713          void COsdExitFUserG(void)
7714          {
7715   1          COsdExitFUserR();
7716   1      }
7717          
7718          //----------------------------------------------------------------------------------------------------
7719          // OSD "FUserGAdj" Operation
7720          //----------------------------------------------------------------------------------------------------
7721          void COsdMenuFUserGAdj(void)
7722          {
7723   1          COsdDispWindowHPoint(ROW(8), 154, 60, 1, 12, _MENU_F_USER_G);
7724   1      }
7725          
7726          void COsdLeftFUserGAdj(void)
7727          {
7728   1          SET_COLOR_TEMP_TYPE(_CT_USER);
7729   1          CEepromLoadColorTempData();
7730   1          stColorTempData.ColorTemp[_GREEN] = COsdFxDetOverRange(stColorTempData.ColorTemp[_GREEN], 255, 0, _DET
             -_OVERRANGE_MAX);
7731   1          COsdFxShowNumber(ROW(17), COL(21), stColorTempData.ColorTemp[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMB
             -ER_OFF | _SHOW_3));
7732   1          CAdjustContrast(stConBriData.Contrast);
7733   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7734   1      }
7735          
7736          void COsdRightFUserGAdj(void)
7737          {
7738   1          SET_COLOR_TEMP_TYPE(_CT_USER);
7739   1          CEepromLoadColorTempData();
7740   1          stColorTempData.ColorTemp[_GREEN] = COsdFxDetOverRange(stColorTempData.ColorTemp[_GREEN], 255, 0, _DET
             -_OVERRANGE_MIN);
7741   1          COsdFxShowNumber(ROW(17), COL(21), stColorTempData.ColorTemp[_GREEN], (_ALIGN_RIGHT | _FORCE_SHOW_NUMB
             -ER_OFF | _SHOW_3));
7742   1          CAdjustContrast(stConBriData.Contrast);
7743   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7744   1      }
7745          
7746          void COsdExitFUserGAdj(void)
7747          {
7748   1          COsdExitFUserR();
7749   1      }
7750          
7751          //----------------------------------------------------------------------------------------------------
7752          // OSD "FUserB" Operation
7753          //----------------------------------------------------------------------------------------------------
7754          void COsdMenuFUserB(void)
7755          {
7756   1          COsdDispWindowHPoint(ROW(8), 154, 60, 2, 50, _MENU_F_USER_B_ADJ);
7757   1      }
7758          
7759          void COsdLeftFUserB(void)
7760          {
7761   1          COsdDispWindowHPoint(ROW(8), 154, 60, 0, 12, _MENU_F_USER_R);
7762   1      }
7763          
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 131 

7764          void COsdRightFUserB(void)
7765          {
7766   1          COsdDispWindowHPoint(ROW(8), 154, 60, 1, 12, _MENU_F_USER_G);
7767   1      }
7768          
7769          void COsdExitFUserB(void)
7770          {
7771   1          COsdExitFUserR();
7772   1      }
7773          
7774          //----------------------------------------------------------------------------------------------------
7775          // OSD "FUserBAdj" Operation
7776          //----------------------------------------------------------------------------------------------------
7777          void COsdMenuFUserBAdj(void)
7778          {
7779   1          COsdDispWindowHPoint(ROW(8), 154, 60, 2, 12, _MENU_F_USER_B);
7780   1      }
7781          
7782          void COsdLeftFUserBAdj(void)
7783          {
7784   1          SET_COLOR_TEMP_TYPE(_CT_USER);
7785   1          CEepromLoadColorTempData();
7786   1          stColorTempData.ColorTemp[_BLUE] = COsdFxDetOverRange(stColorTempData.ColorTemp[_BLUE], 255, 0, _DET_O
             -VERRANGE_MAX);
7787   1          COsdFxShowNumber(ROW(17), COL(26), stColorTempData.ColorTemp[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_3));
7788   1          CAdjustContrast(stConBriData.Contrast);
7789   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7790   1      }
7791          
7792          void COsdRightFUserBAdj(void)
7793          {
7794   1          SET_COLOR_TEMP_TYPE(_CT_USER);
7795   1          CEepromLoadColorTempData();
7796   1          stColorTempData.ColorTemp[_BLUE] = COsdFxDetOverRange(stColorTempData.ColorTemp[_BLUE], 255, 0, _DET_O
             -VERRANGE_MIN);
7797   1          COsdFxShowNumber(ROW(17), COL(26), stColorTempData.ColorTemp[_BLUE], (_ALIGN_RIGHT | _FORCE_SHOW_NUMBE
             -R_OFF | _SHOW_3));
7798   1          CAdjustContrast(stConBriData.Contrast);
7799   1          ucOsdEventMsg = _SAVE_EE_COLORPROC1_MSG;
7800   1      }
7801          
7802          void COsdExitFUserBAdj(void)
7803          {
7804   1          COsdExitFUserR();
7805   1      }
7806          
7807          //----------------------------------------------------------------------------------------------------
7808          // OSD "FBright" Operation
7809          //----------------------------------------------------------------------------------------------------
7810          void COsdMenuFBright(void)
7811          {
7812   1          COsdDispWindowHPoint(ROW(9), 154, 54, 0, 38, _MENU_F_BRIGHT_ADJ);
7813   1      }
7814          
7815          void COsdLeftFBright(void)
7816          {
7817   1          COsdDispWindowPoint(10, _MENU_F_AUTO_CONFIG);
7818   1      }
7819          
7820          void COsdRightFBright(void)
7821          {
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 132 

7822   1          COsdDispWindowPoint(8, _MENU_F_USER);
7823   1          SET_COLOR_TEMP_TYPE(_CT_USER);
7824   1          COsdDispColorTempSelect();
7825   1      }
7826          
7827          void COsdExitFBright(void)
7828          {
7829   1      
7830   1      }
7831          
7832          //----------------------------------------------------------------------------------------------------
7833          // OSD "FBrightAdj" Operation
7834          //----------------------------------------------------------------------------------------------------
7835          void COsdMenuFBrightAdj(void)
7836          {
7837   1      ucOsdState = _MENU_DICOM_SETTING;
7838   1      if(GCMode==1)
7839   1      ucOsdEventMsg = _SAVE_LSLUMIDATA_MSG;
7840   1      else if(GCMode==2)
7841   1      ucOsdEventMsg = _SAVE_PWMLUMIDATA_MSG;
7842   1      }
7843          
7844          void COsdLeftFBrightAdj(void)
7845          {
7846   1      if(GCMode==1)
7847   1      {
7848   2          switch(stConBriData.Dicom)
7849   2              {
7850   3             case 0:
7851   3      COsdDispClearText(ROW(1), COL(14), 10, 1);
7852   3      stLSlumiData.DICOM350= COsdFxDetOverRange(stLSlumiData.DICOM350, 2000,200, _DET_OVERRANGE_MIN);
7853   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM350, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam
7854   3      COsdFxChange1bitColor(ROW(1), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7855   3                      break;
7856   3              case 1:
7857   3      COsdDispClearText(ROW(2), COL(14), 10, 1);
7858   3      stLSlumiData.DICOM400= COsdFxDetOverRange(stLSlumiData.DICOM400, 2000, 200, _DET_OVERRANGE_MIN);
7859   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM400, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam            
7860   3      COsdFxChange1bitColor(ROW(2), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7861   3                      break;
7862   3              case 2:
7863   3      COsdDispClearText(ROW(3), COL(14), 10, 1);
7864   3      stLSlumiData.DICOM450= COsdFxDetOverRange(stLSlumiData.DICOM450, 2000, 200, _DET_OVERRANGE_MIN);
7865   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM450, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam            
7866   3      COsdFxChange1bitColor(ROW(3), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7867   3                      break;
7868   3              case 3:
7869   3      COsdDispClearText(ROW(4), COL(14), 10, 1);
7870   3      stLSlumiData.DICOM500= COsdFxDetOverRange(stLSlumiData.DICOM500, 2000, 200, _DET_OVERRANGE_MIN);
7871   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM500, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam            
7872   3      COsdFxChange1bitColor(ROW(4), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7873   3                      break;
7874   3              case 4:
7875   3      COsdDispClearText(ROW(5), COL(14), 10, 1);
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 133 

7876   3      stLSlumiData.DICOM550= COsdFxDetOverRange(stLSlumiData.DICOM550, 2000, 200, _DET_OVERRANGE_MIN);
7877   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM550, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam            
7878   3      COsdFxChange1bitColor(ROW(5), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7879   3                      break;
7880   3              case 5:
7881   3      COsdDispClearText(ROW(6), COL(14), 10, 1);
7882   3      stLSlumiData.DICOM600= COsdFxDetOverRange(stLSlumiData.DICOM600, 2000, 200, _DET_OVERRANGE_MIN);
7883   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM600, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam            
7884   3      COsdFxChange1bitColor(ROW(6), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7885   3                      break;
7886   3              case 6:
7887   3      COsdDispClearText(ROW(7), COL(14), 10, 1);
7888   3      stLSlumiData.DICOM650= COsdFxDetOverRange(stLSlumiData.DICOM650, 2000, 200, _DET_OVERRANGE_MIN);
7889   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM650, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam            
7890   3      COsdFxChange1bitColor(ROW(7), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7891   3                      break;
7892   3              case 7:
7893   3      COsdDispClearText(ROW(8), COL(14), 10, 1);
7894   3      stLSlumiData.DICOM700= COsdFxDetOverRange(stLSlumiData.DICOM700, 2000, 200, _DET_OVERRANGE_MIN);
7895   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM700, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam            
7896   3      COsdFxChange1bitColor(ROW(8), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7897   3                      break;
7898   3              default:
7899   3                  break;
7900   3              }
7901   2      }
7902   1      else if(GCMode==2)
7903   1      {
7904   2          switch(stConBriData.Dicom)
7905   2              {
7906   3             case 0:          
7907   3      COsdDispClearText(ROW(1), COL(14), 10, 1);
7908   3      stPWMlumiData.DICOM350= COsdFxDetOverRange(stPWMlumiData.DICOM350, 3000,0, _DET_OVERRANGE_MIN);
7909   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM350, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam
7910   3      COsdFxChange1bitColor(ROW(1), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7911   3      break;
7912   3              case 1:
7913   3      COsdDispClearText(ROW(2), COL(14), 10, 1);
7914   3      stPWMlumiData.DICOM400= COsdFxDetOverRange(stPWMlumiData.DICOM400, 3000, 0, _DET_OVERRANGE_MIN);
7915   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM400, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam           
7916   3      COsdFxChange1bitColor(ROW(2), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7917   3                      break;
7918   3              case 2:
7919   3      COsdDispClearText(ROW(3), COL(14), 10, 1);
7920   3      stPWMlumiData.DICOM450= COsdFxDetOverRange(stPWMlumiData.DICOM450, 3000, 0, _DET_OVERRANGE_MIN);
7921   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM450, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam           
7922   3      COsdFxChange1bitColor(ROW(3), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7923   3                      break;
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 134 

7924   3              case 3:
7925   3      COsdDispClearText(ROW(4), COL(14), 10, 1);
7926   3      stPWMlumiData.DICOM500= COsdFxDetOverRange(stPWMlumiData.DICOM500, 3000, 0, _DET_OVERRANGE_MIN);
7927   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM500, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam           
7928   3      COsdFxChange1bitColor(ROW(4), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7929   3                      break;
7930   3              case 4:
7931   3      COsdDispClearText(ROW(5), COL(14), 10, 1);
7932   3      stPWMlumiData.DICOM550= COsdFxDetOverRange(stPWMlumiData.DICOM550, 3000, 0, _DET_OVERRANGE_MIN);
7933   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM550, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam           
7934   3      COsdFxChange1bitColor(ROW(5), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7935   3                      break;
7936   3              case 5:
7937   3      COsdDispClearText(ROW(6), COL(14), 10, 1);
7938   3      stPWMlumiData.DICOM600= COsdFxDetOverRange(stPWMlumiData.DICOM600, 3000, 0, _DET_OVERRANGE_MIN);
7939   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM600, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam           
7940   3      COsdFxChange1bitColor(ROW(6), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7941   3                      break;
7942   3              case 6:
7943   3      COsdDispClearText(ROW(7), COL(14), 10, 1);
7944   3      stPWMlumiData.DICOM650= COsdFxDetOverRange(stPWMlumiData.DICOM650, 3000, 0, _DET_OVERRANGE_MIN);
7945   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM650, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam           
7946   3      COsdFxChange1bitColor(ROW(7), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7947   3                      break;
7948   3              case 7:
7949   3      COsdDispClearText(ROW(8), COL(14), 10, 1);
7950   3      stPWMlumiData.DICOM700= COsdFxDetOverRange(stPWMlumiData.DICOM700, 3000, 0, _DET_OVERRANGE_MIN);
7951   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM700, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam           
7952   3      COsdFxChange1bitColor(ROW(8), COL(1), WIDTH(18), HEIGHT(1), FGCOLOR(_CP_SELECTBOTTOM), BGCOLOR(_CP_BLACK))
             -;
7953   3                      break;
7954   3              default:
7955   3                  break;
7956   3      }
7957   2      }
7958   1      }
7959          
7960          void COsdRightFBrightAdj(void)
7961          {
7962   1      if(GCMode==1)
7963   1              {
7964   2          switch(stConBriData.Dicom)
7965   2              {
7966   3             case 0:
7967   3      stLSlumiData.DICOM350= COsdFxDetOverRange(stLSlumiData.DICOM350, 2000, 200, _DET_OVERRANGE_MAX);
7968   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM350, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam
7969   3              break;
7970   3              case 1:
7971   3      stLSlumiData.DICOM400= COsdFxDetOverRange(stLSlumiData.DICOM400, 2000, 200, _DET_OVERRANGE_MAX);
7972   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM400, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam            
7973   3                      break;
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 135 

7974   3              case 2:
7975   3      stLSlumiData.DICOM450= COsdFxDetOverRange(stLSlumiData.DICOM450, 2000, 200, _DET_OVERRANGE_MAX);
7976   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM450, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam            
7977   3                      break;
7978   3              case 3:
7979   3      stLSlumiData.DICOM500= COsdFxDetOverRange(stLSlumiData.DICOM500, 2000, 200, _DET_OVERRANGE_MAX);
7980   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM500, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam            
7981   3                      break;
7982   3              case 4:
7983   3      stLSlumiData.DICOM550= COsdFxDetOverRange(stLSlumiData.DICOM550, 2000, 200, _DET_OVERRANGE_MAX);
7984   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM550, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam            
7985   3                      break;
7986   3              case 5:
7987   3      stLSlumiData.DICOM600= COsdFxDetOverRange(stLSlumiData.DICOM600, 2000, 200, _DET_OVERRANGE_MAX);
7988   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM600, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam            
7989   3                      break;
7990   3              case 6:
7991   3      stLSlumiData.DICOM650= COsdFxDetOverRange(stLSlumiData.DICOM650, 2000, 200, _DET_OVERRANGE_MAX);
7992   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM650, (_ALIGN_LEFT | _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam            
7993   3                      break;
7994   3              case 7:
7995   3      stLSlumiData.DICOM700= COsdFxDetOverRange(stLSlumiData.DICOM700, 2000, 200, _DET_OVERRANGE_MAX);
7996   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stLSlumiData.DICOM700, (_ALIGN_LEFT| _FORCE_SHOW_NUMB
             -ER_OFF | _SHOW_3));//adam             
7997   3                      break;
7998   3              default:
7999   3                  break;
8000   3              }
8001   2              }
8002   1      else if(GCMode==2)
8003   1      {
8004   2          switch(stConBriData.Dicom)
8005   2              {
8006   3             case 0:
8007   3      stPWMlumiData.DICOM350= COsdFxDetOverRange(stPWMlumiData.DICOM350, 3000, 0, _DET_OVERRANGE_MAX);
8008   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM350, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam
8009   3              break;
8010   3              case 1:
8011   3      stPWMlumiData.DICOM400= COsdFxDetOverRange(stPWMlumiData.DICOM400, 3000, 0, _DET_OVERRANGE_MAX);
8012   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM400, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam           
8013   3                      break;
8014   3              case 2:
8015   3      stPWMlumiData.DICOM450= COsdFxDetOverRange(stPWMlumiData.DICOM450, 3000, 0, _DET_OVERRANGE_MAX);
8016   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM450, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam           
8017   3                      break;
8018   3              case 3:
8019   3      stPWMlumiData.DICOM500= COsdFxDetOverRange(stPWMlumiData.DICOM500, 3000, 0, _DET_OVERRANGE_MAX);
8020   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM500, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam           
8021   3                      break;
8022   3              case 4:
8023   3      stPWMlumiData.DICOM550= COsdFxDetOverRange(stPWMlumiData.DICOM550, 3000, 0, _DET_OVERRANGE_MAX);
8024   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM550, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam           
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 136 

8025   3                      break;
8026   3              case 5:
8027   3      stPWMlumiData.DICOM600= COsdFxDetOverRange(stPWMlumiData.DICOM600, 3000, 0, _DET_OVERRANGE_MAX);
8028   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM600, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam           
8029   3                      break;
8030   3              case 6:
8031   3      stPWMlumiData.DICOM650= COsdFxDetOverRange(stPWMlumiData.DICOM650, 3000, 0, _DET_OVERRANGE_MAX);
8032   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM650, (_ALIGN_LEFT | _FORCE_SHOW_NU
             -MBER_OFF | _SHOW_3));//adam           
8033   3                      break;
8034   3              case 7:
8035   3      stPWMlumiData.DICOM700= COsdFxDetOverRange(stPWMlumiData.DICOM700, 3000, 0, _DET_OVERRANGE_MAX);
8036   3      COsdFxShowNumber(ROW(1+stConBriData.Dicom), COL(14), stPWMlumiData.DICOM700, (_ALIGN_LEFT| _FORCE_SHOW_NUM
             -BER_OFF | _SHOW_3));//adam            
8037   3                      break;
8038   3              default:
8039   3                  break;
8040   3            }
8041   2              }
8042   1      }
8043          
8044          void COsdExitFBrightAdj(void)
8045          {
8046   1          COsdMenuFBrightAdj();
8047   1      }
8048          
8049          //----------------------------------------------------------------------------------------------------
8050          // OSD "AutoConfig" Operation
8051          //----------------------------------------------------------------------------------------------------
8052          void COsdMenuFAutoConfig(void)
8053          {
8054   1      
8055   1      }
8056          
8057          void COsdLeftFAutoConfig(void)
8058          {
8059   1          COsdDispWindowPoint(11, _MENU_F_EXIT);
8060   1      }
8061          
8062          void COsdRightFAutoConfig(void)
8063          {
8064   1          COsdDispWindowPoint(9, _MENU_F_BRIGHT);
8065   1      }
8066          
8067          void COsdExitFAutoConfig(void)
8068          {
8069   1      
8070   1      }
8071          
8072          //----------------------------------------------------------------------------------------------------
8073          // OSD "FExit" Operation
8074          //----------------------------------------------------------------------------------------------------
8075          void COsdMenuFExit(void)
8076          {
8077   1          COsdFxDisableOsd();
8078   1          COsdMenuNone();
8079   1          COsdDispPenPoint(ROW(5), COL(3), ROW(17), COL(3), _MENU_FACTORY_RESET);
8080   1          COsdFxChange1bitColor(ROW(5), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_WHITE), BGCOLOR(_CP_BLACK));
8081   1          COsdFxChange1bitColor(ROW(17), COL(5), WIDTH(17), HEIGHT(1), FGCOLOR(_CP_YELLOW), BGCOLOR(_CP_BLACK));
8082   1      
8083   1      }
C51 COMPILER V8.02   REALTEK_OSD                                                           03/05/2012 13:24:24 PAGE 137 

8084          
8085          void COsdLeftFExit(void)
8086          {
8087   1          COsdDispWindowPoint(0, _MENU_F_AUTOCOLOR);
8088   1      }
8089          
8090          void COsdRightFExit(void)
8091          {
8092   1          COsdDispWindowPoint(10, _MENU_F_AUTO_CONFIG);
8093   1      }
8094          
8095          void COsdExitFExit(void)
8096          {
8097   1      
8098   1      }
8099          
8100          #if(_SWITCH_INPUT_SOURCE_OSD == _ON)
8101          //--------------------------------------------------
8102          // Description  : Load font, draw window when source from power saving
8103          // Input Value  : none
8104          // Output Value : none
8105          //--------------------------------------------------
8106          void CWakeUpShowSource()
8107          {
8108   1          COsdFxDisableOsd();
8109   1          CTimerCancelTimerEvent(CModeNoCableEvent);
8110   1          CTimerCancelTimerEvent(CModePowerSavingEvent);
8111   1      
8112   1          if(!GET_SOURCE_OSD_STATUS())
8113   1          {
8114   2              SET_SOURCE_OSD_STATUS();
8115   2          }
8116   1      
8117   1          if(GET_PANELPOWERSTATUS() == _OFF)
8118   1          {
8119   2             CModeResetShowOSD();
8120   2          }
8121   1      
8122   1          COsdDispFirstTimeLoadFont();
8123   1      
8124   1          COsdFxEnableOsd();
8125   1          CPowerPanelOn();
8126   1      }
8127          #endif
8128          
8129          #endif  // End of #if(_OSD_TYPE == _REALTEK_OSD)


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  14142    ----
   CONSTANT SIZE    =  11098    ----
   XDATA SIZE       =     22    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28       6
   IDATA SIZE       =      5    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
