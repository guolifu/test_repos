C51 COMPILER V8.02   YPBPR                                                                 03/05/2012 13:24:22 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE YPBPR
OBJECT MODULE PLACED IN .\Output\YPbPr.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Scaler\Code\YPbPr.c OPTIMIZE(9,SPEED) DEFINE(_PROJECT=_RTD2472D_DEMO_BOARD)
                    - PRINT(.\Output\YPbPr.lst) OBJECT(.\Output\YPbPr.obj)

line level    source

   1          /********************************************************************************/
   2          /*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
   3          /*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
   4          /*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
   5          /*   rights, and other similar rights and interests, are reserved to Realtek.   */
   6          /*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
   7          /*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
   8          /*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
   9          /*   disclosed to or otherwise accessed by any third party.                     */
  10          /*   c<2003> - <2010>                                                           */
  11          /*   The Software is provided "AS IS" without any warranty of any kind,         */
  12          /*   express, implied, statutory or otherwise.                                  */
  13          /********************************************************************************/
  14          
  15          //----------------------------------------------------------------------------------------------------
  16          // ID Code      : YPbPr.c No.0000
  17          // Update Note  :
  18          //----------------------------------------------------------------------------------------------------
  19          
  20          #define __YPBPR__
  21          
  22          #include "Common\Header\Include.h"
  23          
  24          #if(_SCALER_SERIES_TYPE == _RTD2472D_SERIES)
  25          
  26          #if(_YPBPR_SUPPORT == _ON)
  27          //--------------------------------------------------
  28          // Description  : Search mode for YPbPr
  29          // Input Value  : None
  30          // Output Value : YPbPr Mode number
  31          //--------------------------------------------------
  32          BYTE CYPbPrSearchMode(void)
  33          {
  34   1          BYTE cnt, modetemp = _MODE_NOSUPPORT;
  35   1      
  36   1          for(cnt = 0; cnt < _MAX_YPBPR_MODE; cnt++)
  37   1          {
  38   2              if(CYPbPrCompareMode(cnt) == _TRUE)
  39   2              {
  40   3                  modetemp = cnt;
  41   3      
  42   3                  // V013 VGA Patch Note (5) 20100409 Modify Start
  43   3                  // Patch Reason : Modify YPbPr search mode flow to cover confuse mode problem.
  44   3                  modetemp = CYPbPrSearchAcceptiveMode(cnt);
  45   3                  // V013 VGA Patch Note (5) 20100409 Modify End
  46   3      
  47   3                  break;
  48   3              }
  49   2          }
  50   1      
  51   1          return modetemp;
  52   1      }
  53          
  54          //--------------------------------------------------
C51 COMPILER V8.02   YPBPR                                                                 03/05/2012 13:24:22 PAGE 2   

  55          // Description  : Compare mode in YPbPr mode table
  56          // Input Value  : Mode number
  57          // Output Value : Return _TRUE if get an available mode
  58          //--------------------------------------------------
  59          bit CYPbPrCompareMode(BYTE ucModeCnt)
  60          {
  61   1          if(abs(stModeInfo.IVFreq - tYPBPR_MODE_TABLE[ucModeCnt].IVFreq) > tYPBPR_MODE_TABLE[ucModeCnt].IVFreqT
             -olerance)
  62   1          {
  63   2              return _FALSE;
  64   2          }
  65   1      
  66   1          if(abs(stModeInfo.IHFreq - tYPBPR_MODE_TABLE[ucModeCnt].IHFreq) > tYPBPR_MODE_TABLE[ucModeCnt].IHFreqT
             -olerance)
  67   1          {
  68   2              return _FALSE;
  69   2          }
  70   1      
  71   1          if(abs(stModeInfo.IVTotal - tYPBPR_MODE_TABLE[ucModeCnt].IVTotal) > 1)
  72   1          {
  73   2              return _FALSE;
  74   2          }
  75   1      
  76   1          return _TRUE;
  77   1      }
  78          
  79          //--------------------------------------------------
  80          // Description  : Get mode information for YPbPr
  81          // Input Value  : None
  82          // Output Value : None
  83          //--------------------------------------------------
  84          void CYPbPrGetModeInfo(void)
  85          {
  86   1          stModeInfo.IHTotal = tYPBPR_MODE_TABLE[stModeInfo.ModeCurr].IHTotal;
  87   1          stModeInfo.IHStartPos = tYPBPR_MODE_TABLE[stModeInfo.ModeCurr].IHStartPos;
  88   1          stModeInfo.IHWidth = tYPBPR_MODE_TABLE[stModeInfo.ModeCurr].IHWidth;
  89   1          stModeInfo.IVStartPos = tYPBPR_MODE_TABLE[stModeInfo.ModeCurr].IVStartPos;
  90   1          stModeInfo.IVHeight = tYPBPR_MODE_TABLE[stModeInfo.ModeCurr].IVHeight;
  91   1      
  92   1      // V013 VGA Patch Note (10) 20100416 Modify Start
  93   1      // Patch Reason : Support Auto Config For Yuv Color.
  94   1      #if((_FIFO_MODE_ONLY == _OFF) || (_YUV_AUTO_CONFIG_SUPPORT == _OFF))
              // V013 VGA Patch Note (10) 20100416 Modify End
              
                  stModeUserData.Clock = stModeInfo.IHTotal;
                  stModeUserData.Phase = 0;
                  stModeUserData.HPosition = stModeInfo.IHStartPos;
                  stModeUserData.VPosition = stModeInfo.IVStartPos;
              
                  // Test
                  stModeUserCenterData.CenterClock = stModeInfo.IHTotal;
                  stModeUserCenterData.CenterHPos = stModeInfo.IHStartPos;
                  stModeUserCenterData.CenterVPos = stModeInfo.IVStartPos;
              
              // V013 VGA Patch Note (10) 20100416 Modify Start
              // Patch Reason : Support Auto Config For Yuv Color.
              #else
 110   1          CEepromLoadCenterModeData(stModeInfo.ModeCurr);
 111   1      #endif
 112   1      // V013 VGA Patch Note (10) 20100416 Modify End
 113   1      }
 114          
C51 COMPILER V8.02   YPBPR                                                                 03/05/2012 13:24:22 PAGE 3   

 115          //--------------------------------------------------
 116          // Description  : Start up settings for YPbPr
 117          // Input Value  : None
 118          // Output Value : None
 119          //--------------------------------------------------
 120          void CYPbPrStartUp(void)
 121          {
 122   1          CScalerCodeW(tYPBPR_TABLE_SET_SCALER);
 123   1      
 124   1          // V013 VGA Patch Note (23) Modify 20100513 Start
 125   1          // Patch Reason : For Video Mode Clamp Position Setting Flow
 126   1          /*
 127   1          CScalerSetByte(_SYNC_PROC_ACCESS_PORT_5C, _SYNC_G_CLAMP_START_00);
 128   1          CScalerSetByte(_SYNC_PROC_DATA_PORT_5D, tYPBPR_CLAMP_POSITION_TABLE[(stModeInfo.ModeCurr * 2)]);
 129   1          CScalerSetByte(_SYNC_PROC_DATA_PORT_5D, tYPBPR_CLAMP_POSITION_TABLE[(stModeInfo.ModeCurr * 2 + 1)]);
 130   1          CScalerSetByte(_SYNC_PROC_DATA_PORT_5D, tYPBPR_CLAMP_POSITION_TABLE[(stModeInfo.ModeCurr * 2)]);
 131   1          CScalerSetByte(_SYNC_PROC_DATA_PORT_5D, tYPBPR_CLAMP_POSITION_TABLE[(stModeInfo.ModeCurr * 2 + 1)]);
 132   1          */
 133   1          CYPbPrModeClampPositionSetting();
 134   1          // V013 VGA Patch Note (23) Modify 20100513 End
 135   1      }
 136          
 137          //--------------------------------------------------
 138          // Description  : Setup YPbPr mode
 139          // Input Value  : None
 140          // Output Value : None
 141          //--------------------------------------------------
 142          void CYPbPrSetupMode(void)
 143          {
 144   1      // V013 VGA Patch Note (10) 20100416 Modify Start
 145   1      // Patch Reason : Support Auto Config For Yuv Color.
 146   1      #if((_FIFO_MODE_ONLY == _ON) && (_YUV_AUTO_CONFIG_SUPPORT == _ON))
 147   1          // Load mode user data from eeprom
 148   1          CEepromLoadModeData(stModeInfo.ModeCurr);
 149   1      #endif
 150   1      // V013 VGA Patch Note (10) 20100416 Modify End
 151   1      
 152   1          // Get information from mode table, such as IHTotal, IHStartPos, IHWidth, IVStartPos, IVHeight.
 153   1          CYPbPrGetModeInfo();
 154   1      
 155   1          // V016 VGA Patch Note (11) Modify 20100830 Start
 156   1          // Patch Reason : Modify Color Space Load Data Position For OverScan.
 157   1      #if(_COLOR_FORMAT_CONVERT == _ON)
 158   1          CModeGetCurrentModeColorFormat();
 159   1      #endif
 160   1          // V016 VGA Patch Note (11) Modify 20100830 End
 161   1      
 162   1          // Start up settings of VGA mode.
 163   1          CModeStartUpVGA();
 164   1      
 165   1          // Start up settings of YPbPR mode.
 166   1          CYPbPrStartUp();
 167   1      
 168   1      // V012 Modify 20100316 Start
 169   1      // V012 Patch Note (2) : Overscan function update.
 170   1      #if(_OVERSCAN_SUPPORT == _ON)
 171   1          CModeOverScanSelect();
 172   1      #endif
 173   1      // V012 Modify 20100316 End
 174   1      
 175   1          // Get scaling option, Capture window setup, Scaling setup, Display setup
 176   1          CModeSetupDisplay();
C51 COMPILER V8.02   YPBPR                                                                 03/05/2012 13:24:22 PAGE 4   

 177   1      
 178   1          // Setup color processing
 179   1          CModeSetupColorProcess();
 180   1      
 181   1          CAdjustAdcGainOffset();
 182   1      
 183   1          CAdjustAdcClock(stModeUserData.Clock);
 184   1      
 185   1          CAdjustDcRestore();
 186   1      
 187   1          CAdjustPhase(stModeUserData.Phase);
 188   1          CAdjustHPosition();
 189   1          CAdjustVPosition();
 190   1      
 191   1          // V012 Modify 20100321 Start
 192   1          // V012 Patch Note (14) : Fix the issue that SOG interlace signal could not light up the display when 
             - V sync pulse is only 1H.
 193   1          CModeCheckDVTotal();
 194   1          // V012 Modify 20100321 End
 195   1      
 196   1          CScalerPageSelect(_PAGE2);
 197   1      
 198   1          CScalerSetBit(_P2_POWER_ON_OFF_CTRL_A7, ~(_BIT4 | _BIT3 | _BIT2 | _BIT1 | _BIT0), 0x00);
 199   1          CScalerSetBit(_P2_TMDS_OUTPUT_CTRL_A6, ~(_BIT7 | _BIT6 | _BIT5 | _BIT4 | _BIT3), 0x00);
 200   1      
 201   1          // V013 VGA Patch Note (16) Modify 20100422 Start
 202   1          // Patch Reason : Add fineTune display position for VGA interlace mode.
 203   1          /*
 204   1          switch(stModeInfo.ModeCurr)
 205   1          {
 206   1              case 0: // 576i
 207   1              case 1: // 480i
 208   1              case 5: // 1080i 50Hz
 209   1              case 6: // 1080i 60Hz
 210   1      
 211   1              // V013 VGA Patch Note (5) 20100409 Modify Start
 212   1              // Patch Reason : Modify YPbPr search mode flow to cover confuse mode problem.
 213   1              case _VIDEO_1920x1080i_50HZ_2: // 1080i 50Hz_2
 214   1              // V013 VGA Patch Note (5) 20100409 Modify End
 215   1      
 216   1                  CScalerSetBit(_SCALE_CTRL_32, ~_BIT7, _BIT7);
 217   1                  CScalerSetBit(_VGIP_ODD_CTRL_13, ~_BIT0, _BIT0);
 218   1                  CFrameSyncFineTune(_ODD);
 219   1                  break;
 220   1      
 221   1          }
 222   1          */
 223   1          CFrameSyncAnalogFineTune();
 224   1          // V013 VGA Patch Note (16) Modify 20100422 End
 225   1      
 226   1      #if(_FRC_SUPPORT == _ON)
                  if(!GET_FRCSTATUS())
                  {
                      CModeSetFIFOForFrameSync();
              #else
 231   1          {
 232   2      #endif
 233   2              pData[0] = CFrameSyncDo();
 234   2      
 235   2      
 236   2              if(pData[0] == 2)
 237   2              {
C51 COMPILER V8.02   YPBPR                                                                 03/05/2012 13:24:22 PAGE 5   

 238   3                  CModeResetMode();
 239   3                  return;
 240   3              }
 241   2          }
 242   1      
 243   1      // Issac-04-12 Begin
 244   1      #if((_MEMORY_WORK_TYPE == _OD_ON_FRC_ON) || (_MEMORY_WORK_TYPE == _OD_OFF_FRC_ON))
                  else
                  {
              #if(_FIELD_MERGE_SUPPORT == _ON)
                      if(GET_FIELDMERGE_MODE())
                      {
                          CScalerSetBit(_VGIP_SIGINV_11, ~_BIT4, _BIT4);
                      }
              #endif
                      // Disable video compensation & IVS-to-DVS-delay control by ODD when FRC
                      CScalerSetBit(_SCALE_CTRL_32, ~_BIT7, 0);
                      CScalerSetBit(_FS_DELAY_FINE_TUNING_43, ~_BIT1, 0);
                  }
              #endif
 258   1      // Issac-04-12 End
 259   1      
 260   1          CModeSetupEtcs(_FUNCTION_ENABLE);
 261   1      
 262   1          // V014 VGA Patch Note (6) Modify 20100527 Start
 263   1          // Patch Reason : Modify Video Mode Can't Light On
 264   1          /*
 265   1          CAdjustAdcClock(stModeUserData.Clock);
 266   1          */
 267   1          // V014 VGA Patch Note (6) Modify 20100527 End
 268   1      }
 269          
 270          // V013 VGA Patch Note (5) 20100409 Modify Start
 271          // Patch Reason : Modify YPbPr search mode flow to cover confuse mode problem.
 272          //--------------------------------------------------
 273          // Description  : YPbPr Search Acceptive Mode
 274          // Input Value  : YPbPr Mode Table Index
 275          // Output Value : YPbPr Mode Table Index
 276          //--------------------------------------------------
 277          BYTE CYPbPrSearchAcceptiveMode(BYTE ucModeCnt)
 278          {
 279   1          if((ucModeCnt == _VIDEO_720x576p_50HZ) && (GET_INTERLACE_MODE() == 1))
 280   1          {
 281   2              ucModeCnt = _VIDEO_1920x1080i_50HZ_2;
 282   2          }
 283   1      
 284   1          return ucModeCnt;
 285   1      }
 286          // V013 VGA Patch Note (5) 20100409 Modify End
 287          
 288          // V013 VGA Patch Note (23) Modify 20100513 Start
 289          // Patch Reason : For Video Mode Clamp Position Setting Flow
 290          //--------------------------------------------------
 291          // Description  : Clamp Position settings for YPbPr Mode
 292          // Input Value  : None
 293          // Output Value : None
 294          //--------------------------------------------------
 295          void CYPbPrModeClampPositionSetting(void)
 296          {
 297   1          CScalerSetByte(_SYNC_PROC_ACCESS_PORT_5C, _SYNC_G_CLAMP_START_00);
 298   1          CScalerSetByte(_SYNC_PROC_DATA_PORT_5D, tYPBPR_CLAMP_POSITION_TABLE[(stModeInfo.ModeCurr * 2)]);
 299   1          CScalerSetByte(_SYNC_PROC_DATA_PORT_5D, tYPBPR_CLAMP_POSITION_TABLE[(stModeInfo.ModeCurr * 2 + 1)]);
C51 COMPILER V8.02   YPBPR                                                                 03/05/2012 13:24:22 PAGE 6   

 300   1          CScalerSetByte(_SYNC_PROC_DATA_PORT_5D, tYPBPR_CLAMP_POSITION_TABLE[(stModeInfo.ModeCurr * 2)]);
 301   1          CScalerSetByte(_SYNC_PROC_DATA_PORT_5D, tYPBPR_CLAMP_POSITION_TABLE[(stModeInfo.ModeCurr * 2 + 1)]);
 302   1      }
 303          // V013 VGA Patch Note (23) Modify 20100513 End
 304          
 305          #endif  // End of #if(_YPBPR_SUPPORT == _ON)
 306          
 307          #endif  // End of #if(_SCALER_SERIES_TYPE == _RTD2472D_SERIES)
 308          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    509    ----
   CONSTANT SIZE    =    415    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
