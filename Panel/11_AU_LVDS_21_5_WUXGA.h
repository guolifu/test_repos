/********************************************************************************/
/*   The  Software  is  proprietary,  confidential,  and  valuable to Realtek   */
/*   Semiconductor  Corporation  ("Realtek").  All  rights, including but not   */
/*   limited  to  copyrights,  patents,  trademarks, trade secrets, mask work   */
/*   rights, and other similar rights and interests, are reserved to Realtek.   */
/*   Without  prior  written  consent  from  Realtek,  copying, reproduction,   */
/*   modification,  distribution,  or  otherwise  is strictly prohibited. The   */
/*   Software  shall  be  kept  strictly  in  confidence,  and  shall  not be   */
/*   disclosed to or otherwise accessed by any third party.                     */
/*   c<2003> - <2010>                                                           */
/*   The Software is provided "AS IS" without any warranty of any kind,         */
/*   express, implied, statutory or otherwise.                                  */
/********************************************************************************/

#if(_PANEL_TYPE == _AU_LVDS_21_5_WUXGA)
//----------------------------------------------------------------------------------------------------
// ID Code      : Panel.h No.0000
// Update Note  :
//
//----------------------------------------------------------------------------------------------------

//--------------------------------------------------
// Maximum Panel Frame Rate
//--------------------------------------------------
#define _PANEL_MAX_FRAME_RATE                   860                 // Unit in 0.1 HZ


//--------------------------------------------------
// Definitions of DPLL N Code
//--------------------------------------------------
#if(_SCALER_TYPE == _RTD2472D)
#define _DPLL_N_CODE                    8   //16
#else
#define _DPLL_N_CODE                    5
#endif


//--------------------------------------------------
// Safe Mode (Slow down input frame rate)
//--------------------------------------------------
#define _SAFE_MODE                              _ON



//--------------------------------------------------
// Set Last Line Finetune Method
//--------------------------------------------------
#define _LAST_LINE_METHOD_NONE                  0
#define _LAST_LINE_METHOD_0                     1                   // Formula: Tne DEN End to DEN Start Length must be (1280*N)
#define _LAST_LINE_METHOD_1                     2                   // Formula: Tne DEN End to DEN Start Length must be (4096*N + 128)
#define _LAST_LINE_METHOD_2                     3                   // Formula: Set to target last line.

#define _LAST_LINE_FINETUNE                     _LAST_LINE_METHOD_NONE
#define _LAST_LINE_TARGET                       400                 // For _LAST_LINE_METHOD_2


//--------------------------------------------------
// Definitions for Panel Manufacturer
//--------------------------------------------------
#define _PANEL_MANUFACTURER                     _PANEL_AUO         // _PANEL_CMO or _PANEL_AUO or _PANEL_SAMSUNG or _PANEL_INNOLUX or _PANEL_CPT


//--------------------------------------------------
// Definitions for Panel Style
//--------------------------------------------------
#define _PANEL_STYLE                            _PANEL_LVDS         // _PANEL_LVDS or _PANEL_RSDS or _PANEL_TTL
#define _LVDS_TABLE_TYPE                        1


//--------------------------------------------------
// Definitions for Panel Configuration
//--------------------------------------------------
#define _DISP_OUTPUT_PORT                       _DISP_DOUBLE_PORT   // _DISP_DOUBLE_PORT or _DISP_SINGLE_PORT
#define _DISP_BIT_MODE                          _DISP_24_BIT        // _DISP_24_BIT or _DISP_18_BIT

#define _DHS_MASK                               _DISABLE            // Definitions for First DHS Masking
#define _DISP_SKEW                              _DISABLE            // Definitions for Skew Display Data Output

#define _TEMP_DITHER                            _ENABLE             // Definations of Temporal Dithering


//--------------------------------------------------
// Definitions for Panel Parameter
//--------------------------------------------------
#define _PANEL_DH_START                         32                  // Display Horizontal Start Position
#define _PANEL_DH_WIDTH                         1920                // Display Horizontal Width
#define _PANEL_DH_END                           1952                // Display Horizontal End Position

#define _PANEL_DH_TOTAL                         2100                // Display Horizontal Total Clock Number in One Display Line
#define _PANEL_DH_TOTAL_MAX                     4056                // Maxinum Display Horizontal Total Clock Number in One Display Line
#define _PANEL_DH_TOTAL_MIN                     2048                // Mininum Display Horizontal Total Clock Number in One Display Line

#define _PANEL_DV_START                         6                   // Display Vertical Start Position
#define _PANEL_DV_HEIGHT                        1080                // Display Vertical Width
#define _PANEL_DV_END                           1086                // Display Vertical End Position

#define _PANEL_DV_TOTAL                         1150                // Display Vertical Total Clock Number in One Display Line
#define _PANEL_DV_TOTAL_MAX                     1600                // Maxinum Display Vertical Total Clock Number in One Display Line
#define _PANEL_DV_TOTAL_MIN                     1061                // Mininum Display Vertical Total Clock Number in One Display Line

#define _PANEL_DH_SYNC_WIDTH                    1                   // Display Horizontal Sync Width
#define _PANEL_DV_SYNC_HEIGHT                   3                   // Display Vertical Sync Height

#define _PANEL_PIXEL_CLOCK                      144                 // Typical Pixel Clock in MHz
#define _PANEL_PIXEL_CLOCK_MAX                  180                 // Maxinum Pixel Clock in MHz
#define _PANEL_PIXEL_CLOCK_MIN                  110                 // Mininum Pixel Clock in MHz


#define _PANEL_POWER_ON_T1                      100                 // Panel Power On T1 (ms)
#define _PANEL_POWER_ON_T2                      40                  // Panel Power On T2 (ms)
//0805 sephinroth start
#if(1)//_PROJECT == _VH226S)
#define _PANEL_POWER_ON_T3                      300                 // Panel Power On T3 (ms)
#else
#define _PANEL_POWER_ON_T3                      250                 // Panel Power On T3 (ms)
#endif
//0805 sephinroth end

#define _PANEL_POWER_OFF_T4                     20                  // Panel Power Off T4 (ms)
#define _PANEL_POWER_OFF_T5                     40                  // Panel Power Off T5 (ms)
#define _PANEL_POWER_OFF_T6                     250                 // Panel Power Off T6 (ms)


#ifdef __ADJUST__


//----------------------------------------------------------------------------------------------------
// Dithering Table
//----------------------------------------------------------------------------------------------------
BYTE code tDITHER_SEQ_TABLE_0[] =
{
    0xe4,0xa2,0x05,0x37,0xf6,0x31,0x69,0xcb,0x1f,0xd2,0xb0,0xe6,
    0x45,0x1b,0x87,0xc6,0x9e,0xb4,0xc6,0x38,0xd4,0xdb,0x12,0x1b,
};


BYTE code tDITHER_TABLE_10_TO_6[] =
{
#if(1)
    0x07,0xf8,0x69,0x1e,0xad,0x52,0xc3,0xb4,
    0xad,0x52,0xc3,0xb4,0x07,0xf8,0x69,0x1e,
    0xad,0x52,0x69,0x1e,0xc3,0xb4,0x07,0xf8,
#elif(0)
    // 10 --> 6
    0x04,0x59,0xc8,0x1d,0xae,0xf3,0x62,0xb7,0x04,0x59,0xc8,0x1d,
    0xae,0xf3,0x62,0xb7,0x04,0x59,0xc8,0x1d,0xae,0xf3,0x62,0xb7,
#else
     0x0f,0xa5,0xa5,0xf0,0xf0,0x5a,0x5a,0x0f,0x0f,0xa5,0xa5,0xf0,
     0xf0,0x5a,0x5a,0x0f,0x0f,0xa5,0xa5,0xf0,0xf0,0x5a,0x5a,0x0f,
#endif
};


BYTE code tDITHER_TABLE_10_TO_8_D_DOMAIN[] =
{
#if(1)
    // 10 --> 8
    0x01,0x32,0x12,0x03,0x23,0x10,0x30,0x21,
    0x23,0x10,0x30,0x21,0x01,0x32,0x12,0x03,
    0x30,0x21,0x01,0x32,0x12,0x03,0x23,0x10,
#elif(0)
    // 10 --> 8
    0x20,0x02,0x31,0x13,0x02,0x20,0x13,0x31,
    0x31,0x13,0x02,0x20,0x13,0x31,0x20,0x02,
    0x20,0x02,0x31,0x13,0x02,0x20,0x13,0x31,
#else
    // 10 --> 8(AUO FRC 6 bit Panel)
    0x20,0x02,0x31,0x13,0x02,0x20,0x13,0x31,
    0x31,0x13,0x02,0x20,0x13,0x31,0x20,0x02,
    0x20,0x02,0x31,0x13,0x02,0x20,0x13,0x31,
#endif
};

//Hudson add Temporal offset table setting start 20080725
BYTE code tDITHER_TEMPOFFSET_TABLE[] =
{
    0xe4, 0xe4, 0xe4, 0xe4,  //0xe4 can be a default setting
};
//Hudson add Temporal offset table setting end 20080725

#if((_SCALER_TYPE == _RTD2545LR) || (_SCALER_TYPE == _RTD247xRD) || (_SCALER_TYPE == _RTD248xRD))
BYTE code tDITHER_TABLE_10_TO_8_I_DOMAIN[] =
{
    // 10 --> 8
    0x12,0x03,0x23,0x10,0x30,0x21,0x01,0x32,
    0x01,0x32,0x12,0x03,0x23,0x10,0x30,0x21,
    0x23,0x10,0x30,0x21,0x01,0x32,0x12,0x03,
};
#endif


//----------------------------------------------------------------------------------------------------
// Gamma Table
//----------------------------------------------------------------------------------------------------

#if(_GAMMA_FUNCTION == _ON)

#if(_SCALER_TYPE == _RTD2472D)

BYTE code tGAMMA_TABLE_RED[] =
{
    0x00, 0x04, 0x04, //R   1
    0x02, 0x04, 0x04, //R   2
    0x04, 0x04, 0x04, //R   3
    0x06, 0x04, 0x04, //R   4
    0x08, 0x04, 0x04, //R   5
    0x0a, 0x04, 0x04, //R   6
    0x0c, 0x04, 0x04, //R   7
    0x0e, 0x04, 0x04, //R   8
    0x10, 0x04, 0x04, //R   9
    0x12, 0x04, 0x04, //R  10
    0x14, 0x04, 0x04, //R  11
    0x16, 0x04, 0x04, //R  12
    0x18, 0x04, 0x04, //R  13
    0x1a, 0x04, 0x04, //R  14
    0x1c, 0x04, 0x04, //R  15
    0x1e, 0x04, 0x04, //R  16
    0x20, 0x04, 0x04, //R  17
    0x22, 0x04, 0x04, //R  18
    0x24, 0x04, 0x04, //R  19
    0x26, 0x04, 0x04, //R  20
    0x28, 0x04, 0x04, //R  21
    0x2a, 0x04, 0x04, //R  22
    0x2c, 0x04, 0x04, //R  23
    0x2e, 0x04, 0x04, //R  24
    0x30, 0x04, 0x04, //R  25
    0x32, 0x04, 0x04, //R  26
    0x34, 0x04, 0x04, //R  27
    0x36, 0x04, 0x04, //R  28
    0x38, 0x04, 0x04, //R  29
    0x3a, 0x04, 0x04, //R  30
    0x3c, 0x04, 0x04, //R  31
    0x3e, 0x04, 0x04, //R  32
    0x40, 0x04, 0x04, //R  33
    0x42, 0x04, 0x04, //R  34
    0x44, 0x04, 0x04, //R  35
    0x46, 0x04, 0x04, //R  36
    0x48, 0x04, 0x04, //R  37
    0x4a, 0x04, 0x04, //R  38
    0x4c, 0x04, 0x04, //R  39
    0x4e, 0x04, 0x04, //R  40
    0x50, 0x04, 0x04, //R  41
    0x52, 0x04, 0x04, //R  42
    0x54, 0x04, 0x04, //R  43
    0x56, 0x04, 0x04, //R  44
    0x58, 0x04, 0x04, //R  45
    0x5a, 0x04, 0x04, //R  46
    0x5c, 0x04, 0x04, //R  47
    0x5e, 0x04, 0x04, //R  48
    0x60, 0x04, 0x04, //R  49
    0x62, 0x04, 0x04, //R  50
    0x64, 0x04, 0x04, //R  51
    0x66, 0x04, 0x04, //R  52
    0x68, 0x04, 0x04, //R  53
    0x6a, 0x04, 0x04, //R  54
    0x6c, 0x04, 0x04, //R  55
    0x6e, 0x04, 0x04, //R  56
    0x70, 0x04, 0x04, //R  57
    0x72, 0x04, 0x04, //R  58
    0x74, 0x04, 0x04, //R  59
    0x76, 0x04, 0x04, //R  60
    0x78, 0x04, 0x04, //R  61
    0x7a, 0x04, 0x04, //R  62
    0x7c, 0x04, 0x04, //R  63
    0x7e, 0x04, 0x04, //R  64
    0x80, 0x04, 0x04, //R  65
    0x82, 0x04, 0x04, //R  66
    0x84, 0x04, 0x04, //R  67
    0x86, 0x04, 0x04, //R  68
    0x88, 0x04, 0x04, //R  69
    0x8a, 0x04, 0x04, //R  70
    0x8c, 0x04, 0x04, //R  71
    0x8e, 0x04, 0x04, //R  72
    0x90, 0x04, 0x04, //R  73
    0x92, 0x04, 0x04, //R  74
    0x94, 0x04, 0x04, //R  75
    0x96, 0x04, 0x04, //R  76
    0x98, 0x04, 0x04, //R  77
    0x9a, 0x04, 0x04, //R  78
    0x9c, 0x04, 0x04, //R  79
    0x9e, 0x04, 0x04, //R  80
    0xa0, 0x04, 0x04, //R  81
    0xa2, 0x04, 0x04, //R  82
    0xa4, 0x04, 0x04, //R  83
    0xa6, 0x04, 0x04, //R  84
    0xa8, 0x04, 0x04, //R  85
    0xaa, 0x04, 0x04, //R  86
    0xac, 0x04, 0x04, //R  87
    0xae, 0x04, 0x04, //R  88
    0xb0, 0x04, 0x04, //R  89
    0xb2, 0x04, 0x04, //R  90
    0xb4, 0x04, 0x04, //R  91
    0xb6, 0x04, 0x04, //R  92
    0xb8, 0x04, 0x04, //R  93
    0xba, 0x04, 0x04, //R  94
    0xbc, 0x04, 0x04, //R  95
    0xbe, 0x04, 0x04, //R  96
    0xc0, 0x04, 0x04, //R  97
    0xc2, 0x04, 0x04, //R  98
    0xc4, 0x04, 0x04, //R  99
    0xc6, 0x04, 0x04, //R 100
    0xc8, 0x04, 0x04, //R 101
    0xca, 0x04, 0x04, //R 102
    0xcc, 0x04, 0x04, //R 103
    0xce, 0x04, 0x04, //R 104
    0xd0, 0x04, 0x04, //R 105
    0xd2, 0x04, 0x04, //R 106
    0xd4, 0x04, 0x04, //R 107
    0xd6, 0x04, 0x04, //R 108
    0xd8, 0x04, 0x04, //R 109
    0xda, 0x04, 0x04, //R 110
    0xdc, 0x04, 0x04, //R 111
    0xde, 0x04, 0x04, //R 112
    0xe0, 0x04, 0x04, //R 113
    0xe2, 0x04, 0x04, //R 114
    0xe4, 0x04, 0x04, //R 115
    0xe6, 0x04, 0x04, //R 116
    0xe8, 0x04, 0x04, //R 117
    0xea, 0x04, 0x04, //R 118
    0xec, 0x04, 0x04, //R 119
    0xee, 0x04, 0x04, //R 120
    0xf0, 0x04, 0x04, //R 121
    0xf2, 0x04, 0x04, //R 122
    0xf4, 0x04, 0x04, //R 123
    0xf6, 0x04, 0x04, //R 124
    0xf8, 0x04, 0x04, //R 125
    0xfa, 0x04, 0x04, //R 126
    0xfc, 0x04, 0x04, //R 127
    0xfe, 0x04, 0x00, //R 128
};

BYTE code tGAMMA_TABLE_GREEN[] =
{
    0x00, 0x04, 0x04, //G   1
    0x02, 0x04, 0x04, //G   2
    0x04, 0x04, 0x04, //G   3
    0x06, 0x04, 0x04, //G   4
    0x08, 0x04, 0x04, //G   5
    0x0a, 0x04, 0x04, //G   6
    0x0c, 0x04, 0x04, //G   7
    0x0e, 0x04, 0x04, //G   8
    0x10, 0x04, 0x04, //G   9
    0x12, 0x04, 0x04, //G  10
    0x14, 0x04, 0x04, //G  11
    0x16, 0x04, 0x04, //G  12
    0x18, 0x04, 0x04, //G  13
    0x1a, 0x04, 0x04, //G  14
    0x1c, 0x04, 0x04, //G  15
    0x1e, 0x04, 0x04, //G  16
    0x20, 0x04, 0x04, //G  17
    0x22, 0x04, 0x04, //G  18
    0x24, 0x04, 0x04, //G  19
    0x26, 0x04, 0x04, //G  20
    0x28, 0x04, 0x04, //G  21
    0x2a, 0x04, 0x04, //G  22
    0x2c, 0x04, 0x04, //G  23
    0x2e, 0x04, 0x04, //G  24
    0x30, 0x04, 0x04, //G  25
    0x32, 0x04, 0x04, //G  26
    0x34, 0x04, 0x04, //G  27
    0x36, 0x04, 0x04, //G  28
    0x38, 0x04, 0x04, //G  29
    0x3a, 0x04, 0x04, //G  30
    0x3c, 0x04, 0x04, //G  31
    0x3e, 0x04, 0x04, //G  32
    0x40, 0x04, 0x04, //G  33
    0x42, 0x04, 0x04, //G  34
    0x44, 0x04, 0x04, //G  35
    0x46, 0x04, 0x04, //G  36
    0x48, 0x04, 0x04, //G  37
    0x4a, 0x04, 0x04, //G  38
    0x4c, 0x04, 0x04, //G  39
    0x4e, 0x04, 0x04, //G  40
    0x50, 0x04, 0x04, //G  41
    0x52, 0x04, 0x04, //G  42
    0x54, 0x04, 0x04, //G  43
    0x56, 0x04, 0x04, //G  44
    0x58, 0x04, 0x04, //G  45
    0x5a, 0x04, 0x04, //G  46
    0x5c, 0x04, 0x04, //G  47
    0x5e, 0x04, 0x04, //G  48
    0x60, 0x04, 0x04, //G  49
    0x62, 0x04, 0x04, //G  50
    0x64, 0x04, 0x04, //G  51
    0x66, 0x04, 0x04, //G  52
    0x68, 0x04, 0x04, //G  53
    0x6a, 0x04, 0x04, //G  54
    0x6c, 0x04, 0x04, //G  55
    0x6e, 0x04, 0x04, //G  56
    0x70, 0x04, 0x04, //G  57
    0x72, 0x04, 0x04, //G  58
    0x74, 0x04, 0x04, //G  59
    0x76, 0x04, 0x04, //G  60
    0x78, 0x04, 0x04, //G  61
    0x7a, 0x04, 0x04, //G  62
    0x7c, 0x04, 0x04, //G  63
    0x7e, 0x04, 0x04, //G  64
    0x80, 0x04, 0x04, //G  65
    0x82, 0x04, 0x04, //G  66
    0x84, 0x04, 0x04, //G  67
    0x86, 0x04, 0x04, //G  68
    0x88, 0x04, 0x04, //G  69
    0x8a, 0x04, 0x04, //G  70
    0x8c, 0x04, 0x04, //G  71
    0x8e, 0x04, 0x04, //G  72
    0x90, 0x04, 0x04, //G  73
    0x92, 0x04, 0x04, //G  74
    0x94, 0x04, 0x04, //G  75
    0x96, 0x04, 0x04, //G  76
    0x98, 0x04, 0x04, //G  77
    0x9a, 0x04, 0x04, //G  78
    0x9c, 0x04, 0x04, //G  79
    0x9e, 0x04, 0x04, //G  80
    0xa0, 0x04, 0x04, //G  81
    0xa2, 0x04, 0x04, //G  82
    0xa4, 0x04, 0x04, //G  83
    0xa6, 0x04, 0x04, //G  84
    0xa8, 0x04, 0x04, //G  85
    0xaa, 0x04, 0x04, //G  86
    0xac, 0x04, 0x04, //G  87
    0xae, 0x04, 0x04, //G  88
    0xb0, 0x04, 0x04, //G  89
    0xb2, 0x04, 0x04, //G  90
    0xb4, 0x04, 0x04, //G  91
    0xb6, 0x04, 0x04, //G  92
    0xb8, 0x04, 0x04, //G  93
    0xba, 0x04, 0x04, //G  94
    0xbc, 0x04, 0x04, //G  95
    0xbe, 0x04, 0x04, //G  96
    0xc0, 0x04, 0x04, //G  97
    0xc2, 0x04, 0x04, //G  98
    0xc4, 0x04, 0x04, //G  99
    0xc6, 0x04, 0x04, //G 100
    0xc8, 0x04, 0x04, //G 101
    0xca, 0x04, 0x04, //G 102
    0xcc, 0x04, 0x04, //G 103
    0xce, 0x04, 0x04, //G 104
    0xd0, 0x04, 0x04, //G 105
    0xd2, 0x04, 0x04, //G 106
    0xd4, 0x04, 0x04, //G 107
    0xd6, 0x04, 0x04, //G 108
    0xd8, 0x04, 0x04, //G 109
    0xda, 0x04, 0x04, //G 110
    0xdc, 0x04, 0x04, //G 111
    0xde, 0x04, 0x04, //G 112
    0xe0, 0x04, 0x04, //G 113
    0xe2, 0x04, 0x04, //G 114
    0xe4, 0x04, 0x04, //G 115
    0xe6, 0x04, 0x04, //G 116
    0xe8, 0x04, 0x04, //G 117
    0xea, 0x04, 0x04, //G 118
    0xec, 0x04, 0x04, //G 119
    0xee, 0x04, 0x04, //G 120
    0xf0, 0x04, 0x04, //G 121
    0xf2, 0x04, 0x04, //G 122
    0xf4, 0x04, 0x04, //G 123
    0xf6, 0x04, 0x04, //G 124
    0xf8, 0x04, 0x04, //G 125
    0xfa, 0x04, 0x04, //G 126
    0xfc, 0x04, 0x04, //G 127
    0xfe, 0x04, 0x00, //G 128
};

BYTE code tGAMMA_TABLE_BLUE[] =
{

    0x00, 0x04, 0x04, //B   1
    0x02, 0x04, 0x04, //B   2
    0x04, 0x04, 0x04, //B   3
    0x06, 0x04, 0x04, //B   4
    0x08, 0x04, 0x04, //B   5
    0x0a, 0x04, 0x04, //B   6
    0x0c, 0x04, 0x04, //B   7
    0x0e, 0x04, 0x04, //B   8
    0x10, 0x04, 0x04, //B   9
    0x12, 0x04, 0x04, //B  10
    0x14, 0x04, 0x04, //B  11
    0x16, 0x04, 0x04, //B  12
    0x18, 0x04, 0x04, //B  13
    0x1a, 0x04, 0x04, //B  14
    0x1c, 0x04, 0x04, //B  15
    0x1e, 0x04, 0x04, //B  16
    0x20, 0x04, 0x04, //B  17
    0x22, 0x04, 0x04, //B  18
    0x24, 0x04, 0x04, //B  19
    0x26, 0x04, 0x04, //B  20
    0x28, 0x04, 0x04, //B  21
    0x2a, 0x04, 0x04, //B  22
    0x2c, 0x04, 0x04, //B  23
    0x2e, 0x04, 0x04, //B  24
    0x30, 0x04, 0x04, //B  25
    0x32, 0x04, 0x04, //B  26
    0x34, 0x04, 0x04, //B  27
    0x36, 0x04, 0x04, //B  28
    0x38, 0x04, 0x04, //B  29
    0x3a, 0x04, 0x04, //B  30
    0x3c, 0x04, 0x04, //B  31
    0x3e, 0x04, 0x04, //B  32
    0x40, 0x04, 0x04, //B  33
    0x42, 0x04, 0x04, //B  34
    0x44, 0x04, 0x04, //B  35
    0x46, 0x04, 0x04, //B  36
    0x48, 0x04, 0x04, //B  37
    0x4a, 0x04, 0x04, //B  38
    0x4c, 0x04, 0x04, //B  39
    0x4e, 0x04, 0x04, //B  40
    0x50, 0x04, 0x04, //B  41
    0x52, 0x04, 0x04, //B  42
    0x54, 0x04, 0x04, //B  43
    0x56, 0x04, 0x04, //B  44
    0x58, 0x04, 0x04, //B  45
    0x5a, 0x04, 0x04, //B  46
    0x5c, 0x04, 0x04, //B  47
    0x5e, 0x04, 0x04, //B  48
    0x60, 0x04, 0x04, //B  49
    0x62, 0x04, 0x04, //B  50
    0x64, 0x04, 0x04, //B  51
    0x66, 0x04, 0x04, //B  52
    0x68, 0x04, 0x04, //B  53
    0x6a, 0x04, 0x04, //B  54
    0x6c, 0x04, 0x04, //B  55
    0x6e, 0x04, 0x04, //B  56
    0x70, 0x04, 0x04, //B  57
    0x72, 0x04, 0x04, //B  58
    0x74, 0x04, 0x04, //B  59
    0x76, 0x04, 0x04, //B  60
    0x78, 0x04, 0x04, //B  61
    0x7a, 0x04, 0x04, //B  62
    0x7c, 0x04, 0x04, //B  63
    0x7e, 0x04, 0x04, //B  64
    0x80, 0x04, 0x04, //B  65
    0x82, 0x04, 0x04, //B  66
    0x84, 0x04, 0x04, //B  67
    0x86, 0x04, 0x04, //B  68
    0x88, 0x04, 0x04, //B  69
    0x8a, 0x04, 0x04, //B  70
    0x8c, 0x04, 0x04, //B  71
    0x8e, 0x04, 0x04, //B  72
    0x90, 0x04, 0x04, //B  73
    0x92, 0x04, 0x04, //B  74
    0x94, 0x04, 0x04, //B  75
    0x96, 0x04, 0x04, //B  76
    0x98, 0x04, 0x04, //B  77
    0x9a, 0x04, 0x04, //B  78
    0x9c, 0x04, 0x04, //B  79
    0x9e, 0x04, 0x04, //B  80
    0xa0, 0x04, 0x04, //B  81
    0xa2, 0x04, 0x04, //B  82
    0xa4, 0x04, 0x04, //B  83
    0xa6, 0x04, 0x04, //B  84
    0xa8, 0x04, 0x04, //B  85
    0xaa, 0x04, 0x04, //B  86
    0xac, 0x04, 0x04, //B  87
    0xae, 0x04, 0x04, //B  88
    0xb0, 0x04, 0x04, //B  89
    0xb2, 0x04, 0x04, //B  90
    0xb4, 0x04, 0x04, //B  91
    0xb6, 0x04, 0x04, //B  92
    0xb8, 0x04, 0x04, //B  93
    0xba, 0x04, 0x04, //B  94
    0xbc, 0x04, 0x04, //B  95
    0xbe, 0x04, 0x04, //B  96
    0xc0, 0x04, 0x04, //B  97
    0xc2, 0x04, 0x04, //B  98
    0xc4, 0x04, 0x04, //B  99
    0xc6, 0x04, 0x04, //B 100
    0xc8, 0x04, 0x04, //B 101
    0xca, 0x04, 0x04, //B 102
    0xcc, 0x04, 0x04, //B 103
    0xce, 0x04, 0x04, //B 104
    0xd0, 0x04, 0x04, //B 105
    0xd2, 0x04, 0x04, //B 106
    0xd4, 0x04, 0x04, //B 107
    0xd6, 0x04, 0x04, //B 108
    0xd8, 0x04, 0x04, //B 109
    0xda, 0x04, 0x04, //B 110
    0xdc, 0x04, 0x04, //B 111
    0xde, 0x04, 0x04, //B 112
    0xe0, 0x04, 0x04, //B 113
    0xe2, 0x04, 0x04, //B 114
    0xe4, 0x04, 0x04, //B 115
    0xe6, 0x04, 0x04, //B 116
    0xe8, 0x04, 0x04, //B 117
    0xea, 0x04, 0x04, //B 118
    0xec, 0x04, 0x04, //B 119
    0xee, 0x04, 0x04, //B 120
    0xf0, 0x04, 0x04, //B 121
    0xf2, 0x04, 0x04, //B 122
    0xf4, 0x04, 0x04, //B 123
    0xf6, 0x04, 0x04, //B 124
    0xf8, 0x04, 0x04, //B 125
    0xfa, 0x04, 0x04, //B 126
    0xfc, 0x04, 0x04, //B 127
    0xfe, 0x04, 0x00, //B 128
};

#elif((_SCALER_TYPE == _RTD2545LR) || (_SCALER_TYPE == _RTD247xRD) || (_SCALER_TYPE == _RTD248xRD))

BYTE code tLUTGAMMA_TABLE_RED[] =
{
    0x00, 0x00, 0x01,
    0x00, 0x40, 0x07,
    0x00, 0xB0, 0x11,
    0x01, 0x80, 0x1F,
    0x02, 0x50, 0x2B,
    0x03, 0x20, 0x38,
    0x03, 0xD0, 0x43,
    0x04, 0x90, 0x4F,
    0x05, 0x40, 0x5A,
    0x05, 0xF0, 0x65,
    0x06, 0xA0, 0x6F,
    0x07, 0x40, 0x7A,
    0x07, 0xF0, 0x85,
    0x08, 0xB0, 0x91,
    0x09, 0x70, 0x9C,
    0x0A, 0x10, 0xA6,
    0x0A, 0xB0, 0xB0,
    0x0B, 0x50, 0xBA,
    0x0B, 0xF0, 0xC4,
    0x0C, 0x90, 0xCE,
    0x0D, 0x40, 0xD9,
    0x0D, 0xE0, 0xE2,
    0x0E, 0x70, 0xEC,
    0x0F, 0x10, 0xF5,
    0x0F, 0xA0, 0xFF,
    0x10, 0x31, 0x08,
    0x10, 0xD1, 0x11,
    0x11, 0x61, 0x1B,
    0x12, 0x01, 0x25,
    0x12, 0x91, 0x2E,
    0x13, 0x21, 0x37,
    0x13, 0xB1, 0x40,
    0x14, 0x41, 0x49,
    0x14, 0xD1, 0x51,
    0x15, 0x61, 0x5A,
    0x15, 0xF1, 0x63,
    0x16, 0x71, 0x6C,
    0x17, 0x01, 0x74,
    0x17, 0x81, 0x7D,
    0x18, 0x11, 0x85,
    0x18, 0x91, 0x8D,
    0x19, 0x11, 0x96,
    0x19, 0xA1, 0x9E,
    0x1A, 0x21, 0xA6,
    0x1A, 0xA1, 0xAE,
    0x1B, 0x31, 0xB7,
    0x1B, 0xB1, 0xBF,
    0x1C, 0x31, 0xC7,
    0x1C, 0xB1, 0xCF,
    0x1D, 0x31, 0xD7,
    0x1D, 0xB1, 0xE0,
    0x1E, 0x41, 0xE7,
    0x1E, 0xB1, 0xEF,
    0x1F, 0x31, 0xF7,
    0x1F, 0xB1, 0xFF,
    0x20, 0x22, 0x06,
    0x20, 0xA2, 0x0E,
    0x21, 0x12, 0x15,
    0x21, 0x92, 0x1C,
    0x21, 0xF2, 0x23,
    0x22, 0x62, 0x2A,
    0x22, 0xE2, 0x32,
    0x23, 0x52, 0x39,
    0x23, 0xD2, 0x40,
    0x24, 0x42, 0x48,
    0x24, 0xB2, 0x4F,
    0x25, 0x32, 0x57,
    0x25, 0xA2, 0x5F,
    0x26, 0x32, 0x67,
    0x26, 0xA2, 0x6E,
    0x27, 0x22, 0x75,
    0x27, 0x92, 0x7C,
    0x28, 0x02, 0x83,
    0x28, 0x72, 0x8A,
    0x28, 0xE2, 0x91,
    0x29, 0x52, 0x98,
    0x29, 0xC2, 0x9E,
    0x2A, 0x02, 0xA4,
    0x2A, 0x72, 0xAA,
    0x2A, 0xE2, 0xB2,
    0x2B, 0x52, 0xB9,
    0x2B, 0xC2, 0xC0,
    0x2C, 0x42, 0xC8,
    0x2C, 0xB2, 0xCF,
    0x2D, 0x32, 0xD7,
    0x2D, 0xB2, 0xE3,
    0x2E, 0x72, 0xEB,
    0x2E, 0xF2, 0xF2,
    0x2F, 0x62, 0xF9,
    0x2F, 0xD3, 0x00,
    0x30, 0x43, 0x07,
    0x30, 0xA3, 0x0D,
    0x31, 0x03, 0x13,
    0x31, 0x73, 0x1A,
    0x31, 0xC3, 0x1F,
    0x32, 0x13, 0x24,
    0x32, 0x73, 0x2A,
    0x32, 0xD3, 0x30,
    0x33, 0x33, 0x36,
    0x33, 0x93, 0x3C,
    0x33, 0xF3, 0x42,
    0x34, 0x53, 0x47,
    0x34, 0xA3, 0x4D,
    0x35, 0x03, 0x53,
    0x35, 0x63, 0x59,
    0x35, 0xC3, 0x5E,
    0x36, 0x03, 0x63,
    0x36, 0x53, 0x68,
    0x36, 0xB3, 0x6F,
    0x37, 0x23, 0x75,
    0x37, 0x83, 0x7B,
    0x37, 0xE3, 0x82,
    0x38, 0x53, 0x88,
    0x38, 0xC3, 0x8F,
    0x39, 0x33, 0x96,
    0x39, 0xA3, 0x9D,
    0x3A, 0x13, 0xA5,
    0x3A, 0x93, 0xAD,
    0x3B, 0x03, 0xB4,
    0x3B, 0x83, 0xBC,
    0x3C, 0x03, 0xC4,
    0x3C, 0x83, 0xCC,
    0x3D, 0x03, 0xD4,
    0x3D, 0x83, 0xDD,
    0x3E, 0x03, 0xE4,
    0x3E, 0x83, 0xED,
    0x3F, 0x13, 0xF5,
    0x3F, 0xA3, 0xFC,
    0x3F, 0xC0, 0x00,

};

BYTE code tLUTGAMMA_TABLE_GREEN[] =
{
    0x00, 0x00, 0x05,
    0x00, 0x80, 0x0E,
    0x01, 0x40, 0x1A,
    0x02, 0x00, 0x25,
    0x02, 0xA0, 0x30,
    0x03, 0x50, 0x3A,
    0x03, 0xF0, 0x44,
    0x04, 0x90, 0x4E,
    0x05, 0x40, 0x59,
    0x05, 0xE0, 0x63,
    0x06, 0x80, 0x6D,
    0x07, 0x20, 0x77,
    0x07, 0xD0, 0x82,
    0x08, 0x70, 0x8C,
    0x09, 0x10, 0x97,
    0x09, 0xC0, 0xA1,
    0x0A, 0x60, 0xAB,
    0x0B, 0x00, 0xB5,
    0x0B, 0xA0, 0xBF,
    0x0C, 0x40, 0xC9,
    0x0C, 0xE0, 0xD3,
    0x0D, 0x80, 0xDD,
    0x0E, 0x20, 0xE6,
    0x0E, 0xB0, 0xF0,
    0x0F, 0x40, 0xF9,
    0x0F, 0xE1, 0x02,
    0x10, 0x71, 0x0B,
    0x11, 0x01, 0x14,
    0x11, 0x91, 0x1E,
    0x12, 0x21, 0x27,
    0x12, 0xB1, 0x30,
    0x13, 0x41, 0x38,
    0x13, 0xD1, 0x41,
    0x14, 0x61, 0x4A,
    0x14, 0xF1, 0x53,
    0x15, 0x71, 0x5C,
    0x16, 0x11, 0x65,
    0x16, 0xA1, 0x6E,
    0x17, 0x21, 0x77,
    0x17, 0xB1, 0x7F,
    0x18, 0x31, 0x87,
    0x18, 0xB1, 0x8F,
    0x19, 0x41, 0x98,
    0x19, 0xC1, 0x9F,
    0x1A, 0x31, 0xA8,
    0x1A, 0xC1, 0xB0,
    0x1B, 0x41, 0xB8,
    0x1B, 0xC1, 0xC0,
    0x1C, 0x41, 0xC8,
    0x1C, 0xC1, 0xD0,
    0x1D, 0x41, 0xD8,
    0x1D, 0xC1, 0xE1,
    0x1E, 0x51, 0xE9,
    0x1E, 0xD1, 0xF1,
    0x1F, 0x41, 0xF8,
    0x1F, 0xC2, 0x00,
    0x20, 0x32, 0x07,
    0x20, 0xB2, 0x0F,
    0x21, 0x22, 0x16,
    0x21, 0x92, 0x1D,
    0x22, 0x02, 0x23,
    0x22, 0x72, 0x2B,
    0x22, 0xE2, 0x32,
    0x23, 0x52, 0x39,
    0x23, 0xD2, 0x40,
    0x24, 0x42, 0x47,
    0x24, 0xB2, 0x4F,
    0x25, 0x22, 0x56,
    0x25, 0xA2, 0x5D,
    0x26, 0x12, 0x64,
    0x26, 0x82, 0x6C,
    0x26, 0xF2, 0x73,
    0x27, 0x72, 0x7B,
    0x27, 0xE2, 0x82,
    0x28, 0x62, 0x8A,
    0x28, 0xD2, 0x91,
    0x29, 0x52, 0x99,
    0x29, 0xD2, 0xA1,
    0x2A, 0x42, 0xA8,
    0x2A, 0xC2, 0xB0,
    0x2B, 0x42, 0xB8,
    0x2B, 0xC2, 0xC0,
    0x2C, 0x32, 0xC7,
    0x2C, 0xB2, 0xCF,
    0x2D, 0x32, 0xD7,
    0x2D, 0xB2, 0xE2,
    0x2E, 0x62, 0xEA,
    0x2E, 0xD2, 0xF1,
    0x2F, 0x52, 0xF8,
    0x2F, 0xC2, 0xFF,
    0x30, 0x23, 0x06,
    0x30, 0x93, 0x0C,
    0x30, 0xF3, 0x12,
    0x31, 0x53, 0x18,
    0x31, 0xB3, 0x1E,
    0x32, 0x03, 0x23,
    0x32, 0x63, 0x29,
    0x32, 0xC3, 0x2F,
    0x33, 0x23, 0x35,
    0x33, 0x83, 0x3B,
    0x33, 0xE3, 0x41,
    0x34, 0x43, 0x47,
    0x34, 0xA3, 0x4D,
    0x35, 0x03, 0x53,
    0x35, 0x63, 0x59,
    0x35, 0xB3, 0x5E,
    0x36, 0x03, 0x63,
    0x36, 0x63, 0x69,
    0x36, 0xC3, 0x6F,
    0x37, 0x23, 0x75,
    0x37, 0x83, 0x7C,
    0x37, 0xF3, 0x82,
    0x38, 0x53, 0x89,
    0x38, 0xC3, 0x90,
    0x39, 0x33, 0x96,
    0x39, 0xA3, 0x9E,
    0x3A, 0x13, 0xA5,
    0x3A, 0x93, 0xAC,
    0x3B, 0x03, 0xB4,
    0x3B, 0x83, 0xBB,
    0x3B, 0xF3, 0xC3,
    0x3C, 0x73, 0xCB,
    0x3C, 0xF3, 0xD3,
    0x3D, 0x73, 0xDC,
    0x3D, 0xF3, 0xE3,
    0x3E, 0x73, 0xEB,
    0x3F, 0x03, 0xF4,
    0x3F, 0x83, 0xFC,
    0x3F, 0xC0, 0x00,

};

BYTE code tLUTGAMMA_TABLE_BLUE[] =
{
    0x00, 0x00, 0x02,
    0x00, 0x60, 0x0D,
    0x01, 0x70, 0x20,
    0x02, 0x70, 0x32,
    0x03, 0x70, 0x3C,
    0x04, 0x10, 0x46,
    0x04, 0xB0, 0x4F,
    0x05, 0x30, 0x58,
    0x05, 0xD0, 0x62,
    0x06, 0x60, 0x6B,
    0x07, 0x00, 0x75,
    0x07, 0xA0, 0x7E,
    0x08, 0x40, 0x89,
    0x08, 0xE0, 0x93,
    0x09, 0x80, 0x9D,
    0x0A, 0x20, 0xA8,
    0x0A, 0xD0, 0xB2,
    0x0B, 0x80, 0xBD,
    0x0C, 0x20, 0xC7,
    0x0C, 0xD0, 0xD2,
    0x0D, 0x80, 0xDD,
    0x0E, 0x20, 0xE7,
    0x0E, 0xB0, 0xF0,
    0x0F, 0x50, 0xFA,
    0x0F, 0xE1, 0x03,
    0x10, 0x81, 0x0C,
    0x11, 0x11, 0x15,
    0x11, 0xA1, 0x1E,
    0x12, 0x31, 0x27,
    0x12, 0xC1, 0x30,
    0x13, 0x51, 0x39,
    0x13, 0xE1, 0x42,
    0x14, 0x71, 0x4B,
    0x15, 0x01, 0x54,
    0x15, 0x91, 0x5E,
    0x16, 0x31, 0x67,
    0x16, 0xC1, 0x70,
    0x17, 0x51, 0x79,
    0x17, 0xE1, 0x82,
    0x18, 0x61, 0x8A,
    0x18, 0xF1, 0x93,
    0x19, 0x71, 0x9C,
    0x1A, 0x01, 0xA4,
    0x1A, 0x81, 0xAC,
    0x1B, 0x11, 0xB5,
    0x1B, 0x91, 0xBD,
    0x1C, 0x11, 0xC5,
    0x1C, 0x91, 0xCE,
    0x1D, 0x21, 0xD6,
    0x1D, 0xA1, 0xDE,
    0x1E, 0x21, 0xE6,
    0x1E, 0xA1, 0xEE,
    0x1F, 0x21, 0xF6,
    0x1F, 0xA1, 0xFE,
    0x20, 0x22, 0x07,
    0x20, 0xB2, 0x0F,
    0x21, 0x32, 0x17,
    0x21, 0xB2, 0x20,
    0x22, 0x42, 0x28,
    0x22, 0xC2, 0x30,
    0x23, 0x42, 0x38,
    0x23, 0xC2, 0x40,
    0x24, 0x32, 0x47,
    0x24, 0xB2, 0x4F,
    0x25, 0x32, 0x56,
    0x25, 0xA2, 0x5E,
    0x26, 0x22, 0x66,
    0x26, 0x92, 0x6D,
    0x27, 0x12, 0x74,
    0x27, 0x82, 0x7B,
    0x27, 0xF2, 0x83,
    0x28, 0x62, 0x8A,
    0x28, 0xD2, 0x91,
    0x29, 0x42, 0x98,
    0x29, 0xC2, 0x9E,
    0x2A, 0x12, 0xA5,
    0x2A, 0x82, 0xAC,
    0x2A, 0xF2, 0xB3,
    0x2B, 0x72, 0xBA,
    0x2B, 0xE2, 0xC2,
    0x2C, 0x62, 0xCA,
    0x2C, 0xE2, 0xD1,
    0x2D, 0x52, 0xD9,
    0x2E, 0x22, 0xE6,
    0x2E, 0xA2, 0xEE,
    0x2F, 0x12, 0xF5,
    0x2F, 0x82, 0xFB,
    0x2F, 0xF3, 0x02,
    0x30, 0x53, 0x08,
    0x30, 0xB3, 0x0E,
    0x31, 0x13, 0x14,
    0x31, 0x73, 0x1A,
    0x31, 0xD3, 0x1F,
    0x32, 0x13, 0x24,
    0x32, 0x63, 0x29,
    0x32, 0xC3, 0x2F,
    0x33, 0x23, 0x35,
    0x33, 0x83, 0x3A,
    0x33, 0xD3, 0x40,
    0x34, 0x33, 0x46,
    0x34, 0x93, 0x4C,
    0x34, 0xE3, 0x51,
    0x35, 0x43, 0x57,
    0x35, 0xA3, 0x5D,
    0x35, 0xF3, 0x62,
    0x36, 0x53, 0x68,
    0x36, 0xB3, 0x6E,
    0x37, 0x13, 0x74,
    0x37, 0x73, 0x7A,
    0x37, 0xD3, 0x80,
    0x38, 0x33, 0x86,
    0x38, 0x93, 0x8C,
    0x38, 0xF3, 0x92,
    0x39, 0x63, 0x99,
    0x39, 0xC3, 0x9F,
    0x3A, 0x13, 0xA5,
    0x3A, 0x83, 0xAB,
    0x3A, 0xF3, 0xB2,
    0x3B, 0x63, 0xB9,
    0x3B, 0xD3, 0xC1,
    0x3C, 0x43, 0xC8,
    0x3C, 0xC3, 0xD0,
    0x3D, 0x43, 0xD8,
    0x3D, 0xD3, 0xE0,
    0x3E, 0x43, 0xE8,
    0x3E, 0xC3, 0xF0,
    0x3F, 0x53, 0xF9,
    0x3F, 0xC3, 0xFC,
    0x3F, 0xC0, 0x00,

};
#endif//#if(_SCALER_TYPE == _RTD2472D)

#endif//#if(_GAMMA_FUNCTION == _ON)



#else


extern BYTE code tDITHER_SEQ_TABLE_0[];
extern BYTE code tDITHER_TABLE_10_TO_6[];
extern BYTE code tDITHER_TABLE_10_TO_8_D_DOMAIN[];
extern BYTE code tDITHER_TEMPOFFSET_TABLE[];//Hudson add Temporal offset table setting 20080725

#if((_SCALER_TYPE == _RTD2545LR) || (_SCALER_TYPE == _RTD247xRD) || (_SCALER_TYPE == _RTD248xRD))
extern BYTE code tDITHER_TABLE_10_TO_8_I_DOMAIN[];
#endif

#if(_GAMMA_FUNCTION == _ON)
#if(_SCALER_TYPE == _RTD2472D)
extern BYTE code tGAMMA_TABLE_RED[];
extern BYTE code tGAMMA_TABLE_GREEN[];
extern BYTE code tGAMMA_TABLE_BLUE[];
#elif((_SCALER_TYPE == _RTD2545LR) || (_SCALER_TYPE == _RTD247xRD) || (_SCALER_TYPE == _RTD248xRD))
extern BYTE code tLUTGAMMA_TABLE_RED[];    //20080422 +Sharon
extern BYTE code tLUTGAMMA_TABLE_GREEN[];
extern BYTE code tLUTGAMMA_TABLE_BLUE[];
#endif
#endif // End of #if(_GAMMA_FUNCTION == _ON)


#endif // End of #ifdef _ADJUST__


//----------------------------------------------------------------------------------------------------
// OD Table
//----------------------------------------------------------------------------------------------------

#if(_OD_SUPPORT == _ON)

#ifdef __MEMORY__

BYTE code tOD_TABLE_MIDDLE[] =
{//0812 sephinroth
#if(1)

0x00, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, // ( 0)
0x03, 0x00, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, // ( 1)
0x04, 0x03, 0x00, 0xfe, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, // ( 2)
0x06, 0x04, 0x03, 0x00, 0xfe, 0xfc, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, // ( 3)
0x09, 0x06, 0x05, 0x03, 0x00, 0xfe, 0xff, 0xff, 0x00, 0xff, 0xfe, 0xfa, 0xfa, 0xfa, 0xfd, 0xfd, 0xfa, 0xfa, 0xfa, 0xfa, 0xfa, 0xfa, 0xfd, 0xfd, 0xfa, 0xfa, 0xfa, 0xfd, 0xfa, 0xfa, 0xfa, 0xfa, 0xfa, // ( 4)
0x0b, 0x09, 0x06, 0x04, 0x03, 0x00, 0xfe, 0xff, 0x00, 0xfd, 0xfd, 0xfd, 0xfd, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, // ( 5)
0x11, 0x0b, 0x07, 0x05, 0x04, 0x02, 0x00, 0xfe, 0xff, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf5, 0xf7, 0xf2, 0xf0, // ( 6)
0x15, 0x11, 0x0b, 0x06, 0x06, 0x03, 0x02, 0x00, 0xfd, 0xfd, 0xfb, 0xfb, 0xfb, 0xfb, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf5, 0xf5, 0xf0, 0xf0, 0xeb, 0xe8, // ( 7)
0x17, 0x15, 0x0f, 0x0c, 0x09, 0x06, 0x04, 0x03, 0x00, 0xfd, 0xfd, 0xfa, 0xfa, 0xfa, 0xfb, 0xfa, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf3, 0xf1, 0xf4, 0xed, 0xec, 0xe7, 0xe7, 0xe4, // ( 8)
0x19, 0x17, 0x12, 0x0e, 0x0b, 0x09, 0x06, 0x04, 0x02, 0x00, 0xff, 0xfd, 0xfc, 0xfa, 0xfa, 0xf8, 0xf8, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf1, 0xf0, 0xee, 0xee, 0xeb, 0xeb, 0xeb, 0xe4, 0xe2, 0xdf, // ( 9)
0x1b, 0x19, 0x14, 0x11, 0x0d, 0x0b, 0x08, 0x06, 0x03, 0x02, 0x00, 0xff, 0xfd, 0xfa, 0xfa, 0xf8, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf1, 0xf0, 0xee, 0xee, 0xeb, 0xe9, 0xec, 0xe4, 0xe4, 0xdd, 0xdd, 0xda, // (10)
0x1d, 0x1b, 0x17, 0x13, 0x10, 0x0d, 0x0b, 0x08, 0x06, 0x04, 0x03, 0x00, 0xfe, 0xfd, 0xfa, 0xfa, 0xf3, 0xf3, 0xf3, 0xf3, 0xf1, 0xf0, 0xee, 0xec, 0xec, 0xe9, 0xe8, 0xe8, 0xe4, 0xdd, 0xdc, 0xdc, 0xd9, // (11)
0x15, 0x1c, 0x18, 0x16, 0x12, 0x10, 0x0d, 0x0b, 0x08, 0x07, 0x04, 0x03, 0x00, 0xfe, 0xfd, 0xfa, 0xf8, 0xf3, 0xf3, 0xf3, 0xf1, 0xf0, 0xee, 0xeb, 0xe9, 0xe9, 0xe5, 0xe4, 0xe2, 0xdc, 0xd6, 0xd8, 0xd4, // (12)
0x14, 0x20, 0x1a, 0x19, 0x15, 0x12, 0x11, 0x0e, 0x0c, 0x09, 0x07, 0x06, 0x03, 0x00, 0xfe, 0xfc, 0xfa, 0xf8, 0xf3, 0xf3, 0xf3, 0xf0, 0xee, 0xeb, 0xe9, 0xe5, 0xe5, 0xe4, 0xe1, 0xd6, 0xd6, 0xd4, 0xd0, // (13)
0x17, 0x21, 0x1c, 0x1c, 0x1b, 0x17, 0x14, 0x11, 0x0f, 0x0c, 0x0a, 0x08, 0x05, 0x03, 0x00, 0xfd, 0xfc, 0xfa, 0xf8, 0xf3, 0xf3, 0xf1, 0xef, 0xec, 0xe9, 0xe5, 0xe3, 0xe3, 0xe1, 0xd6, 0xd6, 0xd3, 0xce, // (14)
0x19, 0x24, 0x1e, 0x1e, 0x1e, 0x1b, 0x18, 0x13, 0x11, 0x11, 0x0d, 0x0b, 0x09, 0x06, 0x03, 0x00, 0xfd, 0xfb, 0xf9, 0xf8, 0xf3, 0xf3, 0xf0, 0xee, 0xe9, 0xe5, 0xe3, 0xe2, 0xdf, 0xd6, 0xd5, 0xd3, 0xce, // (15)
0x1b, 0x25, 0x21, 0x21, 0x20, 0x20, 0x1e, 0x16, 0x16, 0x16, 0x12, 0x10, 0x0d, 0x0b, 0x07, 0x03, 0x00, 0xfd, 0xfc, 0xf9, 0xf7, 0xf3, 0xf1, 0xee, 0xeb, 0xe5, 0xe3, 0xe2, 0xdf, 0xd5, 0xd5, 0xd1, 0xcc, // (16)
0x1c, 0x17, 0x21, 0x20, 0x22, 0x22, 0x1e, 0x18, 0x18, 0x18, 0x17, 0x14, 0x11, 0x0d, 0x0a, 0x07, 0x06, 0x00, 0xfd, 0xfc, 0xf7, 0xf7, 0xf2, 0xf0, 0xec, 0xe8, 0xe2, 0xe1, 0xdf, 0xd6, 0xd5, 0xd1, 0xcc, // (17)
0x1f, 0x1b, 0x20, 0x1f, 0x20, 0x23, 0x21, 0x1b, 0x1b, 0x1b, 0x1b, 0x18, 0x14, 0x12, 0x0e, 0x0b, 0x08, 0x03, 0x00, 0xfd, 0xfa, 0xf7, 0xf3, 0xf1, 0xec, 0xe8, 0xe2, 0xe1, 0xde, 0xd6, 0xd6, 0xd0, 0xcb, // (18)
0x20, 0x1d, 0x20, 0x1f, 0x21, 0x22, 0x20, 0x1d, 0x1d, 0x1d, 0x1e, 0x1b, 0x18, 0x15, 0x12, 0x10, 0x0b, 0x08, 0x05, 0x00, 0xfd, 0xfa, 0xf7, 0xf2, 0xee, 0xe8, 0xe2, 0xe1, 0xde, 0xd7, 0xd6, 0xd1, 0xcc, // (19)
0x24, 0x1e, 0x1f, 0x1f, 0x1f, 0x23, 0x21, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x1b, 0x18, 0x15, 0x12, 0x0f, 0x0c, 0x08, 0x04, 0x00, 0xfd, 0xfa, 0xf5, 0xf0, 0xeb, 0xe5, 0xe2, 0xde, 0xd7, 0xd6, 0xd1, 0xcc, // (20)
0x28, 0x1b, 0x1b, 0x1e, 0x1c, 0x22, 0x21, 0x1f, 0x1f, 0x1f, 0x1f, 0x1e, 0x1b, 0x18, 0x17, 0x14, 0x11, 0x0e, 0x0b, 0x09, 0x04, 0x00, 0xfd, 0xfd, 0xf2, 0xee, 0xe8, 0xe2, 0xdf, 0xd9, 0xd7, 0xd2, 0xce, // (21)
0x22, 0x17, 0x1a, 0x1d, 0x1b, 0x24, 0x20, 0x21, 0x21, 0x21, 0x1f, 0x1e, 0x1b, 0x19, 0x18, 0x15, 0x12, 0x0e, 0x0f, 0x0b, 0x08, 0x03, 0x00, 0xfc, 0xf7, 0xf1, 0xe9, 0xe5, 0xdf, 0xd7, 0xd7, 0xd3, 0xd0, // (22)
0x1f, 0x16, 0x19, 0x1b, 0x1a, 0x21, 0x1f, 0x1f, 0x20, 0x20, 0x20, 0x1e, 0x1c, 0x1b, 0x18, 0x17, 0x13, 0x0e, 0x0d, 0x0d, 0x0a, 0x08, 0x05, 0x00, 0xfd, 0xf4, 0xee, 0xe6, 0xe2, 0xdb, 0xd9, 0xd7, 0xd2, // (23)
0x1a, 0x15, 0x18, 0x1a, 0x19, 0x1f, 0x1e, 0x1f, 0x20, 0x20, 0x20, 0x1e, 0x1e, 0x1b, 0x19, 0x18, 0x15, 0x12, 0x10, 0x0f, 0x0d, 0x0b, 0x08, 0x06, 0x00, 0xfa, 0xf3, 0xee, 0xe1, 0xdc, 0xdc, 0xd9, 0xd4, // (24)
0x18, 0x13, 0x17, 0x17, 0x17, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x19, 0x19, 0x19, 0x17, 0x16, 0x14, 0x13, 0x12, 0x0f, 0x0e, 0x0c, 0x09, 0x05, 0x00, 0xfa, 0xf3, 0xeb, 0xdf, 0xdf, 0xdc, 0xd9, // (25)
0x16, 0x11, 0x16, 0x16, 0x15, 0x15, 0x16, 0x16, 0x16, 0x16, 0x16, 0x16, 0x17, 0x16, 0x16, 0x16, 0x16, 0x15, 0x14, 0x13, 0x12, 0x0f, 0x0d, 0x0c, 0x09, 0x06, 0x00, 0xfa, 0xf3, 0xe5, 0xe4, 0xe0, 0xdd, // (26)
0x14, 0x10, 0x10, 0x10, 0x14, 0x13, 0x14, 0x13, 0x13, 0x14, 0x13, 0x15, 0x15, 0x15, 0x15, 0x15, 0x15, 0x12, 0x13, 0x12, 0x11, 0x0f, 0x0e, 0x0d, 0x0a, 0x08, 0x06, 0x00, 0xf9, 0xee, 0xe9, 0xe4, 0xe1, // (27)
0x13, 0x10, 0x10, 0x10, 0x12, 0x11, 0x11, 0x11, 0x12, 0x11, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x11, 0x11, 0x11, 0x11, 0x10, 0x0e, 0x0d, 0x0c, 0x0a, 0x09, 0x09, 0x06, 0x00, 0xfa, 0xf0, 0xeb, 0xe6, // (28)
0x12, 0x10, 0x10, 0x11, 0x11, 0x11, 0x11, 0x10, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x10, 0x10, 0x10, 0x0f, 0x0e, 0x0d, 0x0c, 0x0c, 0x0a, 0x09, 0x09, 0x09, 0x07, 0x00, 0xf7, 0xf0, 0xee, // (29)
0x11, 0x0d, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0a, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0a, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0a, 0x09, 0x09, 0x09, 0x08, 0x07, 0x00, 0xf6, 0xf1, // (30)
0x0b, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0xf7, // (31)
0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, // (32)


#else

0x00, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, // ( 0)
0x03, 0x00, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, // ( 1)
0x04, 0x03, 0x00, 0xfe, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, // ( 2)
0x06, 0x04, 0x03, 0x00, 0xfe, 0xfc, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, // ( 3)
0x09, 0x06, 0x05, 0x03, 0x00, 0xfe, 0xff, 0xff, 0x00, 0xff, 0xfe, 0xfa, 0xfa, 0xfa, 0xfd, 0xfd, 0xfa, 0xfa, 0xfa, 0xfa, 0xfa, 0xfa, 0xfd, 0xfd, 0xfa, 0xfa, 0xfa, 0xfd, 0xfa, 0xfa, 0xfa, 0xfa, 0xfa, // ( 4)
0x0b, 0x09, 0x06, 0x04, 0x03, 0x00, 0xfe, 0xff, 0x00, 0xfd, 0xfd, 0xfd, 0xfd, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, // ( 5)
0x11, 0x0b, 0x07, 0x05, 0x04, 0x02, 0x00, 0xfe, 0xff, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf5, 0xf7, 0xf2, 0xf0, // ( 6)
0x15, 0x11, 0x0b, 0x06, 0x06, 0x03, 0x02, 0x00, 0xfd, 0xfd, 0xfb, 0xfb, 0xfb, 0xfb, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf5, 0xf5, 0xf0, 0xf0, 0xeb, 0xe8, // ( 7)
0x17, 0x15, 0x0f, 0x0c, 0x09, 0x06, 0x04, 0x03, 0x00, 0xfd, 0xfd, 0xfa, 0xfa, 0xfa, 0xfb, 0xfa, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf3, 0xf1, 0xf4, 0xed, 0xec, 0xe7, 0xe7, 0xe4, // ( 8)
0x19, 0x17, 0x12, 0x0e, 0x0b, 0x09, 0x06, 0x04, 0x02, 0x00, 0xff, 0xfd, 0xfc, 0xfa, 0xfa, 0xf8, 0xf8, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf1, 0xf0, 0xee, 0xee, 0xeb, 0xeb, 0xeb, 0xe4, 0xe2, 0xdf, // ( 9)
0x1b, 0x19, 0x14, 0x11, 0x0d, 0x0b, 0x08, 0x06, 0x03, 0x02, 0x00, 0xff, 0xfd, 0xfa, 0xfa, 0xf8, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf1, 0xf0, 0xee, 0xee, 0xeb, 0xe9, 0xec, 0xe4, 0xe4, 0xdd, 0xdd, 0xda, // (10)
0x1d, 0x1b, 0x17, 0x13, 0x10, 0x0d, 0x0b, 0x08, 0x06, 0x04, 0x03, 0x00, 0xfe, 0xfd, 0xfa, 0xfa, 0xf3, 0xf3, 0xf3, 0xf3, 0xf1, 0xf0, 0xee, 0xec, 0xec, 0xe9, 0xe8, 0xe8, 0xe4, 0xdd, 0xdc, 0xdc, 0xd9, // (11)
0x21, 0x1c, 0x18, 0x16, 0x12, 0x10, 0x0d, 0x0b, 0x08, 0x07, 0x04, 0x03, 0x00, 0xfe, 0xfd, 0xfa, 0xf8, 0xf3, 0xf3, 0xf3, 0xf1, 0xf0, 0xee, 0xeb, 0xe9, 0xe9, 0xe5, 0xe4, 0xe2, 0xdc, 0xd6, 0xd8, 0xd4, // (12)
0x24, 0x20, 0x1a, 0x19, 0x15, 0x12, 0x11, 0x0e, 0x0c, 0x09, 0x07, 0x06, 0x03, 0x00, 0xfe, 0xfc, 0xfa, 0xf8, 0xf3, 0xf3, 0xf3, 0xf0, 0xee, 0xeb, 0xe9, 0xe5, 0xe5, 0xe4, 0xe1, 0xd6, 0xd6, 0xd4, 0xd0, // (13)
0x27, 0x21, 0x1c, 0x1c, 0x1b, 0x17, 0x14, 0x11, 0x0f, 0x0c, 0x0a, 0x08, 0x05, 0x03, 0x00, 0xfd, 0xfc, 0xfa, 0xf8, 0xf3, 0xf3, 0xf1, 0xef, 0xec, 0xe9, 0xe5, 0xe3, 0xe3, 0xe1, 0xd6, 0xd6, 0xd3, 0xce, // (14)
0x29, 0x24, 0x1e, 0x1e, 0x1e, 0x1b, 0x18, 0x13, 0x11, 0x11, 0x0d, 0x0b, 0x09, 0x06, 0x03, 0x00, 0xfd, 0xfb, 0xf9, 0xf8, 0xf3, 0xf3, 0xf0, 0xee, 0xe9, 0xe5, 0xe3, 0xe2, 0xdf, 0xd6, 0xd5, 0xd3, 0xce, // (15)
0x2b, 0x25, 0x21, 0x20, 0x20, 0x20, 0x1e, 0x16, 0x16, 0x16, 0x12, 0x10, 0x0d, 0x0b, 0x07, 0x03, 0x00, 0xfd, 0xfc, 0xf9, 0xf7, 0xf3, 0xf1, 0xee, 0xeb, 0xe5, 0xe3, 0xe2, 0xdf, 0xd5, 0xd5, 0xd1, 0xcc, // (16)
0x2c, 0x27, 0x23, 0x22, 0x22, 0x22, 0x1e, 0x18, 0x18, 0x18, 0x17, 0x14, 0x11, 0x0d, 0x0a, 0x07, 0x06, 0x00, 0xfd, 0xfc, 0xf7, 0xf7, 0xf2, 0xf0, 0xec, 0xe8, 0xe2, 0xe1, 0xdf, 0xd6, 0xd5, 0xd1, 0xcc, // (17)
0x2f, 0x2b, 0x25, 0x25, 0x25, 0x23, 0x21, 0x1b, 0x1b, 0x1b, 0x1b, 0x18, 0x14, 0x12, 0x0e, 0x0b, 0x08, 0x03, 0x00, 0xfd, 0xfa, 0xf7, 0xf3, 0xf1, 0xec, 0xe8, 0xe2, 0xe1, 0xde, 0xd6, 0xd6, 0xd0, 0xcb, // (18)
0x31, 0x2d, 0x27, 0x25, 0x25, 0x22, 0x20, 0x1d, 0x1d, 0x1d, 0x1e, 0x1b, 0x18, 0x15, 0x12, 0x10, 0x0b, 0x08, 0x05, 0x00, 0xfd, 0xfa, 0xf7, 0xf2, 0xee, 0xe8, 0xe2, 0xe1, 0xde, 0xd7, 0xd6, 0xd1, 0xcc, // (19)
0x32, 0x2e, 0x27, 0x25, 0x25, 0x23, 0x21, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x1b, 0x18, 0x15, 0x12, 0x0f, 0x0c, 0x08, 0x04, 0x00, 0xfd, 0xfa, 0xf5, 0xf0, 0xeb, 0xe5, 0xe2, 0xde, 0xd7, 0xd6, 0xd1, 0xcc, // (20)
0x32, 0x2b, 0x27, 0x25, 0x25, 0x24, 0x23, 0x1f, 0x1f, 0x1f, 0x1f, 0x1e, 0x1b, 0x18, 0x17, 0x14, 0x11, 0x0e, 0x0b, 0x09, 0x04, 0x00, 0xfd, 0xfd, 0xf2, 0xee, 0xe8, 0xe2, 0xdf, 0xd9, 0xd7, 0xd2, 0xce, // (21)
0x2e, 0x27, 0x26, 0x25, 0x25, 0x25, 0x23, 0x21, 0x21, 0x21, 0x1f, 0x1e, 0x1b, 0x19, 0x18, 0x15, 0x12, 0x0e, 0x0f, 0x0b, 0x08, 0x03, 0x00, 0xfc, 0xf7, 0xf1, 0xe9, 0xe5, 0xdf, 0xd7, 0xd7, 0xd3, 0xd0, // (22)
0x2b, 0x26, 0x24, 0x24, 0x25, 0x25, 0x24, 0x20, 0x20, 0x20, 0x20, 0x1e, 0x1c, 0x1b, 0x18, 0x17, 0x13, 0x0e, 0x0d, 0x0d, 0x0a, 0x08, 0x05, 0x00, 0xfd, 0xf4, 0xee, 0xe6, 0xe2, 0xdb, 0xd9, 0xd7, 0xd2, // (23)
0x29, 0x25, 0x24, 0x23, 0x24, 0x24, 0x23, 0x20, 0x20, 0x20, 0x20, 0x1e, 0x1e, 0x1b, 0x19, 0x18, 0x15, 0x12, 0x10, 0x0f, 0x0d, 0x0b, 0x08, 0x06, 0x00, 0xfa, 0xf3, 0xee, 0xe1, 0xdc, 0xdc, 0xd9, 0xd4, // (24)
0x26, 0x23, 0x22, 0x22, 0x22, 0x22, 0x21, 0x1f, 0x1f, 0x1f, 0x1e, 0x1e, 0x1c, 0x1b, 0x1b, 0x19, 0x16, 0x14, 0x13, 0x12, 0x0f, 0x0e, 0x0c, 0x09, 0x05, 0x00, 0xfa, 0xf3, 0xeb, 0xdf, 0xdf, 0xdc, 0xd9, // (25)
0x24, 0x21, 0x21, 0x20, 0x20, 0x1f, 0x1f, 0x1d, 0x1d, 0x1d, 0x1d, 0x1d, 0x1b, 0x1a, 0x19, 0x18, 0x17, 0x15, 0x14, 0x13, 0x12, 0x0f, 0x0d, 0x0c, 0x09, 0x06, 0x00, 0xfa, 0xf3, 0xe5, 0xe4, 0xe0, 0xdd, // (26)
0x21, 0x1e, 0x1c, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1a, 0x1a, 0x19, 0x18, 0x17, 0x15, 0x13, 0x12, 0x11, 0x0f, 0x0e, 0x0d, 0x0a, 0x08, 0x06, 0x00, 0xf9, 0xee, 0xe9, 0xe4, 0xe1, // (27)
0x1b, 0x19, 0x17, 0x19, 0x19, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x15, 0x17, 0x17, 0x17, 0x15, 0x14, 0x13, 0x12, 0x11, 0x10, 0x0e, 0x0d, 0x0c, 0x0a, 0x09, 0x09, 0x06, 0x00, 0xfa, 0xf0, 0xeb, 0xe6, // (28)
0x15, 0x14, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x10, 0x10, 0x10, 0x0f, 0x0e, 0x0d, 0x0c, 0x0c, 0x0a, 0x09, 0x09, 0x09, 0x07, 0x00, 0xf7, 0xf0, 0xee, // (29)
0x11, 0x0d, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0a, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0a, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0a, 0x09, 0x09, 0x09, 0x08, 0x07, 0x00, 0xf6, 0xf1, // (30)
0x0b, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0xf7, // (31)
0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, // (32)

#endif
/*
    0x00, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, // ( 0)
    0x03, 0x00, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, // ( 1)
    0x04, 0x03, 0x00, 0xfe, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, 0xfd, // ( 2)
    0x06, 0x04, 0x03, 0x00, 0xfe, 0xfc, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, // ( 3)
    0x09, 0x06, 0x05, 0x03, 0x00, 0xfe, 0xff, 0xff, 0x00, 0xff, 0xfe, 0xfa, 0xfa, 0xfa, 0xfd, 0xfd, 0xfa, 0xfa, 0xfa, 0xfa, 0xfa, 0xfa, 0xfd, 0xfd, 0xfa, 0xfa, 0xfa, 0xfd, 0xfa, 0xfa, 0xfa, 0xfa, 0xfa, // ( 4)
    0x0b, 0x09, 0x06, 0x04, 0x03, 0x00, 0xfe, 0xff, 0x00, 0xfd, 0xfd, 0xfd, 0xfd, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, // ( 5)
    0x11, 0x0b, 0x07, 0x05, 0x04, 0x02, 0x00, 0xfe, 0xff, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf5, 0xf7, 0xf2, 0xf0, // ( 6)
    0x15, 0x11, 0x0b, 0x06, 0x06, 0x03, 0x02, 0x00, 0xfd, 0xfd, 0xfb, 0xfb, 0xfb, 0xfb, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xf5, 0xf5, 0xf0, 0xf0, 0xeb, 0xe8, // ( 7)
    0x17, 0x15, 0x0f, 0x0c, 0x09, 0x06, 0x04, 0x03, 0x00, 0xfd, 0xfd, 0xfa, 0xfa, 0xfa, 0xfb, 0xfa, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf3, 0xf1, 0xf4, 0xed, 0xec, 0xe7, 0xe7, 0xe4, // ( 8)
    0x19, 0x17, 0x12, 0x0e, 0x0b, 0x09, 0x06, 0x04, 0x02, 0x00, 0xff, 0xfd, 0xfc, 0xfa, 0xfa, 0xf8, 0xf8, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf1, 0xf0, 0xee, 0xee, 0xeb, 0xeb, 0xeb, 0xe4, 0xe2, 0xdf, // ( 9)
    0x1b, 0x19, 0x14, 0x11, 0x0d, 0x0b, 0x08, 0x06, 0x03, 0x02, 0x00, 0xff, 0xfd, 0xfa, 0xfa, 0xf8, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf1, 0xf0, 0xee, 0xee, 0xeb, 0xe9, 0xec, 0xe4, 0xe4, 0xdd, 0xdd, 0xda, // (10)
    0x1d, 0x1b, 0x17, 0x13, 0x10, 0x0d, 0x0b, 0x08, 0x06, 0x04, 0x03, 0x00, 0xfe, 0xfd, 0xfa, 0xfa, 0xf3, 0xf3, 0xf3, 0xf3, 0xf1, 0xf0, 0xee, 0xec, 0xec, 0xe9, 0xe8, 0xe8, 0xe4, 0xdd, 0xdc, 0xdc, 0xd9, // (11)
    0x21, 0x1c, 0x18, 0x16, 0x12, 0x10, 0x0d, 0x0b, 0x08, 0x07, 0x04, 0x03, 0x00, 0xfe, 0xfd, 0xfa, 0xf8, 0xf3, 0xf3, 0xf3, 0xf1, 0xf0, 0xee, 0xeb, 0xe9, 0xe9, 0xe5, 0xe4, 0xe2, 0xdc, 0xd6, 0xd8, 0xd4, // (12)
    0x24, 0x20, 0x1a, 0x19, 0x15, 0x12, 0x11, 0x0e, 0x0c, 0x09, 0x07, 0x06, 0x03, 0x00, 0xfe, 0xfc, 0xfa, 0xf8, 0xf3, 0xf3, 0xf3, 0xf0, 0xee, 0xeb, 0xe9, 0xe5, 0xe5, 0xe4, 0xe1, 0xd6, 0xd6, 0xd4, 0xd0, // (13)
    0x27, 0x21, 0x1c, 0x1c, 0x1b, 0x17, 0x14, 0x11, 0x0f, 0x0c, 0x0a, 0x08, 0x05, 0x03, 0x00, 0xfd, 0xfc, 0xfa, 0xf8, 0xf3, 0xf3, 0xf1, 0xef, 0xec, 0xe9, 0xe5, 0xe3, 0xe3, 0xe1, 0xd6, 0xd6, 0xd3, 0xce, // (14)
    0x29, 0x24, 0x1e, 0x1e, 0x1e, 0x1b, 0x18, 0x13, 0x11, 0x11, 0x0d, 0x0b, 0x09, 0x06, 0x03, 0x00, 0xfd, 0xfb, 0xf9, 0xf8, 0xf3, 0xf3, 0xf0, 0xee, 0xe9, 0xe5, 0xe3, 0xe2, 0xdf, 0xd6, 0xd5, 0xd3, 0xce, // (15)
    0x2b, 0x25, 0x21, 0x20, 0x20, 0x20, 0x1e, 0x16, 0x16, 0x16, 0x12, 0x10, 0x0d, 0x0b, 0x07, 0x03, 0x00, 0xfd, 0xfc, 0xf9, 0xf7, 0xf3, 0xf1, 0xee, 0xeb, 0xe5, 0xe3, 0xe2, 0xdf, 0xd5, 0xd5, 0xd1, 0xcc, // (16)
    0x2c, 0x27, 0x23, 0x22, 0x22, 0x22, 0x1e, 0x18, 0x18, 0x18, 0x17, 0x14, 0x11, 0x0d, 0x0a, 0x07, 0x06, 0x00, 0xfd, 0xfc, 0xf7, 0xf7, 0xf2, 0xf0, 0xec, 0xe8, 0xe2, 0xe1, 0xdf, 0xd6, 0xd5, 0xd1, 0xcc, // (17)
    0x2f, 0x2b, 0x25, 0x25, 0x25, 0x23, 0x21, 0x1b, 0x1b, 0x1b, 0x1b, 0x18, 0x14, 0x12, 0x0e, 0x0b, 0x08, 0x03, 0x00, 0xfd, 0xfa, 0xf7, 0xf3, 0xf1, 0xec, 0xe8, 0xe2, 0xe1, 0xde, 0xd6, 0xd6, 0xd0, 0xcb, // (18)
    0x31, 0x2d, 0x27, 0x25, 0x25, 0x22, 0x20, 0x1d, 0x1d, 0x1d, 0x1e, 0x1b, 0x18, 0x15, 0x12, 0x10, 0x0b, 0x08, 0x05, 0x00, 0xfd, 0xfa, 0xf7, 0xf2, 0xee, 0xe8, 0xe2, 0xe1, 0xde, 0xd7, 0xd6, 0xd1, 0xcc, // (19)
    0x32, 0x2e, 0x27, 0x25, 0x25, 0x23, 0x21, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x1b, 0x18, 0x15, 0x12, 0x0f, 0x0c, 0x08, 0x04, 0x00, 0xfd, 0xfa, 0xf5, 0xf0, 0xeb, 0xe5, 0xe2, 0xde, 0xd7, 0xd6, 0xd1, 0xcc, // (20)
    0x32, 0x2b, 0x27, 0x25, 0x25, 0x24, 0x23, 0x1f, 0x1f, 0x1f, 0x1f, 0x1e, 0x1b, 0x18, 0x17, 0x14, 0x11, 0x0e, 0x0b, 0x09, 0x04, 0x00, 0xfd, 0xfd, 0xf2, 0xee, 0xe8, 0xe2, 0xdf, 0xd9, 0xd7, 0xd2, 0xce, // (21)
    0x2e, 0x27, 0x26, 0x25, 0x25, 0x25, 0x23, 0x21, 0x21, 0x21, 0x1f, 0x1e, 0x1b, 0x19, 0x18, 0x15, 0x12, 0x0e, 0x0f, 0x0b, 0x08, 0x03, 0x00, 0xfc, 0xf7, 0xf1, 0xe9, 0xe5, 0xdf, 0xd7, 0xd7, 0xd3, 0xd0, // (22)
    0x2b, 0x26, 0x24, 0x24, 0x25, 0x25, 0x24, 0x20, 0x20, 0x20, 0x20, 0x1e, 0x1c, 0x1b, 0x18, 0x17, 0x13, 0x0e, 0x0d, 0x0d, 0x0a, 0x08, 0x05, 0x00, 0xfd, 0xf4, 0xee, 0xe6, 0xe2, 0xdb, 0xd9, 0xd7, 0xd2, // (23)
    0x29, 0x25, 0x24, 0x23, 0x24, 0x24, 0x23, 0x20, 0x20, 0x20, 0x20, 0x1e, 0x1e, 0x1b, 0x19, 0x18, 0x15, 0x12, 0x10, 0x0f, 0x0d, 0x0b, 0x08, 0x06, 0x00, 0xfa, 0xf3, 0xee, 0xe1, 0xdc, 0xdc, 0xd9, 0xd4, // (24)
    0x26, 0x23, 0x22, 0x22, 0x22, 0x22, 0x21, 0x1f, 0x1f, 0x1f, 0x1e, 0x1e, 0x1c, 0x1b, 0x1b, 0x19, 0x16, 0x14, 0x13, 0x12, 0x0f, 0x0e, 0x0c, 0x09, 0x05, 0x00, 0xfa, 0xf3, 0xeb, 0xdf, 0xdf, 0xdc, 0xd9, // (25)
    0x24, 0x21, 0x21, 0x20, 0x20, 0x1f, 0x1f, 0x1d, 0x1d, 0x1d, 0x1d, 0x1d, 0x1b, 0x1a, 0x19, 0x18, 0x17, 0x15, 0x14, 0x13, 0x12, 0x0f, 0x0d, 0x0c, 0x09, 0x06, 0x00, 0xfa, 0xf3, 0xe5, 0xe4, 0xe0, 0xdd, // (26)
    0x21, 0x1e, 0x1c, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1b, 0x1a, 0x1a, 0x19, 0x18, 0x17, 0x15, 0x13, 0x12, 0x11, 0x0f, 0x0e, 0x0d, 0x0a, 0x08, 0x06, 0x00, 0xf9, 0xee, 0xe9, 0xe4, 0xe1, // (27)
    0x1b, 0x19, 0x17, 0x19, 0x19, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, 0x15, 0x17, 0x17, 0x17, 0x15, 0x14, 0x13, 0x12, 0x11, 0x10, 0x0e, 0x0d, 0x0c, 0x0a, 0x09, 0x09, 0x06, 0x00, 0xfa, 0xf0, 0xeb, 0xe6, // (28)
    0x15, 0x14, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x10, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x10, 0x10, 0x10, 0x10, 0x0f, 0x0e, 0x0d, 0x0c, 0x0c, 0x0a, 0x09, 0x09, 0x09, 0x07, 0x00, 0xf7, 0xf0, 0xee, // (29)
    0x11, 0x0d, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0a, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0a, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0b, 0x0a, 0x09, 0x09, 0x09, 0x08, 0x07, 0x00, 0xf6, 0xf1, // (30)
    0x0b, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0xf7, // (31)
    0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, // (32)
*/
};

code BYTE *tOD_TABLE[] =
{
    tOD_TABLE_MIDDLE,
};

#else

extern code BYTE *tOD_TABLE[];

#endif // End of #ifdef __MEMORY__

#endif // End of #if(_OD_SUPPORT == _ON)

#endif  // End of #if(_PANEL_TYPE == _AU_LVDS_21_5_WUXGA)

